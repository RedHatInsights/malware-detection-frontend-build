{"version":3,"file":"js/Signature List.db7b009c40b928571554.js","mappings":"4WAaMA,GAAWC,EAAAA,EAAAA,OAAK,kBAAM,uGACtBC,GAAaD,EAAAA,EAAAA,OAAK,kBAAM,qFACxBE,GAAYF,EAAAA,EAAAA,OAAK,kBAAM,mEAuD7B,SAAeG,EAAAA,EAAAA,aArDI,WACf,IAAMC,GAAOC,EAAAA,EAAAA,KACPC,GAAcC,EAAAA,EAAAA,GAASC,EAAAA,IACvBC,GAAeF,EAAAA,EAAAA,GAASG,EAAAA,IAE9B,OAAO,kBAAC,aAAD,KACH,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,WAAS,EAACC,aAAW,GACxB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAiBC,MAAQ,kBAAC,KAAD,CACrBC,YAAU,EACVC,SAAU,QACVC,cAAeZ,EAAKa,cAAcC,EAAAA,EAAAA,oBAClCC,YAAc,kBAAC,IAAD,CAAMR,WAAS,GACzB,kBAAC,IAAD,KAAWP,EAAKa,cAAcC,EAAAA,EAAAA,qBAC9B,kBAAC,IAAD,KAAWd,EAAKa,cAAcC,EAAAA,EAAAA,sBAElCE,cAAe,uBACXC,KAAM,kLAGNC,OAAO,UAAUC,IAAI,uBACpBnB,EAAKa,cAAcC,EAAAA,EAAAA,qBALT,IAKwC,kBAAC,KAAD,QAGvD,8BACKd,EAAKa,cAAcC,EAAAA,EAAAA,kBACpB,kBAAC,KAAD,CACIM,MAAO,yCACPC,UAAU,8CACVC,MAAO,CAAEC,cAAe,eAOhD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMhB,WAAS,GACX,kBAAC,IAAD,CAAUiB,GAAI,EAAGC,GAAI,IACjB,kBAAC,EAAAC,SAAD,CAAUC,SAAU,kBAAC,IAAD,OAAa,kBAAC9B,EAAeK,KAErD,kBAAC,IAAD,CAAUsB,GAAI,EAAGC,GAAI,IACjB,kBAAC,EAAAC,SAAD,CAAUC,SAAU,kBAAC,IAAD,OAAa,kBAAC7B,EAAD,CAAW8B,SAAU1B,EAAc2B,WAAYxB,MAEpF,kBAAC,IAAD,CAAUyB,KAAM,IACZ,kBAAC,EAAAJ,SAAD,CAAUC,SAAU,kBAAC,IAAD,OAAa,kBAAChC,EAAD","sources":["webpack:///./src/Routes/Signatures/Signatures.js"],"sourcesContent":["import { GET_SIGNATURE_PAGE, GET_TIME_SERIES_STATS } from '../../operations/queries';\nimport { Grid, GridItem, Split, SplitItem } from '@patternfly/react-core';\nimport React, { Suspense, lazy } from 'react';\nimport { OutlinedQuestionCircleIcon, ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { Popover } from '@patternfly/react-core';\nimport Loading from '../../Components/Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport { useQuery } from '@apollo/client';\nimport { withRouter } from 'react-router-dom';\n\nconst SigTable = lazy(() => import(/* webpackChunkName: 'SigTable' */ '../../Components/SigTable/SigTable'));\nconst StatusCard = lazy(() => import(/* webpackChunkName: 'StatusCard' */ '../../Components/StatusCard/StatusCard'));\nconst ChartCard = lazy(() => import(/* webpackChunkName: 'ChartCard' */ '../../Components/ChartCard/ChartCard'));\n\nconst Signatures = () => {\n    const intl = useIntl();\n    const sigPageData = useQuery(GET_SIGNATURE_PAGE);\n    const chartCmpData = useQuery(GET_TIME_SERIES_STATS);\n\n    return <React.Fragment>\n        <PageHeader>\n            <Split hasGutter isWrappable>\n                <SplitItem>\n                    <PageHeaderTitle title={(<Popover\n                        enableFlip\n                        position={'right'}\n                        headerContent={intl.formatMessage(messages.headerPopoverTitle)}\n                        bodyContent={(<Grid hasGutter>\n                            <GridItem>{intl.formatMessage(messages.headerPopoverBody1)}</GridItem>\n                            <GridItem>{intl.formatMessage(messages.headerPopoverBody2)}</GridItem>\n                        </Grid>)}\n                        footerContent={<a\n                            href={'https://access.redhat.com/documentation/en-us/red_hat_insights/2021/html/' +\n                            'assessing_and_reporting_malware_signatures_on_rhel_systems_with_the_insights_for' +\n                            '_rhel_malware_service/'}\n                            target=\"__blank\" rel=\"noopener noreferrer\">\n                            {intl.formatMessage(messages.headerPopoverFooter)} <ExternalLinkAltIcon />\n                        </a>}\n                    >\n                        <span>\n                            {intl.formatMessage(messages.malwareDetection)}\n                            <OutlinedQuestionCircleIcon\n                                color={'var(--pf-global--secondary-color--100)'}\n                                className=\"pf-u-ml-sm pointer cves-header-questionmark\"\n                                style={{ verticalAlign: '-2' }}\n                            />\n                        </span>\n                    </Popover>)} />\n                </SplitItem>\n            </Split>\n        </PageHeader>\n        <Main>\n            <Grid hasGutter>\n                <GridItem md={6} sm={12}>\n                    <Suspense fallback={<Loading />}><StatusCard {...sigPageData} /></Suspense>\n                </GridItem>\n                <GridItem md={6} sm={12}>\n                    <Suspense fallback={<Loading />}><ChartCard sysStats={sigPageData}  chartStats={chartCmpData}/></Suspense>\n                </GridItem>\n                <GridItem span={12}>\n                    <Suspense fallback={<Loading />}><SigTable /></Suspense>\n                </GridItem>\n            </Grid>\n        </Main>\n    </React.Fragment>;\n};\n\nexport default withRouter(Signatures);\n"],"names":["SigTable","lazy","StatusCard","ChartCard","withRouter","intl","useIntl","sigPageData","useQuery","GET_SIGNATURE_PAGE","chartCmpData","GET_TIME_SERIES_STATS","hasGutter","isWrappable","title","enableFlip","position","headerContent","formatMessage","messages","bodyContent","footerContent","href","target","rel","color","className","style","verticalAlign","md","sm","Suspense","fallback","sysStats","chartStats","span"],"sourceRoot":""}