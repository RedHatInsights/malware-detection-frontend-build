{"version":3,"file":"js/779.da759aa1f85ab0d6662e.js","mappings":"uPAYMA,EAAW,CACbC,KAAMC,IAAAA,OACNC,QAASD,IAAAA,KACTE,MAAOF,IAAAA,QAGLG,EAAS,iBAAiD,SAA3CC,OAAOC,SAASC,SAASC,MAAM,KAAK,GAAgB,QAAU,IAG7EC,EAAsB,SAACC,GACzB,IAAIC,EAAS,gBAAH,OAAmBD,EAAGE,YAAtB,YAAqCF,EAAGG,QAAUH,EAAGI,aAAe,GAAK,0CAInF,OAHAH,GAAUD,EAAGG,OAAH,uBAA4BH,EAAGK,UAA/B,6BAA6DL,EAAGM,UAAhE,0BAA2FN,EAAGG,QAAW,IACnHF,GAAUD,EAAGO,KAAH,yBAA4BP,EAAGQ,YAA/B,mBAAqDC,mBAAmBT,EAAGO,OAAU,KACrFP,EAAGI,aAAH,0BAAqCJ,EAAGI,cAAiB,KAIjEM,EAAoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,MAAZ,OAAyB,8BAC9CA,EACD,kBAAC,IAAD,CACIC,IAAKD,EACLE,SAAUC,EAAAA,EAAAA,MACVC,QAAS,6BAAML,IAEf,0BAAM,aAAW,UAAjB,IACS,kBAAC,KAAD","sources":["webpack:///./src/Components/Common.js"],"sourcesContent":["import {\n    Tooltip,\n    TooltipPosition\n} from '@patternfly/react-core/dist/esm/components/Tooltip/';\n\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button';\nimport OutlinedQuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon';\nimport React from 'react';\nimport propTypes from 'prop-types';\n\nconst link = (desc, url = '#') => <Button isInline component='a' variant='link' href={url}>{desc}</Button>;\n\nconst gqlProps = {\n    data: propTypes.object,\n    loading: propTypes.bool,\n    error: propTypes.object\n};\n\nconst isBeta = () => window.location.pathname.split('/')[1] === 'beta' ? '/beta' : '';\n\n// Parse the match.metadata object and return a string of its 'key: value' items each on a separate line\nconst expandMatchMetadata = (md) => {\n    let output = `Source Type: ${md.source_type} ${md.md5sum || md.process_name ? '' : '(no metadata: Match Source is missing)'}`;\n    output += md.md5sum ? `\\nFile Type: ${md.file_type}\\nFile Mime Type: ${md.mime_type}\\nFile MD5Sum: ${md.md5sum}` : '';\n    output += md.line ? `\\nLine Number: ${md.line_number}\\nLine: ${decodeURIComponent(md.line)}` : '';\n    output += md.process_name ? `\\nProcess Name: ${md.process_name}` : '';\n    return output;\n};\n\nconst totalMatchesTitle = ({ tooltip, title }) => (<span>\n    {title}\n    <Tooltip\n        key={title}\n        position={TooltipPosition.right}\n        content={<div>{tooltip}</div>}\n    >\n        <span aria-label=\"Action\">\n            {` `}<OutlinedQuestionCircleIcon />\n        </span>\n    </Tooltip>\n</span>);\n\nexport { link, gqlProps, isBeta, totalMatchesTitle, expandMatchMetadata };\n"],"names":["gqlProps","data","propTypes","loading","error","isBeta","window","location","pathname","split","expandMatchMetadata","md","output","source_type","md5sum","process_name","file_type","mime_type","line","line_number","decodeURIComponent","totalMatchesTitle","tooltip","title","key","position","TooltipPosition","content"],"sourceRoot":""}