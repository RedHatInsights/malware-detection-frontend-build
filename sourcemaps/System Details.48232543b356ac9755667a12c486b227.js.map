{"version":3,"file":"js/System Details.e5eb6f62fcca56cd3dbb.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/layouts/Grid/Grid.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/layouts/Grid/GridItem.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/styles/sizes.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Breadcrumb/Breadcrumb.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Breadcrumb/BreadcrumbHeading.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Breadcrumb/BreadcrumbItem.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Breadcrumb/index.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/check-circle-icon.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Breadcrumb/breadcrumb.mjs","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/l_grid_item_Order.js","webpack:///./src/Components/Breadcrumb/Breadcrumb.js","webpack:///./src/Components/CodeEditor/CodeEditor.js","webpack:///./src/Components/MessageState/MessageState.js","webpack:///./src/Components/StatusLabel/StatusLabel.js","webpack:///./src/Components/SysDetailsTable/SysDetailsTable.js","webpack:///./src/Routes/Systems/Details.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/layouts/Grid/grid';\nimport { css } from '@patternfly/react-styles';\nimport { DeviceSizes } from '../../styles/sizes';\nimport * as gridToken from '@patternfly/react-tokens/dist/esm/l_grid_item_Order';\nimport { setBreakpointCssVars } from '../../helpers/util';\nexport const Grid = (_a) => {\n    var { children = null, className = '', component = 'div', hasGutter, span = null, order, style } = _a, props = __rest(_a, [\"children\", \"className\", \"component\", \"hasGutter\", \"span\", \"order\", \"style\"]);\n    const classes = [styles.grid, span && styles.modifiers[`all_${span}Col`]];\n    const Component = component;\n    Object.entries(DeviceSizes).forEach(([propKey, gridSpanModifier]) => {\n        const key = propKey;\n        const propValue = props[key];\n        if (propValue) {\n            classes.push(styles.modifiers[`all_${propValue}ColOn${gridSpanModifier}`]);\n        }\n        delete props[key];\n    });\n    return (React.createElement(Component, Object.assign({ className: css(...classes, hasGutter && styles.modifiers.gutter, className), style: style || order ? Object.assign(Object.assign({}, style), setBreakpointCssVars(order, gridToken.l_grid_item_Order.name)) : undefined }, props), children));\n};\nGrid.displayName = 'Grid';\n//# sourceMappingURL=Grid.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/layouts/Grid/grid';\nimport { css } from '@patternfly/react-styles';\nimport { DeviceSizes } from '../../styles/sizes';\nimport * as gridToken from '@patternfly/react-tokens/dist/esm/l_grid_item_Order';\nimport { setBreakpointCssVars } from '../../helpers/util';\nexport const GridItem = (_a) => {\n    var { children = null, className = '', component = 'div', span = null, rowSpan = null, offset = null, order, style } = _a, props = __rest(_a, [\"children\", \"className\", \"component\", \"span\", \"rowSpan\", \"offset\", \"order\", \"style\"]);\n    const classes = [\n        styles.gridItem,\n        span && styles.modifiers[`${span}Col`],\n        rowSpan && styles.modifiers[`${rowSpan}Row`],\n        offset && styles.modifiers[`offset_${offset}Col`]\n    ];\n    const Component = component;\n    Object.entries(DeviceSizes).forEach(([propKey, classModifier]) => {\n        const key = propKey;\n        const rowSpanKey = `${key}RowSpan`;\n        const offsetKey = `${key}Offset`;\n        const spanValue = props[key];\n        const rowSpanValue = props[rowSpanKey];\n        const offsetValue = props[offsetKey];\n        if (spanValue) {\n            classes.push(styles.modifiers[`${spanValue}ColOn${classModifier}`]);\n        }\n        if (rowSpanValue) {\n            classes.push(styles.modifiers[`${rowSpanValue}RowOn${classModifier}`]);\n        }\n        if (offsetValue) {\n            classes.push(styles.modifiers[`offset_${offsetValue}ColOn${classModifier}`]);\n        }\n        delete props[key];\n        delete props[rowSpanKey];\n        delete props[offsetKey];\n    });\n    return (React.createElement(Component, Object.assign({ className: css(...classes, className), style: style || order ? Object.assign(Object.assign({}, style), setBreakpointCssVars(order, gridToken.l_grid_item_Order.name)) : undefined }, props), children));\n};\nGridItem.displayName = 'GridItem';\n//# sourceMappingURL=GridItem.js.map","export var BaseSizes;\n(function (BaseSizes) {\n    BaseSizes[\"xs\"] = \"xs\";\n    BaseSizes[\"sm\"] = \"sm\";\n    BaseSizes[\"md\"] = \"md\";\n    BaseSizes[\"lg\"] = \"lg\";\n    BaseSizes[\"xl\"] = \"xl\";\n    BaseSizes[\"2xl\"] = \"2xl\";\n    BaseSizes[\"3xl\"] = \"3xl\";\n    BaseSizes[\"4xl\"] = \"4xl\";\n})(BaseSizes || (BaseSizes = {}));\nexport var DeviceSizes;\n(function (DeviceSizes) {\n    DeviceSizes[\"sm\"] = \"Sm\";\n    DeviceSizes[\"md\"] = \"Md\";\n    DeviceSizes[\"lg\"] = \"Lg\";\n    DeviceSizes[\"xl\"] = \"Xl\";\n    DeviceSizes[\"xl2\"] = \"_2xl\";\n})(DeviceSizes || (DeviceSizes = {}));\n//# sourceMappingURL=sizes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Breadcrumb = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst breadcrumb_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Breadcrumb/breadcrumb\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst helpers_1 = require(\"../../helpers\");\nconst Breadcrumb = (_a) => {\n    var { children = null, className = '', 'aria-label': ariaLabel = 'Breadcrumb', ouiaId, ouiaSafe = true } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", 'aria-label', \"ouiaId\", \"ouiaSafe\"]);\n    const ouiaProps = (0, helpers_1.useOUIAProps)(exports.Breadcrumb.displayName, ouiaId, ouiaSafe);\n    return (React.createElement(\"nav\", Object.assign({}, props, { \"aria-label\": ariaLabel, className: (0, react_styles_1.css)(breadcrumb_1.default.breadcrumb, className) }, ouiaProps),\n        React.createElement(\"ol\", { className: breadcrumb_1.default.breadcrumbList }, React.Children.map(children, (child, index) => {\n            const showDivider = index > 0;\n            if (React.isValidElement(child)) {\n                return React.cloneElement(child, { showDivider });\n            }\n            return child;\n        }))));\n};\nexports.Breadcrumb = Breadcrumb;\nexports.Breadcrumb.displayName = 'Breadcrumb';\n//# sourceMappingURL=Breadcrumb.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BreadcrumbHeading = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst angle_right_icon_1 = tslib_1.__importDefault(require('@patternfly/react-icons/dist/js/icons/angle-right-icon'));\nconst breadcrumb_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Breadcrumb/breadcrumb\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst BreadcrumbHeading = (_a) => {\n    var { children = null, className = '', to = undefined, target = undefined, component = 'a', showDivider } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"to\", \"target\", \"component\", \"showDivider\"]);\n    const Component = component;\n    return (React.createElement(\"li\", Object.assign({}, props, { className: (0, react_styles_1.css)(breadcrumb_1.default.breadcrumbItem, className) }),\n        showDivider && (React.createElement(\"span\", { className: breadcrumb_1.default.breadcrumbItemDivider },\n            React.createElement(angle_right_icon_1.default, null))),\n        React.createElement(\"h1\", { className: breadcrumb_1.default.breadcrumbHeading },\n            !to && component === 'button' && (React.createElement(\"button\", { className: (0, react_styles_1.css)(breadcrumb_1.default.breadcrumbLink, breadcrumb_1.default.modifiers.current), \"aria-current\": true, type: \"button\" }, children)),\n            to && (React.createElement(Component, { href: to, target: target, className: (0, react_styles_1.css)(breadcrumb_1.default.breadcrumbLink, breadcrumb_1.default.modifiers.current), \"aria-current\": \"page\" }, children)),\n            !to && component !== 'button' && React.createElement(React.Fragment, null, children))));\n};\nexports.BreadcrumbHeading = BreadcrumbHeading;\nexports.BreadcrumbHeading.displayName = 'BreadcrumbHeading';\n//# sourceMappingURL=BreadcrumbHeading.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BreadcrumbItem = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst angle_right_icon_1 = tslib_1.__importDefault(require('@patternfly/react-icons/dist/js/icons/angle-right-icon'));\nconst breadcrumb_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Breadcrumb/breadcrumb\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst BreadcrumbItem = (_a) => {\n    var { children = null, className: classNameProp = '', to = undefined, isActive = false, isDropdown = false, showDivider, target = undefined, component = 'a', render = undefined } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"to\", \"isActive\", \"isDropdown\", \"showDivider\", \"target\", \"component\", \"render\"]);\n    const Component = component;\n    const ariaCurrent = isActive ? 'page' : undefined;\n    const className = (0, react_styles_1.css)(breadcrumb_1.default.breadcrumbLink, isActive && breadcrumb_1.default.modifiers.current);\n    return (React.createElement(\"li\", Object.assign({}, props, { className: (0, react_styles_1.css)(breadcrumb_1.default.breadcrumbItem, classNameProp) }),\n        showDivider && (React.createElement(\"span\", { className: breadcrumb_1.default.breadcrumbItemDivider },\n            React.createElement(angle_right_icon_1.default, null))),\n        component === 'button' && (React.createElement(\"button\", { className: className, \"aria-current\": ariaCurrent, type: \"button\" }, children)),\n        isDropdown && React.createElement(\"span\", { className: (0, react_styles_1.css)(breadcrumb_1.default.breadcrumbDropdown) }, children),\n        render && render({ className, ariaCurrent }),\n        to && !render && (React.createElement(Component, { href: to, target: target, className: className, \"aria-current\": ariaCurrent }, children)),\n        !to && component !== 'button' && !isDropdown && children));\n};\nexports.BreadcrumbItem = BreadcrumbItem;\nexports.BreadcrumbItem.displayName = 'BreadcrumbItem';\n//# sourceMappingURL=BreadcrumbItem.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./Breadcrumb\"), exports);\ntslib_1.__exportStar(require(\"./BreadcrumbItem\"), exports);\ntslib_1.__exportStar(require(\"./BreadcrumbHeading\"), exports);\n//# sourceMappingURL=index.js.map","import { createIcon } from '../createIcon';\n\nexport const CheckCircleIconConfig = {\n  name: 'CheckCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const CheckCircleIcon = createIcon(CheckCircleIconConfig);\n\nexport default CheckCircleIcon;","import './breadcrumb.css';\nexport default {\n  \"breadcrumb\": \"pf-c-breadcrumb\",\n  \"breadcrumbDropdown\": \"pf-c-breadcrumb__dropdown\",\n  \"breadcrumbHeading\": \"pf-c-breadcrumb__heading\",\n  \"breadcrumbItem\": \"pf-c-breadcrumb__item\",\n  \"breadcrumbItemDivider\": \"pf-c-breadcrumb__item-divider\",\n  \"breadcrumbLink\": \"pf-c-breadcrumb__link\",\n  \"breadcrumbList\": \"pf-c-breadcrumb__list\",\n  \"dropdownToggle\": \"pf-c-dropdown__toggle\",\n  \"modifiers\": {\n    \"current\": \"pf-m-current\",\n    \"overpassFont\": \"pf-m-overpass-font\"\n  },\n  \"themeDark\": \"pf-theme-dark\"\n};","export const l_grid_item_Order = {\n  \"name\": \"--pf-l-grid--item--Order\",\n  \"value\": \"0\",\n  \"var\": \"var(--pf-l-grid--item--Order)\"\n};\nexport default l_grid_item_Order;","import { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core/dist/js/components/Breadcrumb/index';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst BreadcrumbComponent = ({ items }) => {\n    const last = items.pop();\n    return <Breadcrumb>\n        {items.map((value, key) => <BreadcrumbItem key={key} to={value.to}>{value.name}</BreadcrumbItem>)}\n        <BreadcrumbItem isActive>{last.name}</BreadcrumbItem>\n    </Breadcrumb>;\n};\n\nBreadcrumbComponent.propTypes = {\n    items: PropTypes.array\n};\n\nexport default BreadcrumbComponent;\n","import { LockIcon } from '@patternfly/react-icons/dist/esm/icons/lock-icon';\nimport MessageState from '../MessageState/MessageState';\nimport { CodeEditor as PfCodeEditor } from '@patternfly/react-code-editor';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nconst CodeEditor = ({ code, language, isReadOnly, isDownloadEnabled, isCopyEnabled, height = '400px' }) => {\n    const intl = useIntl();\n\n    return <PfCodeEditor\n        isDownloadEnabled={isDownloadEnabled}\n        isCopyEnabled={isCopyEnabled}\n        isReadOnly={isReadOnly}\n        isLanguageLabelVisible={language}\n        code={code}\n        language={language}\n        emptyState={\n            <MessageState className='' icon={LockIcon} variant='small' title={intl.formatMessage(messages.sigCompiled)}\n                text={intl.formatMessage(messages.sigCompiledBody)} />\n        }\n        height={height}\n    />;\n};\n\nCodeEditor.propTypes = {\n    code: PropTypes.any,\n    language: PropTypes.string,\n    isReadOnly: PropTypes.bool,\n    isCopyEnabled: PropTypes.bool,\n    isDownloadEnabled: PropTypes.bool,\n    height: PropTypes.string\n};\n\nCodeEditor.defaultProps = { codeType: 'Code' };\n\nexport default CodeEditor;\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant } from '@patternfly/react-core/dist/esm/components/EmptyState/index';\n\nimport CubesIcon from '@patternfly/react-icons/dist/esm/icons/cubes-icon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Title } from '@patternfly/react-core/dist/esm/components/Title/Title';\n\nconst MessageState = ({ className, children, icon, iconClass, iconStyle, text, title, variant }) =>\n    <EmptyState className={className} variant={variant}>\n        {icon !== 'none' && <EmptyStateIcon className={iconClass} style={iconStyle} icon={icon} />}\n        <Title headingLevel='h5' size='lg'>\n            {title}\n        </Title>\n        <EmptyStateBody style={{ marginBottom: '16px' }}>\n            {text}\n        </EmptyStateBody>\n        {children}\n    </EmptyState>;\n\nMessageState.propTypes = {\n    children: PropTypes.any,\n    icon: PropTypes.any,\n    iconClass: PropTypes.any,\n    iconStyle: PropTypes.any,\n    text: PropTypes.any,\n    title: PropTypes.string,\n    variant: PropTypes.any,\n    className: PropTypes.string\n};\n\nMessageState.defaultProps = {\n    icon: CubesIcon,\n    title: '',\n    variant: EmptyStateVariant.full\n};\n\nexport default MessageState;\n","import { Label } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nconst StatusLabel = ({ isDisabled, hasMatch, displayMatch = false }) => {\n    const intl = useIntl();\n    return displayMatch ? <div>\n        {hasMatch && <Label color='red'>{intl.formatMessage(messages.matched)}</Label>}\n        {!hasMatch && <Label color='blue'>{intl.formatMessage(messages.notMatched)}</Label>}\n    </div> : <div>\n        {isDisabled && <Label>{intl.formatMessage(messages.disabled)}</Label>}\n        {!isDisabled && <Label color='blue'>{intl.formatMessage(messages.enabled)}</Label>}\n    </div>;\n};\n\nStatusLabel.propTypes = {\n    isDisabled: PropTypes.bool,\n    hasMatch: PropTypes.bool,\n    displayMatch: PropTypes.bool\n};\nexport default StatusLabel;\n","import { Pagination, PaginationVariant } from '@patternfly/react-core/dist/esm/components/Pagination';\nimport React, { useEffect, useReducer } from 'react';\nimport {\n    SortByDirection,\n    Table,\n    TableBody,\n    TableHeader,\n    cellWidth,\n    expandable,\n    sortable,\n    info,\n    classNames\n} from '@patternfly/react-table/dist/esm/components/Table';\n\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport CodeEditor from '../CodeEditor/CodeEditor';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { expandMatchMetadata } from '../Common';\nimport { GET_SYSTEMS_DETAILS_TABLE_PAGE } from '../../operations/queries';\nimport MessageState from '../MessageState/MessageState';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { SearchIcon } from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport StatusLabel from '../StatusLabel/StatusLabel';\nimport messages from '../../Messages';\nimport propTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { useQuery } from '@apollo/client';\nimport InsightsLink from '@redhat-cloud-services/frontend-components/InsightsLink';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components/SkeletonTable';\n\nconst sortIndices = { 1: 'NAME', 2: 'LAST_STATUS', 3: 'LAST_MATCH_DATE', 4: 'MATCH_COUNT' };\nconst orderBy = ({ index, direction }) => `${sortIndices[index]}_${direction === SortByDirection.asc ? 'ASC' : 'DESC'}`;\n\nconst tableReducer = (state, action) => {\n    switch (action.type) {\n        case 'setTableVars':\n            return { ...state, tableVars: { ...state.tableVars, ...action.payload } };\n        case 'setSortBy':\n            return { ...state, sortBy: action.payload, tableVars: { ...state.tableVars, ...action.tableVars } };\n        case 'setRows':\n            return { ...state, rows: action.payload };\n    }\n\n    return state;\n};\n\nconst SysDetailsTable = ({ systemId }) => {\n    const intl = useIntl();\n    const initialState = {\n        tableVars: {\n            limit: 10,\n            offset: 0,\n            orderBy: 'LAST_MATCH_DATE_ASC',\n            ruleName: '',\n            systemId\n        },\n        sortBy: {\n            index: 2,\n            direction: SortByDirection.asc\n        },\n        rows: []\n    };\n    const [{ tableVars, sortBy, rows }, stateSet] = useReducer(tableReducer, {\n        ...initialState\n    });\n    const { data, loading, error } =\n        useQuery(GET_SYSTEMS_DETAILS_TABLE_PAGE, { variables: tableVars });\n    const columns = [\n        { title: intl.formatMessage(messages.sigName), cellFormatters: [expandable], transforms: [sortable, cellWidth(55)] },\n        { title: intl.formatMessage(messages.lastStatus), transforms: [cellWidth(10), sortable] },\n        { title: intl.formatMessage(messages.matched), transforms: [sortable, cellWidth(10)] },\n        {\n            title: intl.formatMessage(messages.totalMatches),\n            transforms: [\n                cellWidth(15),\n                info({\n                    tooltip: intl.formatMessage(messages.totalMatchesNote)\n                }),\n                sortable\n            ]\n        }\n    ];\n\n    const page = tableVars.offset / tableVars.limit + 1;\n\n    const filterConfigItems = [{\n        label: intl.formatMessage(messages.sig).toLowerCase(),\n        filterValues: {\n            key: 'text-filter',\n            onChange: (e, value) => stateSet({ type: 'setTableVars', payload: { ruleName: value, offset: 0 } }),\n            value: tableVars.ruleName,\n            placeholder: intl.formatMessage(messages.filterBy, { field: intl.formatMessage(messages.sig).toLowerCase() })\n        }\n    }];\n\n    const onSetPage = (e, page) => stateSet({ type: 'setTableVars', payload: { offset: page * tableVars.limit - tableVars.limit } });\n\n    const onPerPageSelect = (e, perPage) => stateSet({ type: 'setTableVars', payload: { limit: perPage, offset: 0 } });\n\n    const onSort = (e, index, direction) =>\n        stateSet({ type: 'setSortBy', payload: { index, direction }, tableVars: { orderBy: orderBy({ index, direction }), offset: 0 } });\n\n    const onCollapse = (e, rowKey, isOpen) => {\n        const collapseRows = [...rows];\n        const host = collapseRows[rowKey + 1].hostData;\n\n        collapseRows[rowKey] = { ...collapseRows[rowKey], isOpen };\n        collapseRows[rowKey + 1].cells = [{\n            title: <CodeEditor height='250px' code={`${host.matches.map((match, key) => `Match Source: ${match.source}\nOffset:${match.stringOffset}\nMatch Data: ${match.stringData}\nMatch Identifier: ${match.stringIdentifier}\nMatch Scan Date: ${new Date(match.scanDate).toUTCString()}\n${match.metadata ? expandMatchMetadata(JSON.parse(match.metadata.replaceAll('\\n', ''))) : ''}\n${host.matches.length > 1 && key !== host.matches.length - 1 ? `~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n` : ''}`).join('')}`}\n            isDownloadEnabled isCopyEnabled />\n        }];\n        stateSet({ type: 'setRows', payload: collapseRows });\n    };\n\n    useEffect(() => {\n        const rowBuilder = data => data?.host.affectedRulesList.flatMap((data, key) => ([{\n            rowId: key,\n            isOpen: false,\n            cells: [\n                { title: <InsightsLink to={`/signatures/${data.name}`}>{data.name}</InsightsLink> },\n                { title: <StatusLabel isDisabled={data.isDisabled} hasMatch={data.lastStatus} displayMatch /> },\n                { title: <DateFormat date={new Date(data.lastMatchDate)} type='onlyDate' /> },\n                { title: <InsightsLink to={`/signatures/${data.name}`}>{data.matchCount?.toLocaleString()}</InsightsLink> }\n\n            ]\n        }, {\n            parent: key * 2,\n            hostData: data,\n            fullWidth: true,\n            cells: []\n        }]\n        ));\n\n        !loading && stateSet({ type: 'setRows', payload: rowBuilder(data) });\n    }, [intl, data, loading]);\n\n    return <React.Fragment>\n        <PrimaryToolbar\n            pagination={{\n                itemCount: data?.host?.affectedRules?.totalCount || 0,\n                page,\n                perPage: tableVars.limit,\n                onSetPage(e, page) { onSetPage(e, page); },\n                onPerPageSelect(e, perPage) { onPerPageSelect(e, perPage); },\n                isCompact: true\n            }}\n            filterConfig={{ items: filterConfigItems }}\n        />\n        {!loading && <Table\n            className='sigTable'\n            aria-label='Signature Details table'\n            rows={rows}\n            cells={columns}\n            onCollapse={onCollapse}\n            onSort={onSort}\n            sortBy={data?.host?.affectedRules?.totalCount > 0 ? sortBy : undefined}\n            isStickyHeader\n        >\n            <TableHeader />\n            <TableBody />\n        </Table>\n        }\n\n        {loading\n            ? <SkeletonTable\n                columns={[{ title: '', columnTransforms: [classNames('skeleton-expandable-column')] }, ...columns]}\n                rowSize={tableVars.limit}\n                sortBy={sortBy}\n            />\n            : !error ?\n                data?.host?.lastMatchDate ?\n                    data?.host?.affectedRules?.totalCount === 0 ?\n                        <MessageState className='pf-c-card' icon={SearchIcon} variant='large' title={intl.formatMessage(messages.noResults)}\n                            text={intl.formatMessage(messages.noResultsMatch)} /> : <React.Fragment />\n                    : <MessageState className='pf-c-card' variant='large' icon={CheckCircleIcon} iconClass='ins-l-success-color'\n                        title={intl.formatMessage(messages.notMatched)}\n                        text={intl.formatMessage(messages.notMatchedBody)} />\n                : <MessageState className='pf-c-card' variant='large' title='Error' text='error' />}\n        <Pagination\n            itemCount={data?.host?.affectedRules?.totalCount || 0}\n            widgetId='pagination-options-menu-bottom'\n            perPage={tableVars.limit}\n            page={page}\n            variant={PaginationVariant.bottom}\n            onSetPage={onSetPage}\n            onPerPageSelect={onPerPageSelect}\n        />\n    </React.Fragment>;\n};\n\nSysDetailsTable.propTypes = { systemId: propTypes.string };\n\nexport default SysDetailsTable;\n","import './Details.scss';\n\nimport { Grid, GridItem } from '@patternfly/react-core/dist/esm/layouts/Grid/index';\nimport { Title } from '@patternfly/react-core/dist/esm/components/Title';\n\nimport Breadcrumb from '../../Components/Breadcrumb/Breadcrumb';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { GET_SYSTEMS_DETAILS_PAGE } from '../../operations/queries';\nimport Loading from '../../Components/Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React, { useEffect } from 'react';\nimport SysDetailsTable from '../../Components/SysDetailsTable/SysDetailsTable';\nimport { isBeta } from '../../Components/Common';\nimport messages from '../../Messages';\nimport { totalMatchesTitle } from '../../Components/Common';\nimport { useIntl } from 'react-intl';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport PropTypes from 'prop-types';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst Details = () => {\n    const intl = useIntl();\n    const { id: sysId } = useParams();\n    const { data, loading } = useQuery(GET_SYSTEMS_DETAILS_PAGE, {\n        variables: { id: sysId }\n    });\n    const sysData = data?.hosts?.nodes[0];\n    const breadcrumbs = [{\n        name: intl.formatMessage(messages.malwareDetectionSys),\n        to: `${isBeta()}/insights/malware/systems`\n    }, { name: sysData?.displayName, to: '#' }];\n    const detailBlock = (title, detail) => <React.Fragment>\n        <p className='ins-l-detailBlockHeader'>{title}</p>\n        <p>{detail}</p>\n    </React.Fragment>;\n\n    const chrome = useChrome();\n    //Need to wait for sysData to grab variable\n    useEffect(() => {\n        sysData && chrome.updateDocumentTitle(`${sysData.displayName} - Systems - Malware | Red Hat Insights`);\n    }, [chrome, sysData]);\n    return <React.Fragment>\n        <PageHeader>\n            <Breadcrumb items={breadcrumbs} />\n            <PageHeaderTitle title={sysData?.displayName} className=\"pf-u-mb-md\" />\n            <Grid hasGutter>\n                {loading ? <Loading /> :\n                    <GridItem xl={5} lg={12} md={12} sm={12}>\n                        <Grid hasGutter>\n                            <GridItem span={12}>\n                                {<p className='ins-l-detailBlockHeader'>{`${intl.formatMessage(messages.uuid)}: ${sysData.id}`}</p>}\n                            </GridItem>\n                            <GridItem span={4}>\n                                {detailBlock(intl.formatMessage(messages.lastmatch), sysData?.lastMatchDate ?\n                                    <DateFormat date={new Date(sysData.lastMatchDate)} type=\"onlyDate\" />\n                                    : intl.formatMessage(messages.never))}\n                            </GridItem>\n                            <GridItem span={4}>\n                                {detailBlock(intl.formatMessage(messages.lastScan),\n                                    <DateFormat date={new Date(sysData.lastScanDate)} type=\"exact\" />)}\n                            </GridItem>\n                            <GridItem span={4}>\n                                {detailBlock(totalMatchesTitle({\n                                    tooltip: intl.formatMessage(messages.totalMatchesNote),\n                                    title: intl.formatMessage(messages.totalMatches)\n                                }), sysData?.totalMatches)}\n                            </GridItem>\n                        </Grid>\n                    </GridItem>}\n                <GridItem md={7} sm={0}>\n                </GridItem>\n            </Grid>\n        </PageHeader>\n        <Main>\n            <Title className='ins-l-tableBlockHeader' headingLevel='h2'>\n                {intl.formatMessage(messages.matchedSignaturesCount, {\n                    matchedCount: sysData?.totalMatches\n                })}\n            </Title>\n            {loading ? <Loading /> : <SysDetailsTable systemId={sysData.id} />}\n        </Main>\n    </React.Fragment>;\n};\n\nDetails.propTypes = {\n    title: PropTypes.string\n};\nexport default Details;\n"],"names":["Grid","_a","children","className","component","hasGutter","span","order","style","props","__rest","classes","grid","modifiers","Component","Object","entries","forEach","propKey","gridSpanModifier","key","propValue","push","assign","css","gutter","name","undefined","displayName","GridItem","rowSpan","offset","gridItem","classModifier","rowSpanKey","offsetKey","spanValue","rowSpanValue","offsetValue","BaseSizes","DeviceSizes","defineProperty","exports","value","Breadcrumb","tslib_1","React","__importStar","breadcrumb_1","__importDefault","react_styles_1","helpers_1","ariaLabel","ouiaId","ouiaSafe","ouiaProps","useOUIAProps","createElement","default","breadcrumb","breadcrumbList","Children","map","child","index","showDivider","isValidElement","cloneElement","BreadcrumbHeading","angle_right_icon_1","to","target","breadcrumbItem","breadcrumbItemDivider","breadcrumbHeading","breadcrumbLink","current","type","href","Fragment","BreadcrumbItem","classNameProp","isActive","isDropdown","render","ariaCurrent","breadcrumbDropdown","__exportStar","CheckCircleIconConfig","height","width","svgPath","yOffset","xOffset","CheckCircleIcon","l_grid_item_Order","BreadcrumbComponent","items","last","pop","propTypes","PropTypes","CodeEditor","code","language","isReadOnly","isDownloadEnabled","isCopyEnabled","intl","useIntl","isLanguageLabelVisible","emptyState","icon","LockIcon","variant","title","formatMessage","messages","sigCompiled","text","sigCompiledBody","defaultProps","codeType","MessageState","iconClass","iconStyle","headingLevel","size","marginBottom","CubesIcon","EmptyStateVariant","full","StatusLabel","isDisabled","hasMatch","displayMatch","color","matched","notMatched","disabled","enabled","sortIndices","orderBy","direction","SortByDirection","asc","tableReducer","state","action","tableVars","payload","sortBy","rows","SysDetailsTable","systemId","initialState","limit","ruleName","useReducer","stateSet","useQuery","GET_SYSTEMS_DETAILS_TABLE_PAGE","variables","data","loading","error","columns","sigName","cellFormatters","expandable","transforms","sortable","cellWidth","lastStatus","totalMatches","info","tooltip","totalMatchesNote","page","filterConfigItems","label","sig","toLowerCase","filterValues","onChange","e","placeholder","filterBy","field","onSetPage","onPerPageSelect","perPage","useEffect","host","affectedRulesList","flatMap","rowId","isOpen","cells","InsightsLink","DateFormat","date","Date","lastMatchDate","matchCount","toLocaleString","parent","hostData","fullWidth","rowBuilder","PrimaryToolbar","pagination","itemCount","affectedRules","totalCount","isCompact","filterConfig","Table","onCollapse","rowKey","collapseRows","matches","match","source","stringOffset","stringData","stringIdentifier","scanDate","toUTCString","metadata","expandMatchMetadata","JSON","parse","replaceAll","length","join","onSort","isStickyHeader","SkeletonTable","columnTransforms","classNames","rowSize","SearchIcon","noResults","noResultsMatch","notMatchedBody","Pagination","widgetId","PaginationVariant","bottom","Details","sysId","useParams","id","GET_SYSTEMS_DETAILS_PAGE","sysData","hosts","nodes","breadcrumbs","malwareDetectionSys","isBeta","detailBlock","detail","chrome","useChrome","updateDocumentTitle","PageHeader","PageHeaderTitle","Loading","xl","lg","md","sm","uuid","lastmatch","never","lastScan","lastScanDate","totalMatchesTitle","Main","Title","matchedSignaturesCount","matchedCount"],"sourceRoot":""}