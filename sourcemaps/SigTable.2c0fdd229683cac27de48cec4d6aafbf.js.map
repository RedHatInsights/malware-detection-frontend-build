{"version":3,"file":"js/SigTable.1646730009114.ee83ea2697f912c9ab94.js","mappings":"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","sources":["webpack:///./node_modules/@apollo/client/react/hooks/useReactiveVar.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/layouts/Grid/Grid.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/layouts/Grid/GridItem.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/styles/sizes.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Text/Text.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/l_grid_item_Order.js","webpack:///./src/Components/CodeEditor/CodeEditor.js","webpack:///./src/Components/MessageState/MessageState.js","webpack:///./src/Components/SigTable/SignatureDescription.js","webpack:///./src/Components/SigTable/SigTable.js","webpack:///./src/Components/StatusLabel/StatusLabel.js","webpack:///./src/Components/SysTable/SysTable.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nexport function useReactiveVar(rv) {\n    var value = rv();\n    var setValue = useState(value)[1];\n    useEffect(function () {\n        var probablySameValue = rv();\n        if (value !== probablySameValue) {\n            setValue(probablySameValue);\n        }\n        else {\n            return rv.onNextChange(setValue);\n        }\n    }, [value]);\n    return value;\n}\n//# sourceMappingURL=useReactiveVar.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/layouts/Grid/grid';\nimport { css } from '@patternfly/react-styles';\nimport { DeviceSizes } from '../../styles/sizes';\nimport * as gridToken from '@patternfly/react-tokens/dist/esm/l_grid_item_Order';\nimport { setBreakpointCssVars } from '../../helpers/util';\nexport const Grid = (_a) => {\n    var { children = null, className = '', hasGutter, span = null, order, style } = _a, props = __rest(_a, [\"children\", \"className\", \"hasGutter\", \"span\", \"order\", \"style\"]);\n    const classes = [styles.grid, span && styles.modifiers[`all_${span}Col`]];\n    Object.entries(DeviceSizes).forEach(([propKey, gridSpanModifier]) => {\n        const key = propKey;\n        const propValue = props[key];\n        if (propValue) {\n            classes.push(styles.modifiers[`all_${propValue}ColOn${gridSpanModifier}`]);\n        }\n        delete props[key];\n    });\n    return (React.createElement(\"div\", Object.assign({ className: css(...classes, hasGutter && styles.modifiers.gutter, className), style: style || order ? Object.assign(Object.assign({}, style), setBreakpointCssVars(order, gridToken.l_grid_item_Order.name)) : undefined }, props), children));\n};\nGrid.displayName = 'Grid';\n//# sourceMappingURL=Grid.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/layouts/Grid/grid';\nimport { css } from '@patternfly/react-styles';\nimport { DeviceSizes } from '../../styles/sizes';\nimport * as gridToken from '@patternfly/react-tokens/dist/esm/l_grid_item_Order';\nimport { setBreakpointCssVars } from '../../helpers/util';\nexport const GridItem = (_a) => {\n    var { children = null, className = '', span = null, rowSpan = null, offset = null, order, style } = _a, props = __rest(_a, [\"children\", \"className\", \"span\", \"rowSpan\", \"offset\", \"order\", \"style\"]);\n    const classes = [\n        styles.gridItem,\n        span && styles.modifiers[`${span}Col`],\n        rowSpan && styles.modifiers[`${rowSpan}Row`],\n        offset && styles.modifiers[`offset_${offset}Col`]\n    ];\n    Object.entries(DeviceSizes).forEach(([propKey, classModifier]) => {\n        const key = propKey;\n        const rowSpanKey = `${key}RowSpan`;\n        const offsetKey = `${key}Offset`;\n        const spanValue = props[key];\n        const rowSpanValue = props[rowSpanKey];\n        const offsetValue = props[offsetKey];\n        if (spanValue) {\n            classes.push(styles.modifiers[`${spanValue}ColOn${classModifier}`]);\n        }\n        if (rowSpanValue) {\n            classes.push(styles.modifiers[`${rowSpanValue}RowOn${classModifier}`]);\n        }\n        if (offsetValue) {\n            classes.push(styles.modifiers[`offset_${offsetValue}ColOn${classModifier}`]);\n        }\n        delete props[key];\n        delete props[rowSpanKey];\n        delete props[offsetKey];\n    });\n    return (React.createElement(\"div\", Object.assign({ className: css(...classes, className), style: style || order ? Object.assign(Object.assign({}, style), setBreakpointCssVars(order, gridToken.l_grid_item_Order.name)) : undefined }, props), children));\n};\nGridItem.displayName = 'GridItem';\n//# sourceMappingURL=GridItem.js.map","export var BaseSizes;\n(function (BaseSizes) {\n    BaseSizes[\"xs\"] = \"xs\";\n    BaseSizes[\"sm\"] = \"sm\";\n    BaseSizes[\"md\"] = \"md\";\n    BaseSizes[\"lg\"] = \"lg\";\n    BaseSizes[\"xl\"] = \"xl\";\n    BaseSizes[\"2xl\"] = \"2xl\";\n    BaseSizes[\"3xl\"] = \"3xl\";\n    BaseSizes[\"4xl\"] = \"4xl\";\n})(BaseSizes || (BaseSizes = {}));\nexport var DeviceSizes;\n(function (DeviceSizes) {\n    DeviceSizes[\"sm\"] = \"Sm\";\n    DeviceSizes[\"md\"] = \"Md\";\n    DeviceSizes[\"lg\"] = \"Lg\";\n    DeviceSizes[\"xl\"] = \"Xl\";\n    DeviceSizes[\"xl2\"] = \"_2xl\";\n})(DeviceSizes || (DeviceSizes = {}));\n//# sourceMappingURL=sizes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Text = exports.TextVariants = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst content_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Content/content\"));\nconst helpers_1 = require(\"../../helpers\");\nvar TextVariants;\n(function (TextVariants) {\n    TextVariants[\"h1\"] = \"h1\";\n    TextVariants[\"h2\"] = \"h2\";\n    TextVariants[\"h3\"] = \"h3\";\n    TextVariants[\"h4\"] = \"h4\";\n    TextVariants[\"h5\"] = \"h5\";\n    TextVariants[\"h6\"] = \"h6\";\n    TextVariants[\"p\"] = \"p\";\n    TextVariants[\"a\"] = \"a\";\n    TextVariants[\"small\"] = \"small\";\n    TextVariants[\"blockquote\"] = \"blockquote\";\n    TextVariants[\"pre\"] = \"pre\";\n})(TextVariants = exports.TextVariants || (exports.TextVariants = {}));\nconst Text = (_a) => {\n    var { children = null, className = '', component = TextVariants.p, isVisitedLink = false, ouiaId, ouiaSafe = true } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"component\", \"isVisitedLink\", \"ouiaId\", \"ouiaSafe\"]);\n    const Component = component;\n    const ouiaProps = helpers_1.useOUIAProps(exports.Text.displayName, ouiaId, ouiaSafe);\n    return (React.createElement(Component, Object.assign({}, ouiaProps, props, { \"data-pf-content\": true, className: react_styles_1.css(isVisitedLink && component === TextVariants.a && content_1.default.modifiers.visited, className) }), children));\n};\nexports.Text = Text;\nexports.Text.displayName = 'Text';\n//# sourceMappingURL=Text.js.map","export const l_grid_item_Order = {\n  \"name\": \"--pf-l-grid--item--Order\",\n  \"value\": \"0\",\n  \"var\": \"var(--pf-l-grid--item--Order)\"\n};\nexport default l_grid_item_Order;","import { LockIcon } from '@patternfly/react-icons/dist/esm/icons/lock-icon';\nimport MessageState from '../MessageState/MessageState';\nimport { CodeEditor as PfCodeEditor } from '@patternfly/react-code-editor';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nconst CodeEditor = ({ code, language, isReadOnly, isDownloadEnabled, isCopyEnabled, height = '400px' }) => {\n    const intl = useIntl();\n\n    return <PfCodeEditor\n        isDownloadEnabled={isDownloadEnabled}\n        isCopyEnabled={isCopyEnabled}\n        isReadOnly={isReadOnly}\n        isLanguageLabelVisible={language}\n        code={code}\n        language={language}\n        emptyState={\n            <MessageState className='' icon={LockIcon} variant='small' title={intl.formatMessage(messages.sigCompiled)}\n                text={intl.formatMessage(messages.sigCompiledBody)} />\n        }\n        height={height}\n    />;\n};\n\nCodeEditor.propTypes = {\n    code: PropTypes.any,\n    language: PropTypes.string,\n    isReadOnly: PropTypes.bool,\n    isCopyEnabled: PropTypes.bool,\n    isDownloadEnabled: PropTypes.bool,\n    height: PropTypes.string\n};\n\nCodeEditor.defaultProps = { codeType: 'Code' };\n\nexport default CodeEditor;\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant } from '@patternfly/react-core/dist/esm/components/EmptyState/index';\n\nimport CubesIcon from '@patternfly/react-icons/dist/esm/icons/cubes-icon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Title } from '@patternfly/react-core/dist/esm/components/Title/Title';\n\nconst MessageState = ({ className, children, icon, iconClass, iconStyle, text, title, variant }) =>\n    <EmptyState className={className} variant={variant}>\n        {icon !== 'none' && <EmptyStateIcon className={iconClass} style={iconStyle} icon={icon} />}\n        <Title headingLevel='h5' size='lg'>\n            {title}\n        </Title>\n        <EmptyStateBody style={{ marginBottom: '16px' }}>\n            {text}\n        </EmptyStateBody>\n        {children}\n    </EmptyState>;\n\nMessageState.propTypes = {\n    children: PropTypes.any,\n    icon: PropTypes.any,\n    iconClass: PropTypes.any,\n    iconStyle: PropTypes.any,\n    text: PropTypes.any,\n    title: PropTypes.string,\n    variant: PropTypes.any,\n    className: PropTypes.string\n};\n\nMessageState.defaultProps = {\n    icon: CubesIcon,\n    title: '',\n    variant: EmptyStateVariant.full\n};\n\nexport default MessageState;\n","import React, { useState } from 'react';\nimport CodeEditor from '../CodeEditor/CodeEditor';\nimport { Grid, GridItem } from '@patternfly/react-core/dist/esm/layouts/Grid/index';\nimport PropTypes from 'prop-types';\nimport { Text, TextVariants } from '@patternfly/react-core';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nconst SignatureDesctiprion = ({ signature }) => {\n    const intl = useIntl();\n    const [isCodeEditorEnabled] = useState(false);\n    return (\n        <Grid hasGutter>\n            {isCodeEditorEnabled && (\n                <GridItem span={6}>\n                    <CodeEditor code={signature.rawRule} isReadOnly />\n                </GridItem>\n            )}\n            <GridItem span={isCodeEditorEnabled && 6 || 12}> <Text className='ins-l-sigtable--title' component={TextVariants.h6}>\n                {intl.formatMessage(messages.description)}\n            </Text>{signature.metadata.description}\n            </GridItem>\n        </Grid>\n    );\n};\n\nSignatureDesctiprion.propTypes = {\n    signature: PropTypes.object\n};\nexport default SignatureDesctiprion;\n","/* eslint-disable no-unused-vars */\nimport './SigTable.scss';\n\nimport { Grid, GridItem } from '@patternfly/react-core/dist/esm/layouts/Grid/index';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core/dist/esm/components/Pagination/index';\nimport React, { useEffect, useReducer } from 'react';\nimport {\n    SortByDirection,\n    Table,\n    TableBody,\n    TableHeader,\n    cellWidth,\n    expandable,\n    sortable\n} from '@patternfly/react-table/dist/esm/components/Table/index';\nimport { gqlProps, totalMatchesTitle } from '../Common';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { GET_SIGNATURE_TABLE } from '../../operations/queries';\nimport { Link } from 'react-router-dom';\nimport Loading from '../../Components/Loading/Loading';\nimport MessageState from '../MessageState/MessageState';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { SearchIcon } from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport StatusLabel from '../StatusLabel/StatusLabel';\nimport { Tooltip } from '@patternfly/react-core/dist/esm/components/Tooltip/Tooltip';\nimport messages from '../../Messages';\nimport { sigTableFilters } from '../../store/cache';\nimport { useIntl } from 'react-intl';\nimport { useQuery } from '@apollo/client';\nimport { useReactiveVar } from '@apollo/client';\nimport SignatureDesctiprion from './SignatureDescription';\n\nconst initialState = {\n    tableVars: {\n        limit: 10,\n        offset: 0,\n        orderBy: 'LAST_MATCH_DATE_DESC',\n        ruleName: ''\n    },\n    sortBy: {\n        index: 4,\n        direction: SortByDirection.desc\n    },\n    rows: []\n};\nconst sortIndices = { 1: 'NAME', 2: 'HAS_MATCH', 3: 'HOST_COUNT', 4: 'LAST_MATCH_DATE' };\nconst orderBy = ({ index, direction }) => `${sortIndices[index]}_${direction === SortByDirection.asc ? 'ASC' : 'DESC'}`;\n\nconst tableReducer = (state, action) => {\n    switch (action.type) {\n        case 'setTableVars':\n            return { ...state, tableVars: { ...state.tableVars, ...action.payload } };\n        case 'setSortBy':\n            return { ...state, sortBy: action.payload, tableVars: { ...state.tableVars, ...action.tableVars } };\n        case 'setRows':\n            return { ...state, rows: action.payload };\n    }\n\n    return state;\n};\n\nconst SigTable = () => {\n    const intl = useIntl();\n    const [{ tableVars, sortBy, rows }, stateSet] = useReducer(tableReducer, {\n        ...initialState\n    });\n    const { data: sigTableData, loading: sigTableLoading, error: sigTableError } =\n        useQuery(GET_SIGNATURE_TABLE, { variables: { ...tableVars, ...useReactiveVar(sigTableFilters) } });\n    const columns = [\n        { title: intl.formatMessage(messages.sigName), cellFormatters: [expandable], transforms: [cellWidth(45), sortable] },\n        { title: intl.formatMessage(messages.lastStatus), transforms: [cellWidth(10), sortable] },\n        { title: intl.formatMessage(messages.systems), transforms: [cellWidth(10), sortable] },\n        { title: intl.formatMessage(messages.matched), transforms: [cellWidth(10), sortable] }\n    ];\n\n    const page = tableVars.offset / tableVars.limit + 1;\n\n    const onCollapse = (e, rowKey, isOpen) => {\n        const collapseRows = [...rows];\n        const sig = collapseRows[rowKey + 1].sigData;\n\n        collapseRows[rowKey] = { ...collapseRows[rowKey], isOpen };\n        collapseRows[rowKey + 1].cells = [{\n            title: <SignatureDesctiprion signature={sig}/>\n        }];\n        stateSet({ type: 'setRows', payload: collapseRows });\n    };\n\n    const FILTER_CATEGORIES = {\n        sig_match: {\n            type: 'radio', title: intl.formatMessage(messages.status), urlParam: 'sig_match', values: [\n                { label: intl.formatMessage(messages.all), value: 'all' },\n                { label: intl.formatMessage(messages.matched), value: 'true' },\n                { label: intl.formatMessage(messages.notMatched), value: 'false' }\n            ]\n        }\n    };\n    const filterConfigItems = [{\n        label: intl.formatMessage(messages.signature).toLowerCase(),\n        filterValues: {\n            key: 'text-filter',\n            onChange: (e, value) => stateSet({ type: 'setTableVars', payload: { ruleName: value, offset: 0 } }),\n            value: tableVars.ruleName,\n            placeholder: intl.formatMessage(messages.filterBy, { field: intl.formatMessage(messages.signature).toLowerCase() })\n        }\n    }, {\n        label: FILTER_CATEGORIES.sig_match.title.toLowerCase(),\n        type: FILTER_CATEGORIES.sig_match.type,\n        id: FILTER_CATEGORIES.sig_match.urlParam,\n        value: `radio-${FILTER_CATEGORIES.sig_match.urlParam}`,\n        filterValues: {\n            key: `${FILTER_CATEGORIES.sig_match.urlParam}-filter`,\n            onChange: (e, value) => {\n                const tableFilters = sigTableFilters();\n                value === 'all' && delete tableFilters?.condition;\n                value === 'all' ? sigTableFilters({ ...tableFilters }) :\n                    sigTableFilters({ ...tableFilters, condition: { hasMatch: JSON.parse(value) } });\n            },\n            value: JSON.stringify(sigTableFilters().condition?.hasMatch) || 'all',\n            items: FILTER_CATEGORIES.sig_match.values\n        }\n    }];\n\n    const onSetPage = (e, page) => stateSet({ type: 'setTableVars', payload: { offset: page * tableVars.limit - tableVars.limit } });\n\n    const onPerPageSelect = (e, perPage) => stateSet({ type: 'setTableVars', payload: { limit: perPage, offset: 0 } });\n\n    const onSort = (e, index, direction) =>\n        stateSet({ type: 'setSortBy', payload: { index, direction }, tableVars: { orderBy: orderBy({ index, direction }), offset: 0 } });\n\n    const buildFilterChips = () => {\n        const chips = [];\n        const hasMatch = sigTableFilters().condition?.hasMatch !== undefined && (sigTableFilters().condition?.hasMatch ?\n            intl.formatMessage(messages.matched) : intl.formatMessage(messages.notMatched));\n        tableVars?.ruleName &&\n        chips.push({ category: intl.formatMessage(messages.signature), value: 'name',\n            chips: [{ name: tableVars?.ruleName, value: tableVars?.ruleName }] });\n        hasMatch && chips.push({ category: intl.formatMessage(messages.status), value: 'matched', chips: [{ name: hasMatch, value: hasMatch }] });\n        return chips;\n    };\n\n    const activeFiltersConfig = {\n        deleteTitle: intl.formatMessage(messages.resetFilters),\n        filters: buildFilterChips(),\n        onDelete: (event, itemsToRemove, isAll) => {\n            if (isAll) {\n                sigTableFilters({});\n                stateSet({ type: 'setTableVars', payload: { ruleName: '' } });\n            } else {\n                itemsToRemove.map((item) => {\n                    item.value === 'name' && stateSet({ type: 'setTableVars', payload: { ruleName: '' } });\n                    item.value === 'matched' && sigTableFilters({});\n                });\n            }\n        }\n    };\n\n    useEffect(() => {\n        const rowBuilder = data => data?.rulesList?.flatMap((data, key) => {\n            const sig = data;\n            return [{\n                rowId: key,\n                isOpen: false,\n                cells: [\n                    { title: <Link to={`/signatures/${sig.name}`}>{sig.name}</Link> },\n                    { title: <StatusLabel isDisabled={sig.isDisabled} hasMatch={sig.hasMatch} displayMatch /> },\n                    { title: <Link to={`/signatures/${sig.name}`}>{sig.hostCount?.toLocaleString()}</Link> },\n                    {\n                        title: sig.lastMatchDate ?\n                            <Tooltip content={<DateFormat date={new Date(sig.lastMatchDate)} type='exact' />}>\n                                <span><DateFormat date={new Date(sig.lastMatchDate)} type='onlyDate' /></span>\n                            </Tooltip>\n                            : <Tooltip content={intl.formatMessage(messages.noHostHas)}>\n                                <span>{intl.formatMessage(messages.never)}</span>\n                            </Tooltip>\n                    }\n                ]\n            }, {\n                parent: key * 2,\n                sigData: sig,\n                fullWidth: true,\n                cells: []\n            }];\n        });\n\n        stateSet({ type: 'setRows', payload: rowBuilder(sigTableData) });\n    }, [intl, sigTableData]);\n\n    return <React.Fragment>\n        <PrimaryToolbar\n            pagination={{\n                itemCount: sigTableData?.rules?.totalCount || 0,\n                page,\n                perPage: tableVars.limit,\n                onSetPage(e, page) { onSetPage(e, page); },\n                onPerPageSelect(e, perPage) { onPerPageSelect(e, perPage); },\n                isCompact: true\n            }}\n            filterConfig={{ items: filterConfigItems }}\n            activeFiltersConfig={activeFiltersConfig}\n        />\n        <Table className='sigTable' aria-label='Signature table'\n            onCollapse={onCollapse}\n            rows={rows} cells={columns}\n            onSort={onSort} sortBy={sortBy} isStickyHeader>\n            <TableHeader />\n            <TableBody />\n        </Table>\n        {sigTableLoading && <Loading type='table' />}\n        {!sigTableLoading && !sigTableError && sigTableData?.rules?.totalCount === 0 &&\n            <MessageState className='pf-c-card' icon={SearchIcon} variant='large' title={intl.formatMessage(messages.noResults)}\n                text={intl.formatMessage(messages.noResultsMatch)} />}\n        {sigTableError && <MessageState className='pf-c-card' variant='large' title='Error' text='error' />}\n        <Pagination\n            itemCount={sigTableData?.rules?.totalCount || 0}\n            widgetId='pagination-options-menu-bottom'\n            perPage={tableVars.limit}\n            page={page}\n            variant={PaginationVariant.bottom}\n            onSetPage={onSetPage}\n            onPerPageSelect={onPerPageSelect}\n        />\n    </React.Fragment>;\n};\n\nSigTable.propTypes = gqlProps;\n\nexport default SigTable;\n","import { Label } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nconst StatusLabel = ({ isDisabled, hasMatch, displayMatch = false }) => {\n    const intl = useIntl();\n    return displayMatch ? <div>\n        {hasMatch && <Label color='red'>{intl.formatMessage(messages.matched)}</Label>}\n        {!hasMatch && <Label color='blue'>{intl.formatMessage(messages.notMatched)}</Label>}\n    </div> : <div>\n        {isDisabled && <Label>{intl.formatMessage(messages.disabled)}</Label>}\n        {!isDisabled && <Label color='blue'>{intl.formatMessage(messages.enabled)}</Label>}\n    </div>;\n};\n\nStatusLabel.propTypes = {\n    isDisabled: PropTypes.bool,\n    hasMatch: PropTypes.bool,\n    displayMatch: PropTypes.bool\n};\nexport default StatusLabel;\n","/* eslint-disable no-unused-vars */\nimport './SysTable.scss';\n\nimport { Pagination, PaginationVariant } from '@patternfly/react-core/dist/esm/components/Pagination/index';\nimport React, { useEffect, useReducer } from 'react';\nimport {\n    SortByDirection,\n    Table,\n    TableBody,\n    TableHeader,\n    cellWidth,\n    sortable\n} from '@patternfly/react-table/dist/esm/components/Table/index';\n\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { GET_SYSTEM_TABLE } from '../../operations/queries';\nimport { Link } from 'react-router-dom';\nimport Loading from '../Loading/Loading';\nimport MessageState from '../MessageState/MessageState';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { SearchIcon } from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport StatusLabel from '../StatusLabel/StatusLabel';\nimport { Tooltip } from '@patternfly/react-core/dist/esm/components/Tooltip/Tooltip';\nimport { gqlProps } from '../Common';\nimport messages from '../../Messages';\nimport { sysTableFilters } from '../../store/cache';\nimport { totalMatchesTitle } from '../Common';\nimport { useIntl } from 'react-intl';\nimport { useQuery } from '@apollo/client';\nimport { useReactiveVar } from '@apollo/client';\n\nconst initialState = {\n    tableVars: {\n        limit: 10,\n        offset: 0,\n        orderBy: 'LAST_SCAN_DATE_DESC',\n        name: ''\n    },\n    sortBy: {\n        index: 4,\n        direction: SortByDirection.desc\n    },\n    rows: []\n};\nconst sortIndices = { 0: 'DISPLAY_NAME', 1: 'HAS_MATCH', 2: 'LAST_MATCH_DATE', 3: 'TOTAL_MATCHES', 4: 'LAST_SCAN_DATE' };\nconst orderBy = ({ index, direction }) => `${sortIndices[index]}_${direction === SortByDirection.asc ? 'ASC' : 'DESC'}`;\n\nconst tableReducer = (state, action) => {\n    switch (action.type) {\n        case 'setTableVars':\n            return { ...state, tableVars: { ...state.tableVars, ...action.payload } };\n        case 'setSortBy':\n            return { ...state, sortBy: action.payload, tableVars: { ...state.tableVars, ...action.tableVars } };\n        case 'setRows':\n            return { ...state, rows: action.payload };\n    }\n\n    return state;\n};\n\nconst SysTable = () => {\n    const intl = useIntl();\n    const [{ tableVars, sortBy, rows }, stateSet] = useReducer(tableReducer, {\n        ...initialState\n    });\n    const { data: sysTableData, loading: sysTableLoading, error: sysTableError } =\n        useQuery(GET_SYSTEM_TABLE, { variables: { ...tableVars, ...useReactiveVar(sysTableFilters) } });\n    const columns = [\n        { title: intl.formatMessage(messages.name), transforms: [cellWidth(45), sortable] },\n        { title: intl.formatMessage(messages.lastStatus), transforms: [sortable, cellWidth(10)] },\n        { title: intl.formatMessage(messages.matched), transforms: [sortable, cellWidth(10)] },\n        { title: <span>{totalMatchesTitle({ tooltip: intl.formatMessage(messages.totalMatchesNote),\n            title: intl.formatMessage(messages.totalMatches) })}</span>, transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.lastScan), transforms: [sortable, cellWidth(10)] }\n    ];\n\n    const page = tableVars.offset / tableVars.limit + 1;\n\n    const filterConfigItems = [{\n        label: intl.formatMessage(messages.name).toLowerCase(),\n        filterValues: {\n            key: 'text-filter',\n            onChange: (e, value) => stateSet({ type: 'setTableVars', payload: { name: value, offset: 0 } }),\n            value: tableVars.name,\n            placeholder: intl.formatMessage(messages.filterBy, { field: intl.formatMessage(messages.name).toLowerCase() })\n        }\n    }];\n\n    const onSetPage = (e, page) => stateSet({ type: 'setTableVars', payload: { offset: page * tableVars.limit - tableVars.limit } });\n\n    const onPerPageSelect = (e, perPage) => stateSet({ type: 'setTableVars', payload: { limit: perPage, offset: 0 } });\n\n    const onSort = (e, index, direction) =>\n        stateSet({ type: 'setSortBy', payload: { index, direction }, tableVars: { orderBy: orderBy({ index, direction }), offset: 0 } });\n\n    const buildFilterChips = () => {\n        const chips = [];\n        const hasMatch = sysTableFilters().condition?.hasMatch !== undefined && (sysTableFilters().condition?.hasMatch ?\n            intl.formatMessage(messages.matched) : intl.formatMessage(messages.notMatched));\n        tableVars?.name &&\n        chips.push({ category: intl.formatMessage(messages.name), value: 'name',\n            chips: [{ name: tableVars?.name, value: tableVars?.name }] });\n        hasMatch && chips.push({ category: intl.formatMessage(messages.status), value: 'matched', chips: [{ name: hasMatch, value: hasMatch }] });\n        return chips;\n    };\n\n    const activeFiltersConfig = {\n        deleteTitle: intl.formatMessage(messages.resetFilters),\n        filters: buildFilterChips(),\n        onDelete: (event, itemsToRemove, isAll) => {\n            if (isAll) {\n                sysTableFilters({});\n                stateSet({ type: 'setTableVars', payload: { name: '' } });\n            } else {\n                itemsToRemove.map((item) => {\n                    item.value === 'name' && stateSet({ type: 'setTableVars', payload: { name: '' } });\n                    item.value === 'matched' && sysTableFilters({});\n                });\n            }\n        }\n    };\n\n    useEffect(() => {\n        const rowBuilder = data => data?.hostsList?.flatMap((data, key) => ({\n            rowId: key,\n            cells: [\n                { title: <Link to={`/systems/${data.displayName}`}>{data.displayName}</Link> },\n                { title: <StatusLabel isDisabled={data.isDisabled} hasMatch={data.hasMatch} displayMatch /> },\n                {\n                    title: data.lastMatchDate ?\n                        <Tooltip content={<DateFormat date={new Date(data.lastMatchDate)} type='exact' />}>\n                            <span><DateFormat date={new Date(data.lastMatchDate)} type='onlyDate' /></span>\n                        </Tooltip>\n                        : <Tooltip content={intl.formatMessage(messages.noHostHas)}>\n                            <span>{intl.formatMessage(messages.never)}</span>\n                        </Tooltip>\n                },\n                { title: <Link to={`/systems/${data.displayName}`}>{data.totalMatches?.toLocaleString()}</Link> },\n                { title: <Tooltip content={<DateFormat date={new Date(data.lastScanDate)} type='exact' />}>\n                    <span><DateFormat date={new Date(data.lastScanDate)} /></span>\n                </Tooltip> }\n\n            ]\n        }));\n\n        stateSet({ type: 'setRows', payload: rowBuilder(sysTableData) });\n    }, [intl, sysTableData]);\n\n    return <React.Fragment>\n        <PrimaryToolbar\n            pagination={{\n                itemCount: sysTableData?.hosts?.totalCount || 0,\n                page,\n                perPage: tableVars.limit,\n                onSetPage(e, page) { onSetPage(e, page); },\n                onPerPageSelect(e, perPage) { onPerPageSelect(e, perPage); },\n                isCompact: true\n            }}\n            filterConfig={{ items: filterConfigItems }}\n            activeFiltersConfig={activeFiltersConfig}\n        />\n        <Table className='sysTable' aria-label='System table'\n            rows={rows} cells={columns}\n            onSort={onSort} sortBy={sortBy} isStickyHeader>\n            <TableHeader />\n            <TableBody />\n        </Table>\n        {sysTableLoading && <Loading type='table' />}\n        {!sysTableLoading && !sysTableError && sysTableData?.hosts?.totalCount === 0 &&\n            <MessageState className='pf-c-card' icon={SearchIcon} variant='large' title={intl.formatMessage(messages.noResults)}\n                text={intl.formatMessage(messages.noResultsMatch)} />}\n        {sysTableError && <MessageState className='pf-c-card' variant='large' title='Error' text='error' />}\n        <Pagination\n            itemCount={sysTableData?.hosts?.totalCount || 0}\n            widgetId='pagination-options-menu-bottom'\n            perPage={tableVars.limit}\n            page={page}\n            variant={PaginationVariant.bottom}\n            onSetPage={onSetPage}\n            onPerPageSelect={onPerPageSelect}\n        />\n    </React.Fragment>;\n};\n\nSysTable.propTypes = gqlProps;\n\nexport default SysTable;\n"],"names":["useReactiveVar","rv","value","setValue","useState","useEffect","probablySameValue","onNextChange","Grid","_a","children","className","hasGutter","span","order","style","props","__rest","classes","Object","entries","forEach","propKey","gridSpanModifier","key","propValue","push","assign","css","undefined","displayName","GridItem","rowSpan","offset","classModifier","rowSpanKey","offsetKey","spanValue","rowSpanValue","offsetValue","BaseSizes","DeviceSizes","exports","tslib_1","React","__importStar","react_styles_1","content_1","__importDefault","helpers_1","TextVariants","component","p","isVisitedLink","ouiaId","ouiaSafe","Component","ouiaProps","useOUIAProps","createElement","a","default","modifiers","visited","l_grid_item_Order","CodeEditor","code","language","isReadOnly","isDownloadEnabled","isCopyEnabled","height","intl","useIntl","isLanguageLabelVisible","emptyState","icon","LockIcon","variant","title","formatMessage","messages","text","propTypes","PropTypes","defaultProps","codeType","MessageState","iconClass","iconStyle","headingLevel","size","marginBottom","CubesIcon","EmptyStateVariant","SignatureDesctiprion","signature","isCodeEditorEnabled","rawRule","Text","metadata","description","initialState","tableVars","limit","orderBy","ruleName","sortBy","index","direction","SortByDirection","rows","sortIndices","tableReducer","state","action","type","payload","SigTable","chips","hasMatch","useReducer","stateSet","useQuery","GET_SIGNATURE_TABLE","variables","sigTableFilters","sigTableData","data","sigTableLoading","loading","sigTableError","error","columns","cellFormatters","expandable","transforms","cellWidth","sortable","page","FILTER_CATEGORIES","sig_match","urlParam","values","label","filterConfigItems","toLowerCase","filterValues","onChange","e","placeholder","field","id","tableFilters","condition","JSON","parse","stringify","items","onSetPage","onPerPageSelect","perPage","activeFiltersConfig","deleteTitle","filters","category","name","onDelete","event","itemsToRemove","isAll","map","item","rulesList","flatMap","sig","rowId","isOpen","cells","Link","to","StatusLabel","isDisabled","displayMatch","hostCount","toLocaleString","lastMatchDate","Tooltip","content","DateFormat","date","Date","parent","sigData","fullWidth","PrimaryToolbar","pagination","itemCount","rules","totalCount","isCompact","filterConfig","Table","onCollapse","rowKey","collapseRows","onSort","isStickyHeader","Loading","SearchIcon","Pagination","widgetId","PaginationVariant","gqlProps","color","SysTable","GET_SYSTEM_TABLE","sysTableFilters","sysTableData","sysTableLoading","sysTableError","totalMatchesTitle","tooltip","hostsList","totalMatches","lastScanDate","hosts"],"sourceRoot":""}