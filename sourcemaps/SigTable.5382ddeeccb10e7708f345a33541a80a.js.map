{"version":3,"file":"js/SigTable.8f31c53b38f4e0e2dc71.js","mappings":"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","sources":["webpack:///./node_modules/@apollo/client/react/hooks/useReactiveVar.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Text/Text.js","webpack:///./src/Components/CodeEditor/CodeEditor.js","webpack:///./src/Components/MessageState/MessageState.js","webpack:///./src/Components/SigTable/SignatureDescription.js","webpack:///./src/Components/SigTable/SigTable.js","webpack:///./src/Components/StatusLabel/StatusLabel.js","webpack:///./src/Components/SysTable/SysTable.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nexport function useReactiveVar(rv) {\n    var value = rv();\n    var setValue = useState(value)[1];\n    useEffect(function () {\n        var probablySameValue = rv();\n        if (value !== probablySameValue) {\n            setValue(probablySameValue);\n        }\n        else {\n            return rv.onNextChange(setValue);\n        }\n    }, [value]);\n    return value;\n}\n//# sourceMappingURL=useReactiveVar.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Text = exports.TextVariants = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst content_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Content/content\"));\nconst helpers_1 = require(\"../../helpers\");\nvar TextVariants;\n(function (TextVariants) {\n    TextVariants[\"h1\"] = \"h1\";\n    TextVariants[\"h2\"] = \"h2\";\n    TextVariants[\"h3\"] = \"h3\";\n    TextVariants[\"h4\"] = \"h4\";\n    TextVariants[\"h5\"] = \"h5\";\n    TextVariants[\"h6\"] = \"h6\";\n    TextVariants[\"p\"] = \"p\";\n    TextVariants[\"a\"] = \"a\";\n    TextVariants[\"small\"] = \"small\";\n    TextVariants[\"blockquote\"] = \"blockquote\";\n    TextVariants[\"pre\"] = \"pre\";\n})(TextVariants = exports.TextVariants || (exports.TextVariants = {}));\nconst Text = (_a) => {\n    var { children = null, className = '', component = TextVariants.p, isVisitedLink = false, ouiaId, ouiaSafe = true } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"component\", \"isVisitedLink\", \"ouiaId\", \"ouiaSafe\"]);\n    const Component = component;\n    const ouiaProps = helpers_1.useOUIAProps(exports.Text.displayName, ouiaId, ouiaSafe);\n    return (React.createElement(Component, Object.assign({}, ouiaProps, props, { \"data-pf-content\": true, className: react_styles_1.css(isVisitedLink && component === TextVariants.a && content_1.default.modifiers.visited, className) }), children));\n};\nexports.Text = Text;\nexports.Text.displayName = 'Text';\n//# sourceMappingURL=Text.js.map","import { LockIcon } from '@patternfly/react-icons/dist/esm/icons/lock-icon';\nimport MessageState from '../MessageState/MessageState';\nimport { CodeEditor as PfCodeEditor } from '@patternfly/react-code-editor';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nconst CodeEditor = ({ code, language, isReadOnly, isDownloadEnabled, isCopyEnabled, height = '400px' }) => {\n    const intl = useIntl();\n\n    return <PfCodeEditor\n        isDownloadEnabled={isDownloadEnabled}\n        isCopyEnabled={isCopyEnabled}\n        isReadOnly={isReadOnly}\n        isLanguageLabelVisible={language}\n        code={code}\n        language={language}\n        emptyState={\n            <MessageState className='' icon={LockIcon} variant='small' title={intl.formatMessage(messages.sigCompiled)}\n                text={intl.formatMessage(messages.sigCompiledBody)} />\n        }\n        height={height}\n    />;\n};\n\nCodeEditor.propTypes = {\n    code: PropTypes.any,\n    language: PropTypes.string,\n    isReadOnly: PropTypes.bool,\n    isCopyEnabled: PropTypes.bool,\n    isDownloadEnabled: PropTypes.bool,\n    height: PropTypes.string\n};\n\nCodeEditor.defaultProps = { codeType: 'Code' };\n\nexport default CodeEditor;\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant } from '@patternfly/react-core/dist/esm/components/EmptyState/index';\n\nimport CubesIcon from '@patternfly/react-icons/dist/esm/icons/cubes-icon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Title } from '@patternfly/react-core/dist/esm/components/Title/Title';\n\nconst MessageState = ({ className, children, icon, iconClass, iconStyle, text, title, variant }) =>\n    <EmptyState className={className} variant={variant}>\n        {icon !== 'none' && <EmptyStateIcon className={iconClass} style={iconStyle} icon={icon} />}\n        <Title headingLevel='h5' size='lg'>\n            {title}\n        </Title>\n        <EmptyStateBody style={{ marginBottom: '16px' }}>\n            {text}\n        </EmptyStateBody>\n        {children}\n    </EmptyState>;\n\nMessageState.propTypes = {\n    children: PropTypes.any,\n    icon: PropTypes.any,\n    iconClass: PropTypes.any,\n    iconStyle: PropTypes.any,\n    text: PropTypes.any,\n    title: PropTypes.string,\n    variant: PropTypes.any,\n    className: PropTypes.string\n};\n\nMessageState.defaultProps = {\n    icon: CubesIcon,\n    title: '',\n    variant: EmptyStateVariant.full\n};\n\nexport default MessageState;\n","import React, { useState } from 'react';\nimport CodeEditor from '../CodeEditor/CodeEditor';\nimport { Grid, GridItem } from '@patternfly/react-core/dist/esm/layouts/Grid/index';\nimport PropTypes from 'prop-types';\nimport { Text, TextVariants } from '@patternfly/react-core';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nconst SignatureDesctiprion = ({ signature }) => {\n    const intl = useIntl();\n    const [isCodeEditorEnabled] = useState(false);\n    return (\n        <Grid hasGutter>\n            {isCodeEditorEnabled && (\n                <GridItem span={6}>\n                    <CodeEditor code={signature.rawRule} isReadOnly />\n                </GridItem>\n            )}\n            <GridItem span={isCodeEditorEnabled && 6 || 12}> <Text className='ins-l-sigtable--title' component={TextVariants.h6}>\n                {intl.formatMessage(messages.description)}\n            </Text>{signature.metadata.description}\n            </GridItem>\n        </Grid>\n    );\n};\n\nSignatureDesctiprion.propTypes = {\n    signature: PropTypes.object\n};\nexport default SignatureDesctiprion;\n","/* eslint-disable no-unused-vars */\nimport './SigTable.scss';\n\nimport { Grid, GridItem } from '@patternfly/react-core/dist/esm/layouts/Grid/index';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core/dist/esm/components/Pagination/index';\nimport React, { useEffect, useReducer } from 'react';\nimport {\n    SortByDirection,\n    Table,\n    TableBody,\n    TableHeader,\n    cellWidth,\n    expandable,\n    sortable\n} from '@patternfly/react-table/dist/esm/components/Table/index';\nimport { gqlProps, totalMatchesTitle } from '../Common';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { GET_SIGNATURE_TABLE } from '../../operations/queries';\nimport { Link } from 'react-router-dom';\nimport Loading from '../../Components/Loading/Loading';\nimport MessageState from '../MessageState/MessageState';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { SearchIcon } from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport StatusLabel from '../StatusLabel/StatusLabel';\nimport { Tooltip } from '@patternfly/react-core/dist/esm/components/Tooltip/Tooltip';\nimport messages from '../../Messages';\nimport { sigTableFilters } from '../../store/cache';\nimport { useIntl } from 'react-intl';\nimport { useQuery } from '@apollo/client';\nimport { useReactiveVar } from '@apollo/client';\nimport SignatureDesctiprion from './SignatureDescription';\n\nconst initialState = {\n    tableVars: {\n        limit: 10,\n        offset: 0,\n        orderBy: 'LAST_MATCH_DATE_DESC',\n        ruleName: ''\n    },\n    sortBy: {\n        index: 4,\n        direction: SortByDirection.desc\n    },\n    rows: []\n};\nconst sortIndices = { 1: 'NAME', 2: 'HAS_MATCH', 3: 'HOST_COUNT', 4: 'LAST_MATCH_DATE' };\nconst orderBy = ({ index, direction }) => `${sortIndices[index]}_${direction === SortByDirection.asc ? 'ASC' : 'DESC'}`;\n\nconst tableReducer = (state, action) => {\n    switch (action.type) {\n        case 'setTableVars':\n            return { ...state, tableVars: { ...state.tableVars, ...action.payload } };\n        case 'setSortBy':\n            return { ...state, sortBy: action.payload, tableVars: { ...state.tableVars, ...action.tableVars } };\n        case 'setRows':\n            return { ...state, rows: action.payload };\n    }\n\n    return state;\n};\n\nconst SigTable = () => {\n    const intl = useIntl();\n    const [{ tableVars, sortBy, rows }, stateSet] = useReducer(tableReducer, {\n        ...initialState\n    });\n    const { data: sigTableData, loading: sigTableLoading, error: sigTableError } =\n        useQuery(GET_SIGNATURE_TABLE, { variables: { ...tableVars, ...useReactiveVar(sigTableFilters) } });\n    const columns = [\n        { title: intl.formatMessage(messages.sigName), cellFormatters: [expandable], transforms: [cellWidth(45), sortable] },\n        { title: intl.formatMessage(messages.lastStatus), transforms: [cellWidth(10), sortable] },\n        { title: intl.formatMessage(messages.systems), transforms: [cellWidth(10), sortable] },\n        { title: intl.formatMessage(messages.matched), transforms: [cellWidth(10), sortable] }\n    ];\n\n    const page = tableVars.offset / tableVars.limit + 1;\n\n    const onCollapse = (e, rowKey, isOpen) => {\n        const collapseRows = [...rows];\n        const sig = collapseRows[rowKey + 1].sigData;\n\n        collapseRows[rowKey] = { ...collapseRows[rowKey], isOpen };\n        collapseRows[rowKey + 1].cells = [{\n            title: <SignatureDesctiprion signature={sig}/>\n        }];\n        stateSet({ type: 'setRows', payload: collapseRows });\n    };\n\n    const FILTER_CATEGORIES = {\n        sig_match: {\n            type: 'radio', title: intl.formatMessage(messages.status), urlParam: 'sig_match', values: [\n                { label: intl.formatMessage(messages.all), value: 'all' },\n                { label: intl.formatMessage(messages.matched), value: 'true' },\n                { label: intl.formatMessage(messages.notMatched), value: 'false' }\n            ]\n        }\n    };\n    const filterConfigItems = [{\n        label: intl.formatMessage(messages.signature).toLowerCase(),\n        filterValues: {\n            key: 'text-filter',\n            onChange: (e, value) => stateSet({ type: 'setTableVars', payload: { ruleName: value, offset: 0 } }),\n            value: tableVars.ruleName,\n            placeholder: intl.formatMessage(messages.filterBy, { field: intl.formatMessage(messages.signature).toLowerCase() })\n        }\n    }, {\n        label: FILTER_CATEGORIES.sig_match.title.toLowerCase(),\n        type: FILTER_CATEGORIES.sig_match.type,\n        id: FILTER_CATEGORIES.sig_match.urlParam,\n        value: `radio-${FILTER_CATEGORIES.sig_match.urlParam}`,\n        filterValues: {\n            key: `${FILTER_CATEGORIES.sig_match.urlParam}-filter`,\n            onChange: (e, value) => {\n                const tableFilters = sigTableFilters();\n                value === 'all' && delete tableFilters?.condition;\n                value === 'all' ? sigTableFilters({ ...tableFilters }) :\n                    sigTableFilters({ ...tableFilters, condition: { hasMatch: JSON.parse(value) } });\n            },\n            value: JSON.stringify(sigTableFilters().condition?.hasMatch) || 'all',\n            items: FILTER_CATEGORIES.sig_match.values\n        }\n    }];\n\n    const onSetPage = (e, page) => stateSet({ type: 'setTableVars', payload: { offset: page * tableVars.limit - tableVars.limit } });\n\n    const onPerPageSelect = (e, perPage) => stateSet({ type: 'setTableVars', payload: { limit: perPage, offset: 0 } });\n\n    const onSort = (e, index, direction) =>\n        stateSet({ type: 'setSortBy', payload: { index, direction }, tableVars: { orderBy: orderBy({ index, direction }), offset: 0 } });\n\n    const buildFilterChips = () => {\n        const chips = [];\n        const hasMatch = sigTableFilters().condition?.hasMatch !== undefined && (sigTableFilters().condition?.hasMatch ?\n            intl.formatMessage(messages.matched) : intl.formatMessage(messages.notMatched));\n        tableVars?.ruleName &&\n        chips.push({ category: intl.formatMessage(messages.signature), value: 'name',\n            chips: [{ name: tableVars?.ruleName, value: tableVars?.ruleName }] });\n        hasMatch && chips.push({ category: intl.formatMessage(messages.status), value: 'matched', chips: [{ name: hasMatch, value: hasMatch }] });\n        return chips;\n    };\n\n    const activeFiltersConfig = {\n        deleteTitle: intl.formatMessage(messages.resetFilters),\n        filters: buildFilterChips(),\n        onDelete: (event, itemsToRemove, isAll) => {\n            if (isAll) {\n                sigTableFilters({});\n                stateSet({ type: 'setTableVars', payload: { ruleName: '' } });\n            } else {\n                itemsToRemove.map((item) => {\n                    item.value === 'name' && stateSet({ type: 'setTableVars', payload: { ruleName: '' } });\n                    item.value === 'matched' && sigTableFilters({});\n                });\n            }\n        }\n    };\n\n    useEffect(() => {\n        const rowBuilder = data => data?.rulesList?.flatMap((data, key) => {\n            const sig = data;\n            return [{\n                rowId: key,\n                isOpen: false,\n                cells: [\n                    { title: <Link to={`/signatures/${sig.name}`}>{sig.name}</Link> },\n                    { title: <StatusLabel isDisabled={sig.isDisabled} hasMatch={sig.hasMatch} displayMatch /> },\n                    { title: <Link to={`/signatures/${sig.name}`}>{sig.hostCount?.toLocaleString()}</Link> },\n                    {\n                        title: sig.lastMatchDate ?\n                            <Tooltip content={<DateFormat date={new Date(sig.lastMatchDate)} type='exact' />}>\n                                <span><DateFormat date={new Date(sig.lastMatchDate)} type='onlyDate' /></span>\n                            </Tooltip>\n                            : <Tooltip content={intl.formatMessage(messages.noHostHas)}>\n                                <span>{intl.formatMessage(messages.never)}</span>\n                            </Tooltip>\n                    }\n                ]\n            }, {\n                parent: key * 2,\n                sigData: sig,\n                fullWidth: true,\n                cells: []\n            }];\n        });\n\n        stateSet({ type: 'setRows', payload: rowBuilder(sigTableData) });\n    }, [intl, sigTableData]);\n\n    return <React.Fragment>\n        <PrimaryToolbar\n            pagination={{\n                itemCount: sigTableData?.rules?.totalCount || 0,\n                page,\n                perPage: tableVars.limit,\n                onSetPage(e, page) { onSetPage(e, page); },\n                onPerPageSelect(e, perPage) { onPerPageSelect(e, perPage); },\n                isCompact: true\n            }}\n            filterConfig={{ items: filterConfigItems }}\n            activeFiltersConfig={activeFiltersConfig}\n        />\n        <Table className='sigTable' aria-label='Signature table'\n            onCollapse={onCollapse}\n            rows={rows} cells={columns}\n            onSort={onSort} sortBy={sortBy} isStickyHeader>\n            <TableHeader />\n            <TableBody />\n        </Table>\n        {sigTableLoading && <Loading type='table' />}\n        {!sigTableLoading && !sigTableError && sigTableData?.rules?.totalCount === 0 &&\n            <MessageState className='pf-c-card' icon={SearchIcon} variant='large' title={intl.formatMessage(messages.noResults)}\n                text={intl.formatMessage(messages.noResultsMatch)} />}\n        {sigTableError && <MessageState className='pf-c-card' variant='large' title='Error' text='error' />}\n        <Pagination\n            itemCount={sigTableData?.rules?.totalCount || 0}\n            widgetId='pagination-options-menu-bottom'\n            perPage={tableVars.limit}\n            page={page}\n            variant={PaginationVariant.bottom}\n            onSetPage={onSetPage}\n            onPerPageSelect={onPerPageSelect}\n        />\n    </React.Fragment>;\n};\n\nSigTable.propTypes = gqlProps;\n\nexport default SigTable;\n","import { Label } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nconst StatusLabel = ({ isDisabled, hasMatch, displayMatch = false }) => {\n    const intl = useIntl();\n    return displayMatch ? <React.Fragment>\n        {hasMatch && <Label color='red'>{intl.formatMessage(messages.matched)}</Label>}\n        {!hasMatch && <Label color='blue'>{intl.formatMessage(messages.notMatched)}</Label>}\n    </React.Fragment> : <React.Fragment>\n        {isDisabled && <Label>{intl.formatMessage(messages.disabled)}</Label>}\n        {!isDisabled && <Label color='blue'>{intl.formatMessage(messages.enabled)}</Label>}\n    </React.Fragment>;\n};\n\nStatusLabel.propTypes = {\n    isDisabled: PropTypes.bool,\n    hasMatch: PropTypes.bool,\n    displayMatch: PropTypes.bool\n};\nexport default StatusLabel;\n","/* eslint-disable no-unused-vars */\nimport './SysTable.scss';\n\nimport { Pagination, PaginationVariant } from '@patternfly/react-core/dist/esm/components/Pagination/index';\nimport React, { useEffect, useReducer } from 'react';\nimport {\n    SortByDirection,\n    Table,\n    TableBody,\n    TableHeader,\n    cellWidth,\n    sortable\n} from '@patternfly/react-table/dist/esm/components/Table/index';\n\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { GET_SYSTEM_TABLE } from '../../operations/queries';\nimport { Link } from 'react-router-dom';\nimport Loading from '../Loading/Loading';\nimport MessageState from '../MessageState/MessageState';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { SearchIcon } from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport StatusLabel from '../StatusLabel/StatusLabel';\nimport { Tooltip } from '@patternfly/react-core/dist/esm/components/Tooltip/Tooltip';\nimport { gqlProps } from '../Common';\nimport messages from '../../Messages';\nimport { sysTableFilters } from '../../store/cache';\nimport { totalMatchesTitle } from '../Common';\nimport { useIntl } from 'react-intl';\nimport { useQuery } from '@apollo/client';\nimport { useReactiveVar } from '@apollo/client';\n\nconst initialState = {\n    tableVars: {\n        limit: 10,\n        offset: 0,\n        orderBy: 'LAST_SCAN_DATE_DESC',\n        name: ''\n    },\n    sortBy: {\n        index: 4,\n        direction: SortByDirection.desc\n    },\n    rows: []\n};\nconst sortIndices = { 0: 'DISPLAY_NAME', 1: 'HAS_MATCH', 2: 'LAST_MATCH_DATE', 3: 'TOTAL_MATCHES', 4: 'LAST_SCAN_DATE' };\nconst orderBy = ({ index, direction }) => `${sortIndices[index]}_${direction === SortByDirection.asc ? 'ASC' : 'DESC'}`;\n\nconst tableReducer = (state, action) => {\n    switch (action.type) {\n        case 'setTableVars':\n            return { ...state, tableVars: { ...state.tableVars, ...action.payload } };\n        case 'setSortBy':\n            return { ...state, sortBy: action.payload, tableVars: { ...state.tableVars, ...action.tableVars } };\n        case 'setRows':\n            return { ...state, rows: action.payload };\n    }\n\n    return state;\n};\n\nconst SysTable = () => {\n    const intl = useIntl();\n    const [{ tableVars, sortBy, rows }, stateSet] = useReducer(tableReducer, {\n        ...initialState\n    });\n    const { data: sysTableData, loading: sysTableLoading, error: sysTableError } =\n        useQuery(GET_SYSTEM_TABLE, { variables: { ...tableVars, ...useReactiveVar(sysTableFilters) } });\n    const columns = [\n        { title: intl.formatMessage(messages.name), transforms: [cellWidth(45), sortable] },\n        { title: intl.formatMessage(messages.lastStatus), transforms: [sortable, cellWidth(10)] },\n        { title: intl.formatMessage(messages.matched), transforms: [sortable, cellWidth(10)] },\n        { title: <span>{totalMatchesTitle({ tooltip: intl.formatMessage(messages.totalMatchesNote),\n            title: intl.formatMessage(messages.totalMatches) })}</span>, transforms: [sortable, cellWidth(15)] },\n        { title: intl.formatMessage(messages.lastScan), transforms: [sortable, cellWidth(10)] }\n    ];\n\n    const page = tableVars.offset / tableVars.limit + 1;\n\n    const filterConfigItems = [{\n        label: intl.formatMessage(messages.name).toLowerCase(),\n        filterValues: {\n            key: 'text-filter',\n            onChange: (e, value) => stateSet({ type: 'setTableVars', payload: { name: value, offset: 0 } }),\n            value: tableVars.name,\n            placeholder: intl.formatMessage(messages.filterBy, { field: intl.formatMessage(messages.name).toLowerCase() })\n        }\n    }];\n\n    const onSetPage = (e, page) => stateSet({ type: 'setTableVars', payload: { offset: page * tableVars.limit - tableVars.limit } });\n\n    const onPerPageSelect = (e, perPage) => stateSet({ type: 'setTableVars', payload: { limit: perPage, offset: 0 } });\n\n    const onSort = (e, index, direction) =>\n        stateSet({ type: 'setSortBy', payload: { index, direction }, tableVars: { orderBy: orderBy({ index, direction }), offset: 0 } });\n\n    const buildFilterChips = () => {\n        const chips = [];\n        const hasMatch = sysTableFilters().condition?.hasMatch !== undefined && (sysTableFilters().condition?.hasMatch ?\n            intl.formatMessage(messages.matched) : intl.formatMessage(messages.notMatched));\n        tableVars?.name &&\n        chips.push({ category: intl.formatMessage(messages.name), value: 'name',\n            chips: [{ name: tableVars?.name, value: tableVars?.name }] });\n        hasMatch && chips.push({ category: intl.formatMessage(messages.status), value: 'matched', chips: [{ name: hasMatch, value: hasMatch }] });\n        return chips;\n    };\n\n    const activeFiltersConfig = {\n        deleteTitle: intl.formatMessage(messages.resetFilters),\n        filters: buildFilterChips(),\n        onDelete: (event, itemsToRemove, isAll) => {\n            if (isAll) {\n                sysTableFilters({});\n                stateSet({ type: 'setTableVars', payload: { name: '' } });\n            } else {\n                itemsToRemove.map((item) => {\n                    item.value === 'name' && stateSet({ type: 'setTableVars', payload: { name: '' } });\n                    item.value === 'matched' && sysTableFilters({});\n                });\n            }\n        }\n    };\n\n    useEffect(() => {\n        const rowBuilder = data => data?.hostsList?.flatMap((data, key) => ({\n            rowId: key,\n            cells: [\n                { title: <Link to={`/systems/${data.displayName}`}>{data.displayName}</Link> },\n                { title: <StatusLabel isDisabled={data.isDisabled} hasMatch={data.hasMatch} displayMatch /> },\n                {\n                    title: data.lastMatchDate ?\n                        <Tooltip content={<DateFormat date={new Date(data.lastMatchDate)} type='exact' />}>\n                            <span><DateFormat date={new Date(data.lastMatchDate)} type='onlyDate' /></span>\n                        </Tooltip>\n                        : <Tooltip content={intl.formatMessage(messages.noHostHas)}>\n                            <span>{intl.formatMessage(messages.never)}</span>\n                        </Tooltip>\n                },\n                { title: <Link to={`/systems/${data.displayName}`}>{data.totalMatches?.toLocaleString()}</Link> },\n                { title: <Tooltip content={<DateFormat date={new Date(data.lastScanDate)} type='exact' />}>\n                    <span><DateFormat date={new Date(data.lastScanDate)} /></span>\n                </Tooltip> }\n\n            ]\n        }));\n\n        stateSet({ type: 'setRows', payload: rowBuilder(sysTableData) });\n    }, [intl, sysTableData]);\n\n    return <React.Fragment>\n        <PrimaryToolbar\n            pagination={{\n                itemCount: sysTableData?.hosts?.totalCount || 0,\n                page,\n                perPage: tableVars.limit,\n                onSetPage(e, page) { onSetPage(e, page); },\n                onPerPageSelect(e, perPage) { onPerPageSelect(e, perPage); },\n                isCompact: true\n            }}\n            filterConfig={{ items: filterConfigItems }}\n            activeFiltersConfig={activeFiltersConfig}\n        />\n        <Table className='sysTable' aria-label='System table'\n            rows={rows} cells={columns}\n            onSort={onSort} sortBy={sortBy} isStickyHeader>\n            <TableHeader />\n            <TableBody />\n        </Table>\n        {sysTableLoading && <Loading type='table' />}\n        {!sysTableLoading && !sysTableError && sysTableData?.hosts?.totalCount === 0 &&\n            <MessageState className='pf-c-card' icon={SearchIcon} variant='large' title={intl.formatMessage(messages.noResults)}\n                text={intl.formatMessage(messages.noResultsMatch)} />}\n        {sysTableError && <MessageState className='pf-c-card' variant='large' title='Error' text='error' />}\n        <Pagination\n            itemCount={sysTableData?.hosts?.totalCount || 0}\n            widgetId='pagination-options-menu-bottom'\n            perPage={tableVars.limit}\n            page={page}\n            variant={PaginationVariant.bottom}\n            onSetPage={onSetPage}\n            onPerPageSelect={onPerPageSelect}\n        />\n    </React.Fragment>;\n};\n\nSysTable.propTypes = gqlProps;\n\nexport default SysTable;\n"],"names":["useReactiveVar","rv","value","setValue","useState","useEffect","probablySameValue","onNextChange","exports","tslib_1","React","__importStar","react_styles_1","content_1","__importDefault","helpers_1","TextVariants","_a","children","className","component","p","isVisitedLink","ouiaId","ouiaSafe","props","__rest","Component","ouiaProps","useOUIAProps","createElement","Object","assign","css","a","default","modifiers","visited","CodeEditor","code","language","isReadOnly","isDownloadEnabled","isCopyEnabled","height","intl","useIntl","isLanguageLabelVisible","emptyState","icon","LockIcon","variant","title","formatMessage","messages","text","propTypes","PropTypes","defaultProps","codeType","MessageState","iconClass","iconStyle","style","headingLevel","size","marginBottom","CubesIcon","EmptyStateVariant","SignatureDesctiprion","signature","isCodeEditorEnabled","Grid","hasGutter","GridItem","span","rawRule","Text","metadata","description","initialState","tableVars","limit","offset","orderBy","ruleName","sortBy","index","direction","SortByDirection","rows","sortIndices","tableReducer","state","action","type","payload","SigTable","chips","hasMatch","useReducer","stateSet","useQuery","GET_SIGNATURE_TABLE","variables","sigTableFilters","sigTableData","data","sigTableLoading","loading","sigTableError","error","columns","cellFormatters","expandable","transforms","cellWidth","sortable","page","FILTER_CATEGORIES","sig_match","urlParam","values","label","filterConfigItems","toLowerCase","filterValues","key","onChange","e","placeholder","field","id","tableFilters","condition","JSON","parse","stringify","items","onSetPage","onPerPageSelect","perPage","activeFiltersConfig","deleteTitle","filters","undefined","push","category","name","onDelete","event","itemsToRemove","isAll","map","item","rulesList","flatMap","sig","rowId","isOpen","cells","Link","to","StatusLabel","isDisabled","displayMatch","hostCount","toLocaleString","lastMatchDate","Tooltip","content","DateFormat","date","Date","parent","sigData","fullWidth","PrimaryToolbar","pagination","itemCount","rules","totalCount","isCompact","filterConfig","Table","onCollapse","rowKey","collapseRows","onSort","isStickyHeader","Loading","SearchIcon","Pagination","widgetId","PaginationVariant","gqlProps","color","SysTable","GET_SYSTEM_TABLE","sysTableFilters","sysTableData","sysTableLoading","sysTableError","totalMatchesTitle","tooltip","hostsList","displayName","totalMatches","lastScanDate","hosts"],"sourceRoot":""}