{"version":3,"file":"js/SigTable.95cccce76060a0cfbc40.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Label/Label.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Label/label-group.mjs","webpack:///./node_modules/@patternfly/react-styles/css/components/Label/label.mjs","webpack:///./src/Components/SigTable/SignatureDescription.js","webpack:///./src/Components/SigTable/SigTable.js","webpack:///./node_modules/@apollo/client/react/hooks/useReactiveVar.js","webpack:///./src/Components/SysTable/constants.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryLoadError.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/WithHistory.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryTable.js","webpack:///./src/Components/SysTable/matchFilter.js","webpack:///./src/Components/SysTable/Helpers.js","webpack:///./src/Components/SysTable/SysTable.js","webpack:///./src/Components/SysTable/hooks.js","webpack:///./src/operations/mutations.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport styles from '@patternfly/react-styles/css/components/Label/label';\nimport labelGrpStyles from '@patternfly/react-styles/css/components/Label/label-group';\nimport { Button } from '../Button';\nimport { Tooltip } from '../Tooltip';\nimport { css } from '@patternfly/react-styles';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport { useIsomorphicLayoutEffect } from '../../helpers';\nconst colorStyles = {\n    blue: styles.modifiers.blue,\n    cyan: styles.modifiers.cyan,\n    green: styles.modifiers.green,\n    orange: styles.modifiers.orange,\n    purple: styles.modifiers.purple,\n    red: styles.modifiers.red,\n    gold: styles.modifiers.gold,\n    grey: ''\n};\nexport const Label = (_a) => {\n    var { children, className = '', color = 'grey', variant = 'filled', isCompact = false, isEditable = false, editableProps, textMaxWidth, tooltipPosition, icon, onClose, onClick: onLabelClick, onEditCancel, onEditComplete, closeBtn, closeBtnAriaLabel, closeBtnProps, href, isOverflowLabel, render } = _a, props = __rest(_a, [\"children\", \"className\", \"color\", \"variant\", \"isCompact\", \"isEditable\", \"editableProps\", \"textMaxWidth\", \"tooltipPosition\", \"icon\", \"onClose\", \"onClick\", \"onEditCancel\", \"onEditComplete\", \"closeBtn\", \"closeBtnAriaLabel\", \"closeBtnProps\", \"href\", \"isOverflowLabel\", \"render\"]);\n    const [isEditableActive, setIsEditableActive] = useState(false);\n    const [currValue, setCurrValue] = useState(children);\n    const editableButtonRef = React.useRef();\n    const editableInputRef = React.useRef();\n    React.useEffect(() => {\n        document.addEventListener('mousedown', onDocMouseDown);\n        document.addEventListener('keydown', onKeyDown);\n        return () => {\n            document.removeEventListener('mousedown', onDocMouseDown);\n            document.removeEventListener('keydown', onKeyDown);\n        };\n    });\n    React.useEffect(() => {\n        if (onLabelClick && href) {\n            // eslint-disable-next-line no-console\n            console.warn('Link labels cannot have onClick passed, this results in invalid HTML. Please remove either the href or onClick prop.');\n        }\n        else if (onLabelClick && isEditable) {\n            // eslint-disable-next-line no-console\n            console.warn('Editable labels cannot have onClick passed, clicking starts the label edit process. Please remove either the isEditable or onClick prop.');\n        }\n    }, [onLabelClick, href, isEditable]);\n    const onDocMouseDown = (event) => {\n        if (isEditableActive &&\n            editableInputRef &&\n            editableInputRef.current &&\n            !editableInputRef.current.contains(event.target)) {\n            if (editableInputRef.current.value) {\n                onEditComplete && onEditComplete(event, editableInputRef.current.value);\n            }\n            setIsEditableActive(false);\n        }\n    };\n    const onKeyDown = (event) => {\n        var _a, _b;\n        const key = event.key;\n        if ((!isEditableActive &&\n            (!editableButtonRef ||\n                !editableButtonRef.current ||\n                !editableButtonRef.current.contains(event.target))) ||\n            (isEditableActive &&\n                (!editableInputRef || !editableInputRef.current || !editableInputRef.current.contains(event.target)))) {\n            return;\n        }\n        if (isEditableActive && (key === 'Enter' || key === 'Tab')) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            if (editableInputRef.current.value) {\n                onEditComplete && onEditComplete(event, editableInputRef.current.value);\n            }\n            setIsEditableActive(false);\n            (_a = editableButtonRef === null || editableButtonRef === void 0 ? void 0 : editableButtonRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n        }\n        if (isEditableActive && key === 'Escape') {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            // Reset div text to initial children prop - pre-edit\n            if (editableInputRef.current.value) {\n                editableInputRef.current.value = children;\n                onEditCancel && onEditCancel(event, children);\n            }\n            setIsEditableActive(false);\n            (_b = editableButtonRef === null || editableButtonRef === void 0 ? void 0 : editableButtonRef.current) === null || _b === void 0 ? void 0 : _b.focus();\n        }\n        if (!isEditableActive && key === 'Enter') {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            setIsEditableActive(true);\n            // Set cursor position to end of text\n            const el = event.target;\n            const range = document.createRange();\n            const sel = window.getSelection();\n            range.selectNodeContents(el);\n            range.collapse(false);\n            sel.removeAllRanges();\n            sel.addRange(range);\n        }\n    };\n    const LabelComponent = (isOverflowLabel ? 'button' : 'span');\n    const defaultButton = (React.createElement(Button, Object.assign({ type: \"button\", variant: \"plain\", onClick: onClose, \"aria-label\": closeBtnAriaLabel || `Close ${children}` }, closeBtnProps),\n        React.createElement(TimesIcon, null)));\n    const button = React.createElement(\"span\", { className: css(styles.labelActions) }, closeBtn || defaultButton);\n    const textRef = React.createRef();\n    // ref to apply tooltip when rendered is used\n    const componentRef = React.useRef();\n    const [isTooltipVisible, setIsTooltipVisible] = React.useState(false);\n    useIsomorphicLayoutEffect(() => {\n        const currTextRef = isEditable ? editableButtonRef : textRef;\n        if (!isEditableActive) {\n            setIsTooltipVisible(currTextRef.current && currTextRef.current.offsetWidth < currTextRef.current.scrollWidth);\n        }\n    }, [isEditableActive]);\n    const content = (React.createElement(React.Fragment, null,\n        icon && React.createElement(\"span\", { className: css(styles.labelIcon) }, icon),\n        React.createElement(\"span\", Object.assign({ ref: textRef, className: css(styles.labelText) }, (textMaxWidth && {\n            style: {\n                '--pf-v5-c-label__text--MaxWidth': textMaxWidth\n            }\n        })), children)));\n    React.useEffect(() => {\n        if (isEditableActive && editableInputRef) {\n            editableInputRef.current && editableInputRef.current.focus();\n        }\n    }, [editableInputRef, isEditableActive]);\n    const updateVal = () => {\n        setCurrValue(editableInputRef.current.value);\n    };\n    let LabelComponentChildElement = 'span';\n    if (href) {\n        LabelComponentChildElement = 'a';\n    }\n    else if (isEditable || (onLabelClick && !isOverflowLabel)) {\n        LabelComponentChildElement = 'button';\n    }\n    const clickableLabelProps = {\n        type: 'button',\n        onClick: onLabelClick\n    };\n    const isButton = LabelComponentChildElement === 'button';\n    const labelComponentChildProps = Object.assign(Object.assign(Object.assign(Object.assign({ className: css(styles.labelContent) }, (isTooltipVisible && { tabIndex: 0 })), (href && { href })), (isButton && clickableLabelProps)), (isEditable && Object.assign({ ref: editableButtonRef, onClick: (e) => {\n            setIsEditableActive(true);\n            e.stopPropagation();\n        } }, editableProps)));\n    let labelComponentChild = (React.createElement(LabelComponentChildElement, Object.assign({}, labelComponentChildProps), content));\n    if (render) {\n        labelComponentChild = (React.createElement(React.Fragment, null,\n            isTooltipVisible && React.createElement(Tooltip, { triggerRef: componentRef, content: children, position: tooltipPosition }),\n            render({\n                className: styles.labelContent,\n                content,\n                componentRef\n            })));\n    }\n    else if (isTooltipVisible) {\n        labelComponentChild = (React.createElement(Tooltip, { content: children, position: tooltipPosition }, labelComponentChild));\n    }\n    return (React.createElement(LabelComponent, Object.assign({}, props, { className: css(styles.label, colorStyles[color], variant === 'outline' && styles.modifiers.outline, isOverflowLabel && styles.modifiers.overflow, isCompact && styles.modifiers.compact, isEditable && labelGrpStyles.modifiers.editable, isEditableActive && styles.modifiers.editableActive, className), onClick: isOverflowLabel ? onLabelClick : undefined }),\n        !isEditableActive && labelComponentChild,\n        !isEditableActive && onClose && button,\n        isEditableActive && (React.createElement(\"input\", Object.assign({ className: css(styles.labelContent), type: \"text\", id: \"editable-input\", ref: editableInputRef, value: currValue, onChange: updateVal }, editableProps)))));\n};\nLabel.displayName = 'Label';\n//# sourceMappingURL=Label.js.map","import './label-group.css';\nexport default {\n  \"button\": \"pf-v5-c-button\",\n  \"labelGroup\": \"pf-v5-c-label-group\",\n  \"labelGroupClose\": \"pf-v5-c-label-group__close\",\n  \"labelGroupLabel\": \"pf-v5-c-label-group__label\",\n  \"labelGroupList\": \"pf-v5-c-label-group__list\",\n  \"labelGroupListItem\": \"pf-v5-c-label-group__list-item\",\n  \"labelGroupMain\": \"pf-v5-c-label-group__main\",\n  \"labelGroupTextarea\": \"pf-v5-c-label-group__textarea\",\n  \"modifiers\": {\n    \"category\": \"pf-m-category\",\n    \"vertical\": \"pf-m-vertical\",\n    \"editable\": \"pf-m-editable\",\n    \"textarea\": \"pf-m-textarea\"\n  }\n};","import './label.css';\nexport default {\n  \"button\": \"pf-v5-c-button\",\n  \"label\": \"pf-v5-c-label\",\n  \"labelActions\": \"pf-v5-c-label__actions\",\n  \"labelContent\": \"pf-v5-c-label__content\",\n  \"labelIcon\": \"pf-v5-c-label__icon\",\n  \"labelText\": \"pf-v5-c-label__text\",\n  \"modifiers\": {\n    \"compact\": \"pf-m-compact\",\n    \"blue\": \"pf-m-blue\",\n    \"green\": \"pf-m-green\",\n    \"orange\": \"pf-m-orange\",\n    \"red\": \"pf-m-red\",\n    \"purple\": \"pf-m-purple\",\n    \"cyan\": \"pf-m-cyan\",\n    \"gold\": \"pf-m-gold\",\n    \"outline\": \"pf-m-outline\",\n    \"overflow\": \"pf-m-overflow\",\n    \"add\": \"pf-m-add\",\n    \"editable\": \"pf-m-editable\",\n    \"editableActive\": \"pf-m-editable-active\"\n  },\n  \"themeDark\": \"pf-v5-theme-dark\"\n};","import React, { useState } from 'react';\nimport CodeEditor from '../CodeEditor/CodeEditor';\nimport { Grid, GridItem } from '@patternfly/react-core/dist/esm/layouts/Grid/index';\nimport PropTypes from 'prop-types';\nimport { Text, TextVariants } from '@patternfly/react-core';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nconst SignatureDesctiprion = ({ signature }) => {\n    const intl = useIntl();\n    const [isCodeEditorEnabled] = useState(false);\n    return (\n        <Grid hasGutter>\n            {isCodeEditorEnabled && (\n                <GridItem span={6}>\n                    <CodeEditor code={signature.rawRule} isReadOnly />\n                </GridItem>\n            )}\n            <GridItem span={isCodeEditorEnabled && 6 || 12}> <Text className='ins-l-sigtable--title' component={TextVariants.h6}>\n                {intl.formatMessage(messages.description)}\n            </Text>{signature.metadata.description}\n            </GridItem>\n        </Grid>\n    );\n};\n\nSignatureDesctiprion.propTypes = {\n    signature: PropTypes.object\n};\nexport default SignatureDesctiprion;\n","/* eslint-disable no-unused-vars */\nimport './SigTable.scss';\n\nimport { Pagination, PaginationVariant } from '@patternfly/react-core/dist/esm/components/Pagination/index';\nimport React, { useEffect, useReducer, useState } from 'react';\nimport {\n    SortByDirection,\n    cellWidth,\n    expandable,\n    sortable\n} from '@patternfly/react-table/dist/esm/components/Table/index';\nimport {\n    Table,\n    TableBody,\n    TableHeader\n} from '@patternfly/react-table/dist/esm/deprecated/components/Table/index';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { gqlProps, RBACPermissions } from '../Common';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { GET_SIGNATURE_TABLE } from '../../operations/queries';\nimport { DISABLE_SIGNATURES, ENABLE_SIGNATURES } from '../../operations/mutations';\nimport MessageState from '../MessageState/MessageState';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { SearchIcon } from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport StatusLabel from '../StatusLabel/StatusLabel';\nimport { Tooltip } from '@patternfly/react-core/dist/esm/components/Tooltip/Tooltip';\nimport { Label } from '@patternfly/react-core/dist/esm/components/Label';\nimport messages from '../../Messages';\nimport { sigTableFilters } from '../../store/cache';\nimport { useIntl } from 'react-intl';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { useReactiveVar } from '@apollo/client';\nimport SignatureDescription from './SignatureDescription';\nimport InsightsLink from '@redhat-cloud-services/frontend-components/InsightsLink';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { useDispatch } from 'react-redux';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport SkeletonTable from '@patternfly/react-component-groups/dist/esm/SkeletonTable';\n\nconst initialState = {\n    tableVars: {\n        limit: 10,\n        offset: 0,\n        orderBy: ['LAST_MATCH_DATE_NULLS_LAST_DESC', 'NAME_ASC'],\n        ruleName: ''\n    },\n    sortBy: {\n        index: 5,\n        direction: SortByDirection.desc\n    },\n    rows: [],\n    selectedSigs: []\n};\nconst sortIndices = { 2: 'NAME', 3: 'HAS_MATCH', 4: 'HOST_COUNT', 5: 'LAST_MATCH_DATE_NULLS_LAST' };\nconst orderBy = ({ index, direction }) => {\n    const orderByVariable = `${sortIndices[index]}_${direction === SortByDirection.asc ? 'ASC' : 'DESC'}`;\n    // Additionally orderBy signature name to add more determinism to the order of the table rows\n    return sortIndices[index] !== 'NAME' ? [orderByVariable, 'NAME_ASC'] : orderByVariable;\n};\n\nconst tableReducer = (state, action) => {\n    switch (action.type) {\n        case 'setTableVars':\n            return { ...state, tableVars: { ...state.tableVars, ...action.payload } };\n        case 'setSortBy':\n            return { ...state, sortBy: action.payload, tableVars: { ...state.tableVars, ...action.tableVars } };\n        case 'setRows':\n            return { ...state, rows: action.payload };\n        case 'setSelectedSigs':\n            return { ...state, selectedSigs: action.payload };\n    }\n\n    return state;\n};\n\nconst SigTable = ({ refetchSigPageData }) => {\n    const intl = useIntl();\n    const dispatch = useDispatch();\n    const notification = (data) => dispatch(addNotification(data));\n    const hasWritePerms = usePermissions('malware-detection', RBACPermissions.write).hasAccess;\n    const [{ tableVars, sortBy, rows, selectedSigs }, stateSet] = useReducer(tableReducer, {\n        ...initialState\n    });\n    const [showTable, setShowTable] = useState(false);\n    const { data: sigTableData, loading: sigTableLoading, error: sigTableError, client } =\n        useQuery(GET_SIGNATURE_TABLE, { variables: { ...tableVars, ...useReactiveVar(sigTableFilters) } });\n    const mutationVars = {\n        variables: { input: { id: selectedSigs.map(sig => sig.id) } },\n        onCompleted: () => {\n            setShowTable(false);  // don't display the sig table rows whilst we are refetching the data\n            client.resetStore();  // clear the query cache so we must refetch all new data\n            refetchSigPageData(); // updates the StatusCard component and hasMalware flag (on the same page as SigTable)\n            stateSet({ type: 'setSelectedSigs', payload: [] }); // unselect any sigs that were selected\n        },\n        onError: ({ networkError: error }) => {\n            const errorMsg = `${error.response.statusText} - ${error.bodyText}`;\n            notification({ variant: 'danger', dismissable: true, title: intl.formatMessage(messages.error), description: `${errorMsg}` });\n        }\n    };\n    const [enableSignature, { loading: enableSigLoading }] = useMutation(ENABLE_SIGNATURES, mutationVars);\n    const [disableSignature, { loading: disableSigLoading }] = useMutation(DISABLE_SIGNATURES, mutationVars);\n\n    const columns = [\n        { title: intl.formatMessage(messages.sigName), cellFormatters: [expandable], transforms: [sortable, cellWidth(45)] },\n        { title: intl.formatMessage(messages.lastStatus), transforms: [cellWidth(10), sortable] },\n        { title: intl.formatMessage(messages.systems), transforms: [cellWidth(10), sortable] },\n        { title: intl.formatMessage(messages.lastMatched), transforms: [cellWidth(10), sortable] }\n    ];\n\n    const page = tableVars.offset / tableVars.limit + 1;\n    const sigTableFiltersInitialState = {\n        items: { hasMatch: 'true', isDisabled: [] },\n        condition: { hasMatch: true, isDisabled: undefined }\n    };\n\n    const updateSelectedSigs = ((selectedRows, selected) => {\n        // This function handles adding/removing sigs to/from the selectedSigs when rows are selected/unselected\n        const rowSigIds = selectedRows.map(row => row.sigData.id);\n        // remove sigs from the list when unselecting, but also prevents duplicate selectedSigs when adding\n        const filteredSigs = selectedSigs.filter(sig => !rowSigIds.includes(sig.id));\n        if (selected) {\n            // add the new selected sigs to the existing list of selectedSigs\n            return [...filteredSigs, ...selectedRows.map(sig =>\n                ({ id: sig.sigData.id, name: sig.sigData.name, isDisabled: sig.sigData.isDisabled }))];\n        } else {\n            return filteredSigs;\n        }\n    });\n\n    const onSelect = (event, selected, rowKey) => {\n        let selectedRows = [...rows];\n        let updatedSelectedSigs;\n        if (rowKey === -1) {\n            // All the rows were selected\n            // However rows are actually in groups of 2 - row 1: rule match details, row 2: rule description (hidden by default),\n            // So only set the first row in each group to selected (not the hidden row too)\n            selectedRows = selectedRows.map((item, key) => key % 2 === 0 ? { ...item, selected } : { ...item });\n            updatedSelectedSigs = updateSelectedSigs(selectedRows.filter((item, key) => key % 2 === 0), selected);\n        } else {\n            selectedRows[rowKey] = { ...selectedRows[rowKey], selected };\n            updatedSelectedSigs = updateSelectedSigs([selectedRows[rowKey]], selected);\n        }\n\n        stateSet({ type: 'setRows', payload: selectedRows });\n        stateSet({ type: 'setSelectedSigs', payload: updatedSelectedSigs });\n    };\n\n    const onCollapse = (e, rowKey, isOpen) => {\n        const collapseRows = [...rows];\n        const sig = collapseRows[rowKey].sigData;\n\n        collapseRows[rowKey] = { ...collapseRows[rowKey], isOpen };\n        collapseRows[rowKey + 1].cells = [{\n            title: <SignatureDescription signature={sig} />\n        }];\n        stateSet({ type: 'setRows', payload: collapseRows });\n    };\n\n    const actionResolver = (rowData, { rowIndex }) => {\n        const sig = rows[rowIndex].sigData || null;\n        if (sig) {\n            const newMutationVars = { ...mutationVars, variables: { input: { id: sig.id } } };\n            return sig.isDisabled ?\n                [{\n                    title: intl.formatMessage(messages.enableSignatureForAnalysis),\n                    onClick: () => enableSignature(newMutationVars)\n                }] : [{\n                    title: intl.formatMessage(messages.disableSignatureFromAnalysis),\n                    onClick: () => disableSignature(newMutationVars)\n                }];\n        }\n    };\n\n    const toolbarActions = [\n        '', // intentionally left blank so a button isn't displayed next to the kebab on the toolbar\n        {\n            label: intl.formatMessage(messages.enableSignaturesForAnalysis),\n            onClick: () => enableSignature(mutationVars),\n            props: { isDisabled: selectedSigs.filter((sig) => sig.isDisabled).length === 0 }\n        }, {\n            label: intl.formatMessage(messages.disableSignaturesFromAnalysis),\n            onClick: () => disableSignature(mutationVars),\n            props: { isDisabled: selectedSigs.filter((sig) => !sig.isDisabled).length === 0 }\n        }];\n\n    const FILTER_CATEGORIES = {\n        sig_match: {\n            type: 'radio', title: intl.formatMessage(messages.status), urlParam: 'sig_match', values: [\n                { label: intl.formatMessage(messages.all), value: 'all' },\n                { label: intl.formatMessage(messages.matched), value: 'true' },\n                { label: intl.formatMessage(messages.notMatched), value: 'false' }\n            ]\n        },\n        sigs_included: {\n            type: 'checkbox', title: intl.formatMessage(messages.signaturesIncludedFilter), urlParam: 'sigs_included', values: [\n                { label: intl.formatMessage(messages.enabledSignaturesFilter), value: 'false' },  // isDisabled: false\n                { label: intl.formatMessage(messages.disabledSignaturesFilter), value: 'true' }   // isDisabled: true\n            ]\n        }\n    };\n    const filterConfigItems = [{\n        label: FILTER_CATEGORIES.sigs_included.title.toLowerCase(),\n        type: FILTER_CATEGORIES.sigs_included.type,\n        id: FILTER_CATEGORIES.sigs_included.urlParam,\n        filterValues: {\n            key: `${FILTER_CATEGORIES.sigs_included.urlParam}-filter`,\n            onChange: (e, value) => {\n                const tableFilters = sigTableFilters();\n                sigTableFilters({\n                    items: { ...tableFilters.items, isDisabled: value },\n                    condition: { ...tableFilters.condition, isDisabled: (value.length !== 1) ? undefined : JSON.parse(value[0]) }\n                });\n            },\n            value: sigTableFilters().items?.isDisabled || [],\n            items: FILTER_CATEGORIES.sigs_included.values\n        }\n    }, {\n        label: intl.formatMessage(messages.signature).toLowerCase(),\n        type: 'text',\n        filterValues: {\n            key: 'text-filter',\n            onChange: (e, value) => stateSet({ type: 'setTableVars', payload: { ruleName: value, offset: 0 } }),\n            value: tableVars.ruleName,\n            placeholder: intl.formatMessage(messages.filterBy, { field: intl.formatMessage(messages.signature).toLowerCase() })\n        }\n    }, {\n        label: FILTER_CATEGORIES.sig_match.title.toLowerCase(),\n        type: FILTER_CATEGORIES.sig_match.type,\n        id: FILTER_CATEGORIES.sig_match.urlParam,\n        value: `radio-${FILTER_CATEGORIES.sig_match.urlParam}`,\n        filterValues: {\n            key: `${FILTER_CATEGORIES.sig_match.urlParam}-filter`,\n            onChange: (e, value) => {\n                const tableFilters = sigTableFilters();\n                sigTableFilters({\n                    items: { ...tableFilters.items, hasMatch: value },\n                    condition: { ...tableFilters.condition, hasMatch: (value === 'all') ? undefined : JSON.parse(value) }\n                });\n            },\n            value: sigTableFilters().items?.hasMatch || 'true',\n            items: FILTER_CATEGORIES.sig_match.values\n        }\n    }];\n\n    const onSetPage = (e, page) => stateSet({ type: 'setTableVars', payload: { offset: page * tableVars.limit - tableVars.limit } });\n\n    const onPerPageSelect = (e, perPage) => stateSet({ type: 'setTableVars', payload: { limit: perPage, offset: 0 } });\n\n    const onSort = (e, index, direction) =>\n        stateSet({ type: 'setSortBy', payload: { index, direction }, tableVars: { orderBy: orderBy({ index, direction }), offset: 0 } });\n\n    const setMatchedFilterChips = ({ event, chips = [] }) => {\n        // Add/remove chips for the Status filter & set the radio button value and API query variable accordingly\n        const tableFilters = sigTableFilters();\n        if (event === 'add') {\n            let matchedMessage = intl.formatMessage(messages.all);\n            if (tableFilters.items?.hasMatch === 'true') {\n                matchedMessage = intl.formatMessage(messages.matched);\n            } else if (tableFilters.items?.hasMatch === 'false') {\n                matchedMessage = intl.formatMessage(messages.notMatched);\n            }\n\n            chips.push({\n                category: intl.formatMessage(messages.status), value: 'matched',\n                chips: [{ name: matchedMessage, value: matchedMessage }]\n            });\n        } else if (event === 'remove') {\n            const [newValue, newCondition] = (tableFilters.items?.hasMatch === 'all') ?\n                ['true', true] : ['all', undefined];\n            sigTableFilters({\n                items: { ...tableFilters.items, hasMatch: newValue },\n                condition: { ...tableFilters.condition, hasMatch: newCondition }\n            });\n        }\n    };\n\n    const setIncludedFilterChips = ({ event, chips = [], item = '' }) => {\n        // Add/remove chips for the Signatures included filter & set the checkbox values and API query variable accordingly\n        const tableFilters = sigTableFilters();\n        if (event === 'add') {\n            const includedFilters = [];\n            tableFilters.items?.isDisabled.map((val) => {\n                const includedMessage = intl.formatMessage(val === 'true' ?\n                    messages.disabledSignaturesFilter : messages.enabledSignaturesFilter);\n                includedFilters.push({ name: includedMessage, value: includedMessage });\n            });\n            chips.push({ category: intl.formatMessage(messages.signaturesIncludedFilter), chips: includedFilters });\n\n        } else if (event === 'remove') {\n            let [newValue, newCondition] = [[], undefined];\n            if (tableFilters.items?.isDisabled.length !== 1) {\n                [newValue, newCondition] = (item.value === intl.formatMessage(messages.enabledSignaturesFilter)) ?\n                    [['true'], true] : [['false'], false];\n            }\n\n            sigTableFilters({\n                items: { ...tableFilters.items, isDisabled: newValue },\n                condition: { ...tableFilters.condition, isDisabled: newCondition }\n            });\n        }\n    };\n\n    const buildFilterChips = () => {\n        const chips = [];\n        tableVars?.ruleName &&\n            chips.push({\n                category: intl.formatMessage(messages.signature), value: 'name',\n                chips: [{ name: tableVars?.ruleName, value: tableVars?.ruleName }]\n            });\n        setMatchedFilterChips({ event: 'add', chips });\n        setIncludedFilterChips({ event: 'add', chips });\n        return chips;\n    };\n\n    const activeFiltersConfig = {\n        deleteTitle: intl.formatMessage(messages.resetFilters),\n        filters: buildFilterChips(),\n        showDeleteButton: true,\n        onDelete: (event, itemsToRemove, isAll) => {\n            if (isAll) {\n                sigTableFilters(sigTableFiltersInitialState);\n                stateSet({ type: 'setTableVars', payload: { ruleName: '' } });\n            } else {\n                itemsToRemove.map((item) => {\n                    item.value === 'name' && stateSet({ type: 'setTableVars', payload: { ruleName: '' } });\n                    item.value === 'matched' && setMatchedFilterChips({ event: 'remove' });\n                    !(item.value === 'name' || item.value === 'matched') && setIncludedFilterChips({ event: 'remove', item });\n                });\n            }\n        }\n    };\n\n    useEffect(() => {\n        sigTableFilters(sigTableFiltersInitialState);\n    }, []);\n\n    useEffect(() => {\n        // A hack to reset the SigTable page offset to the first page whenever the filters change\n        // This is because clicking on the StatusCard links doesn't refresh the pagination start page in the SigTable\n        // There may be a better way to handle this, but this is all I could come up with\n        stateSet({ type: 'setTableVars', payload: { offset: 0 } });\n    }, [sigTableFilters().condition]);\n\n    useEffect(() => {\n        const selectedSigIds = selectedSigs.map(sig => sig.id);\n        const rowBuilder = data => data?.rulesList?.flatMap((data, key) => {\n            const sig = data;\n            return [{\n                rowId: key,\n                isOpen: false,\n                sigData: sig,\n                selected: selectedSigIds.includes(sig.id),\n                cells: [\n                    {\n                        title:\n                            <React.Fragment>\n                                <InsightsLink to={`/signatures/${sig.name}`}>{sig.name}</InsightsLink>\n                                {sig.isDisabled &&\n                                    <React.Fragment>\n                                        <br />\n                                        <Label color='red' isCompact>{intl.formatMessage(messages.disabled)}</Label>\n                                    </React.Fragment>\n                                }\n                            </React.Fragment>\n                    },\n                    {\n                        title: sig.isDisabled ? intl.formatMessage(messages.notApplicable) :\n                            <StatusLabel isDisabled={sig.isDisabled} hasMatch={sig.hasMatch} displayMatch />\n                    },\n                    {\n                        title: sig.isDisabled ? intl.formatMessage(messages.notApplicable) :\n                            <InsightsLink to={`/signatures/${sig.name}`}>{sig.hostCount?.toLocaleString()}</InsightsLink>\n                    },\n                    {\n                        title: sig.isDisabled ? intl.formatMessage(messages.notApplicable) :\n                            sig.lastMatchDate ?\n                                <Tooltip content={<DateFormat date={new Date(sig.lastMatchDate)} type='exact' />}>\n                                    <span><DateFormat date={new Date(sig.lastMatchDate)} /></span>\n                                </Tooltip>\n                                : <Tooltip content={intl.formatMessage(messages.noHostHas)}>\n                                    <span>{intl.formatMessage(messages.never)}</span>\n                                </Tooltip>\n                    }\n                ]\n            }, {\n                parent: key * 2,\n                fullWidth: true,\n                cells: []\n            }];\n        });\n\n        stateSet({ type: 'setRows', payload: rowBuilder(sigTableData) });\n        setShowTable(true);\n    }, [intl, sigTableData]);\n\n    return <React.Fragment>\n        <PrimaryToolbar\n            pagination={{\n                itemCount: sigTableData?.rules?.totalCount || 0,\n                page,\n                perPage: tableVars.limit,\n                onSetPage(e, page) { onSetPage(e, page); },\n                onPerPageSelect(e, perPage) { onPerPageSelect(e, perPage); },\n                isCompact: true\n            }}\n            filterConfig={{ items: filterConfigItems }}\n            activeFiltersConfig={activeFiltersConfig}\n            actionsConfig={hasWritePerms && {\n                actions: toolbarActions,\n                dropdownProps: { ouiaId: 'toolbar-actions' }\n            }}\n        />\n        {enableSigLoading || disableSigLoading || !showTable\n            ? <SkeletonTable\n                rows={tableVars.limit}\n                columns={columns.map(column => column.title)}\n            />\n            : <Table\n                className='sigTable'\n                aria-label='Signature table'\n                onCollapse={onCollapse}\n                rows={rows}\n                cells={columns}\n                onSort={onSort}\n                sortBy={sigTableData?.rulesList?.length > 0 ? sortBy : undefined}\n                isStickyHeader\n                canSelectAll={hasWritePerms}\n                onSelect={hasWritePerms && onSelect}\n                actionResolver={hasWritePerms && actionResolver}\n            >\n                <TableHeader />\n                <TableBody />\n            </Table>\n        }\n\n        {!sigTableLoading && !sigTableError && sigTableData?.rules?.totalCount === 0 &&\n            <MessageState className='pf-c-card' icon={SearchIcon} variant='large' title={intl.formatMessage(messages.noResults)}\n                text={intl.formatMessage(messages.noResultsMatch)} />}\n        {sigTableError && <MessageState className='pf-c-card' variant='large' title='Error' text='error' />}\n        <TableToolbar isFooter>\n            <Pagination\n                itemCount={sigTableData?.rules?.totalCount || 0}\n                widgetId='pagination-options-menu-bottom'\n                perPage={tableVars.limit}\n                page={page}\n                variant={PaginationVariant.bottom}\n                onSetPage={onSetPage}\n                onPerPageSelect={onPerPageSelect}\n            />\n        </TableToolbar>\n    </React.Fragment>;\n};\n\nSigTable.propTypes = gqlProps;\n\nexport default SigTable;\n","import * as React from \"react\";\nimport { useSyncExternalStore } from \"./useSyncExternalStore.js\";\nexport function useReactiveVar(rv) {\n    return useSyncExternalStore(React.useCallback(function (update) {\n        // By reusing the same onNext function in the nested call to\n        // rv.onNextChange(onNext), we can keep using the initial clean-up function\n        // returned by rv.onNextChange(function onNext(v){...}), without having to\n        // register the new clean-up function (returned by the nested\n        // rv.onNextChange(onNext)) with yet another callback.\n        return rv.onNextChange(function onNext() {\n            update();\n            rv.onNextChange(onNext);\n        });\n    }, [rv]), rv, rv);\n}\n//# sourceMappingURL=useReactiveVar.js.map","import React from 'react';\nimport { createIntl, createIntlCache } from 'react-intl';\nimport { entitiesReducer } from '../../store/index';\nimport {\n    cellWidth,\n    info\n} from '@patternfly/react-table/dist/esm/components/Table/index';\nimport messages from '../../Messages';\nimport StatusLabel from '../StatusLabel/StatusLabel';\nimport { Tooltip } from '@patternfly/react-core/dist/esm/components/Tooltip/Tooltip';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { InsightsLink } from '@redhat-cloud-services/frontend-components/InsightsLink';\n\nconst cache = createIntlCache();\nconst locale = navigator.language.slice(0, 2);\n\nexport const intl = createIntl({\n    locale\n}, cache);\n\nexport const intlSettings = { locale };\nexport const defaultOnLoad =\n  (columns, getRegistry) =>\n      ({ INVENTORY_ACTION_TYPES, mergeWithEntities }) =>\n          getRegistry().register({\n              ...mergeWithEntities(entitiesReducer(INVENTORY_ACTION_TYPES, columns),\n                  {\n                      page: 1,\n                      perPage: 10,\n                      sortBy: {\n                          key: 'totalMatches',\n                          direction: 'desc'\n                      }\n                  })\n          });\n\nexport const columns = [\n    {\n        title: intl.formatMessage(messages.name),\n        transforms: [cellWidth(30)],\n        key: 'displayName',\n        sortBy: ['DISPLAY_NAME'],\n        renderFunc: (displayName, id) => <InsightsLink to={`/systems/${id}`}>{displayName}</InsightsLink>\n    },\n    {\n        title: 'Group',\n        key: 'groups',\n        sortBy: ['GROUP_NAME'],\n        requiresDefault: true,\n        props: { isStatic: false }\n    },\n    {\n        title: 'Tags',\n        key: 'tags',\n        props: { width: 10, isStatic: true }\n    },\n    {\n        title: 'OS',\n        key: 'osVersion',\n        sortBy: ['OS_VERSION'],\n        props: { width: 10 },\n        renderFunc: (osVersion) => osVersion ? `RHEL ${osVersion}` : intl.formatMessage(messages.dataNotAvailable)\n    },\n    {\n        title: intl.formatMessage(messages.lastStatus),\n        transforms: [cellWidth(10)],\n        key: 'hasMatch',\n        sortBy: ['HAS_MATCH'],\n        renderFunc: (hasMatch, _, { isDisabled }) => <StatusLabel isDisabled={isDisabled} hasMatch={hasMatch} displayMatch />\n    },\n    {\n        title: intl.formatMessage(messages.lastMatched),\n        transforms: [cellWidth(10)],\n        key: 'lastMatchDate',\n        sortBy: ['LAST_MATCH_DATE'],\n        renderFunc: (lastMatchDate) =>\n            lastMatchDate ?\n                <Tooltip content={<DateFormat date={new Date(lastMatchDate)} type='exact' />}>\n                    <span><DateFormat date={new Date(lastMatchDate)} /></span>\n                </Tooltip>\n                : <Tooltip content={intl.formatMessage(messages.noHostHas)}>\n                    <span>{intl.formatMessage(messages.never)}</span>\n                </Tooltip>\n    },\n    {\n        title: intl.formatMessage(messages.totalMatches),\n        transforms: [\n            cellWidth(10),\n            info({\n                tooltip: intl.formatMessage(messages.totalMatchesNote)\n            })\n        ],\n        key: 'totalMatches',\n        sortBy: ['TOTAL_MATCHES'],\n        renderFunc: (totalMatches, _, { id }) => <InsightsLink to={`/systems/${id}`}>{totalMatches?.toLocaleString()}</InsightsLink>\n    },\n    {\n        title: intl.formatMessage(messages.lastScan),\n        key: 'lastScanDate',\n        sortBy: ['LAST_SCAN_DATE'],\n        renderFunc: (lastScanDate) =>\n            <Tooltip content={<DateFormat date={new Date(lastScanDate)} type='exact' />}>\n                <span><DateFormat date={new Date(lastScanDate)} /></span>\n            </Tooltip>\n\n    }\n];\n\nexport const mergedColumns = (defaultColumns) => {\n    return columns.map((column) => {\n        const isStringCol = typeof column === 'string';\n\n        const defaultColumn = defaultColumns.find(\n            (defaultCol) => defaultCol.key === column.key\n        );\n        //this step is necessary so we could compare the default columns from column object at the top of the file\n        //with the columns that come from the inventory, so if inventory hide a column behind feature flag\n        //it will not appear when the flag is turned off\n        return column.requiresDefault && defaultColumn === undefined ?\n            undefined : {\n                ...(isStringCol ? { key: column } : column),\n                ...defaultColumn,\n                props: {\n                    ...defaultColumn?.props,\n                    ...column?.props\n                }\n            };\n    }).filter(Boolean);\n};\n\nexport const appendDirection = (attributes, direction) =>\n    attributes?.map((attribute) => `${attribute}_${direction}`);\n\nexport const findColumnByKey = (key) =>\n    (columns || []).find((column) => column.key === key);\n\nexport const matchOptions = [\n    { label: 'All', value: 'All' },\n    { label: 'Matched', value: true },\n    { label: 'Not Matched', value: false }\n];\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect } from 'react';\nvar InventoryLoadError = function (_a) {\n    var component = _a.component, props = __rest(_a, [\"component\"]);\n    useEffect(function () {\n        console.error(\"Unable to load inventory component. Failed to load \".concat(component, \".\"), props);\n    }, []);\n    return (_jsxs(\"div\", { children: [_jsx(\"h1\", { children: \"Unable to load inventory component\" }), _jsxs(\"h2\", { children: [\"Failed to load \", component] }), _jsx(\"code\", { children: \"More info can be found in browser console output.\" })] }));\n};\nexport default InventoryLoadError;\n//# sourceMappingURL=InventoryLoadError.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useMemo } from 'react';\nimport * as reactRouter from 'react-router-dom';\nimport useChrome from '../useChrome';\nvar WithReactRouterHistory = function (_a) {\n    var Component = _a.Component, props = __rest(_a, [\"Component\"]);\n    var history = reactRouter.useHistory();\n    return _jsx(Component, __assign({ history: history }, props));\n};\nvar WithChromeHistory = function (_a) {\n    var Component = _a.Component, props = __rest(_a, [\"Component\"]);\n    var chromeHistory = useChrome().chromeHistory;\n    return _jsx(Component, __assign({ history: chromeHistory }, props));\n};\nvar WithHistory = function (_a, ref) {\n    var Component = _a.Component, props = __rest(_a, [\"Component\"]);\n    var HistoryComponent = useMemo(function () { return (typeof reactRouter.useHistory === 'function' ? WithReactRouterHistory : WithChromeHistory); }, [Component, props]);\n    return _jsx(HistoryComponent, __assign({ innerRef: ref, Component: Component }, props));\n};\nexport default React.forwardRef(WithHistory);\n//# sourceMappingURL=WithHistory.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScalprumComponent } from '@scalprum/react-core';\nimport { useStore } from 'react-redux';\nimport { Bullseye } from \"@patternfly/react-core/dist/dynamic/layouts/Bullseye\";\nimport { Spinner } from \"@patternfly/react-core/dist/dynamic/components/Spinner\";\nimport InventoryLoadError from './InventoryLoadError';\nimport classNames from 'classnames';\nimport WithHistory from './WithHistory';\nvar BaseInvTable = function (props) {\n    var store = useStore();\n    var Cmp = props.component;\n    return (_jsx(Cmp, { className: classNames(props.className, 'inventory'), children: _jsx(Suspense, { fallback: props.fallback, children: _jsx(ScalprumComponent, __assign({ history: props.history, store: store, appName: \"inventory\", module: \"./InventoryTable\", scope: \"inventory\", ErrorComponent: _jsx(InventoryLoadError, __assign({ component: \"InventoryDetailHead\" }, props)), ref: props.innerRef }, props)) }) }));\n};\nBaseInvTable.propTypes = {\n    fallback: PropTypes.node,\n    innerRef: PropTypes.object,\n    component: PropTypes.string,\n    className: PropTypes.string,\n    history: PropTypes.object,\n};\nvar InvTable = React.forwardRef(function (props, ref) { return _jsx(BaseInvTable, __assign({ innerRef: ref }, props)); });\nInvTable.propTypes = {\n    fallback: PropTypes.node,\n    component: PropTypes.string,\n    className: PropTypes.string,\n};\nInvTable.defaultProps = {\n    fallback: (_jsx(Bullseye, { className: \"pf-v5-u-p-lg\", children: _jsx(Spinner, { size: \"xl\" }) })),\n    component: 'section',\n};\nvar CompatiblityWrapper = function (props, ref) { return _jsx(WithHistory, __assign({ innerRef: ref, Component: InvTable }, props)); };\nexport default React.forwardRef(CompatiblityWrapper);\n//# sourceMappingURL=InventoryTable.js.map","import {  matchOptions } from './constants';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst matchFilter = (matchStateValue, setStateValue) => {\n    return {\n        label: 'Status',\n        type: conditionalFilterType.radio,\n        filterValues: {\n            //Inventory table brings a string of the index for the False value of matchOptions\n            onChange: (event, value) => {\n                let index = parseInt(value);\n                setStateValue(value === '2' ? matchOptions[index].value : value);\n            },\n            items: matchOptions,\n            value: matchStateValue,\n            placeholder: 'Filter by status'\n        }\n    };\n\n};\n\nexport default matchFilter;\n","import { matchOptions } from './constants';\n\nexport const buildFilterChips = (filters) => {\n    let filterConfig = [];\n    const buildChips = () => {\n        {\n            const match = matchOptions.find(\n                ({ value }) => value === filters.filterValues.value\n            );\n            const results = match\n                ? [\n                    {\n                        name: match.label,\n                        value: filters.filterValues.value,\n                        id: match.value\n                    }\n                ]\n                : [];\n            return results;\n        }\n    };\n\n    const processFilters = () => {\n        filterConfig = filterConfig.concat([\n            {\n                category: 'Status',\n                id: 'Status',\n                chips: buildChips()\n            }\n        ]);\n    };\n\n    filters && processFilters();\n\n    return filterConfig;\n};\n\nexport const buildActiveFiltersConfig = (filter, setStateValue) => ({\n    filters: buildFilterChips(filter),\n    onDelete: (event, itemsToRemove, isAll) => {\n        if (isAll) {\n            setStateValue(true);\n        } else {\n            itemsToRemove.map((item) => {\n                item.category === 'Status' && setStateValue(item.chips[0].value === 'All' ? true : 'All') ;\n            });\n        }\n    },\n    showDeleteButton: true\n});\n","/* eslint-disable no-unused-vars */\nimport './SysTable.scss';\n\nimport React, { useContext, useEffect, useCallback, useRef, useState } from 'react';\n\nimport {\n    useFetchSystems,\n    buildApiFilters\n} from './hooks';\nimport { defaultOnLoad, columns, mergedColumns, appendDirection, findColumnByKey } from './constants';\n\nimport { InventoryTable } from '@redhat-cloud-services/frontend-components/Inventory';\nimport { GET_SYSTEM_TABLE } from '../../operations/queries';\nimport MessageState from '../MessageState/MessageState';\nimport { SearchIcon } from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport { Alert, Spinner } from '@patternfly/react-core';\nimport { gqlProps } from '../Common';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport { RegistryContext } from '../../store';\nimport { globalFilters } from '../../store/cache';\nimport { useDispatch } from 'react-redux';\nimport  matchFilter  from './matchFilter';\nimport { buildActiveFiltersConfig } from './Helpers';\n\nconst SysTable = () => {\n    const inventory = useRef(null);\n    const intl = useIntl();\n    const { getRegistry } = useContext(RegistryContext);\n    const dispatch = useDispatch();\n    let [matchStateValue, setStateValue] = useState(true);\n    useEffect(() => {\n        dispatch({ type: 'INVENTORY_INIT' });\n        dispatch({ type: 'RESET_PAGE' });\n        inventory?.current?.onRefreshData();\n    }, [dispatch]);\n\n    const fetchSystems = useCallback(useFetchSystems({\n        query: GET_SYSTEM_TABLE\n    }), []);\n\n    const { value } = matchFilter(matchStateValue, setStateValue)?.filterValues;\n    return <React.Fragment>\n        <Alert\n            isInline\n            variant=\"info\"\n            ouiaId=\"SystemsListIsDifferentAlert\"\n            title={intl.formatMessage(messages.systemsListIsDifferent)}\n        />\n        <InventoryTable\n            isFullView\n            autoRefresh\n            initialLoading\n            hideFilters={{ all: true, name: false, tags: false, operatingSystem: false, hostGroupFilter: false }}\n            columns={mergedColumns}\n            hasCheckbox={false}\n            showTags\n            ref={inventory}\n            fallback={<Spinner />}\n            onLoad={defaultOnLoad(columns, getRegistry)}\n            getEntities={async (\n                _ids,\n                { page = 1, per_page: perPage, orderBy, orderDirection, filters }\n            ) => {\n                value === 'All' ? delete filters.hasMatch : (filters = { ...filters,  hasMatch: value  });\n                const sortableColumn = findColumnByKey(orderBy);\n                const sortBy = appendDirection(sortableColumn?.sortBy, orderDirection);\n                const filterForApi = buildApiFilters(filters);\n                const limit = perPage;\n                const offset = page * perPage - perPage;\n\n                const fetchedEntities = await fetchSystems(limit, offset, {\n                    ...filterForApi,\n                    orderBy: sortBy\n                });\n                const {\n                    entities,\n                    meta: { totalCount }\n                } = fetchedEntities || {};\n\n                return {\n                    // we need \"dipslay_name\" in TagModal for title, hence this mapping\n                    results: entities.map(entity => ({ ...entity, display_name: entity.displayName })),\n                    orderBy,\n                    orderDirection,\n                    total: totalCount\n                };\n            }}\n            tableProps={{\n                canSelectAll: false,\n                className: 'sysTable',\n                isStickyHeader: true\n            }}\n            noSystemsTable={<MessageState className='pf-c-card' icon={SearchIcon} variant='large' title={intl.formatMessage(messages.noResults)}\n                text={intl.formatMessage(messages.noResultsMatch)}/>}\n            customFilters={{\n                malwareParams: {\n                    ...globalFilters()\n                },\n                params: matchStateValue\n            }}\n            filterConfig={{\n                items: [matchFilter(matchStateValue, setStateValue)]\n            }}\n            activeFiltersConfig={buildActiveFiltersConfig(matchFilter(matchStateValue, setStateValue), setStateValue)}\n        />\n    </React.Fragment>;\n};\n\nSysTable.propTypes = gqlProps;\n\nexport default SysTable;\n","import { useApolloClient } from '@apollo/client';\nimport { isEmpty, isString } from 'lodash';\n\nexport const buildApiFilters = (filters = {}) => {\n    const { tagFilters, ...otherFilters } = filters;\n    // remove hostGroupFilter/osFilter if they are [], otherwise no results are returned from the API\n    isEmpty(otherFilters.hostGroupFilter) && delete otherFilters.hostGroupFilter;\n    if (isEmpty(otherFilters.osFilter)) {\n        delete otherFilters.osFilter;\n    } else {\n        // Handle osFilter either as a string (the old way) or an object (the newer implementation)\n        otherFilters.osFilter = otherFilters.osFilter.map(os => isString(os) ? os : os.value);\n    }\n\n    const tagsApiFilter = tagFilters\n        ? {\n            tags: tagFilters.flatMap((tagFilter) =>\n                tagFilter.values.map(\n                    (tag) => ({\n                        namespace: tagFilter.key,\n                        key: tag.tagKey,\n                        value: tag.value\n                    })\n                )\n            )\n        }\n        : {};\n\n    return {\n        ...otherFilters,\n        ...tagsApiFilter\n    };\n};\n\nexport const useFetchSystems = ({\n    query,\n    onComplete,\n    onError\n}) => {\n    const client = useApolloClient();\n\n    return (limit, offset, requestVariables = {}) =>\n        client\n        .query({\n            query,\n            fetchResults: true,\n            fetchPolicy: 'no-cache',\n            variables: {\n                limit,\n                offset,\n                ...requestVariables\n            }\n        })\n        .then(({ data }) => {\n            const entities = data?.hostsList || [];\n            const result = {\n                entities,\n                meta: {\n                    ...(requestVariables.tags && { tags: requestVariables.tags }),\n                    totalCount: data?.hosts?.totalCount || 0\n                }\n            };\n\n            onComplete?.(result);\n            return result;\n        })\n        .catch((error) => {\n            if (onError) {\n                onError(error);\n                return { entities: [], meta: { totalCount: 0 } };\n            } else {\n                throw error;\n            }\n        });\n};\n","import { gql } from '@apollo/client';\n\nexport const DISABLE_SIGNATURES = gql`mutation DisableRule ($input: DisableRuleInput = {}) {\n  disableRule(input: $input) {\n    clientMutationId\n  }\n}`;\n\nexport const ENABLE_SIGNATURES = gql`mutation EnableRule ($input: EnableRuleInput = {}) {\n  enableRule(input: $input) {\n    clientMutationId\n  }\n}`;\n\n"],"names":["colorStyles","blue","modifiers","cyan","green","orange","purple","red","gold","grey","Label","_a","children","className","color","variant","isCompact","isEditable","editableProps","textMaxWidth","tooltipPosition","icon","onClose","onClick","onLabelClick","onEditCancel","onEditComplete","closeBtn","closeBtnAriaLabel","closeBtnProps","href","isOverflowLabel","render","props","__rest","isEditableActive","setIsEditableActive","useState","currValue","setCurrValue","editableButtonRef","editableInputRef","document","addEventListener","onDocMouseDown","onKeyDown","removeEventListener","console","warn","event","current","contains","target","value","_b","key","preventDefault","stopImmediatePropagation","focus","el","range","createRange","sel","window","getSelection","selectNodeContents","collapse","removeAllRanges","addRange","LabelComponent","defaultButton","Object","assign","type","button","css","labelActions","textRef","componentRef","isTooltipVisible","setIsTooltipVisible","currTextRef","offsetWidth","scrollWidth","content","labelIcon","ref","labelText","style","LabelComponentChildElement","clickableLabelProps","isButton","labelComponentChildProps","labelContent","tabIndex","e","stopPropagation","labelComponentChild","triggerRef","position","label","outline","overflow","compact","editable","editableActive","undefined","id","onChange","displayName","SignatureDesctiprion","signature","intl","useIntl","isCodeEditorEnabled","Grid","hasGutter","GridItem","span","CodeEditor","code","rawRule","isReadOnly","Text","component","TextVariants","h6","formatMessage","description","metadata","propTypes","initialState","tableVars","limit","offset","orderBy","ruleName","sortBy","index","direction","desc","rows","selectedSigs","sortIndices","orderByVariable","asc","tableReducer","state","action","payload","SigTable","refetchSigPageData","dispatch","hasWritePerms","write","hasAccess","stateSet","useReducer","showTable","setShowTable","data","sigTableData","loading","sigTableLoading","error","sigTableError","client","useQuery","variables","rv","useSyncExternalStore","update","onNextChange","onNext","mutationVars","input","map","sig","onCompleted","resetStore","onError","networkError","errorMsg","response","statusText","bodyText","dismissable","title","addNotification","enableSignature","enableSigLoading","useMutation","E","disableSignature","disableSigLoading","columns","sigName","cellFormatters","transforms","sortable","cellWidth","lastStatus","systems","lastMatched","page","sigTableFiltersInitialState","items","hasMatch","isDisabled","condition","updateSelectedSigs","selectedRows","selected","rowSigIds","row","sigData","filteredSigs","filter","includes","name","toolbarActions","enableSignaturesForAnalysis","length","disableSignaturesFromAnalysis","FILTER_CATEGORIES","sig_match","status","urlParam","values","all","matched","notMatched","sigs_included","signaturesIncludedFilter","enabledSignaturesFilter","disabledSignaturesFilter","filterConfigItems","toLowerCase","filterValues","tableFilters","JSON","parse","placeholder","filterBy","field","onSetPage","onPerPageSelect","perPage","setMatchedFilterChips","chips","matchedMessage","push","category","newValue","newCondition","setIncludedFilterChips","item","includedFilters","val","includedMessage","activeFiltersConfig","deleteTitle","resetFilters","filters","buildFilterChips","showDeleteButton","onDelete","itemsToRemove","isAll","useEffect","selectedSigIds","rulesList","flatMap","rowId","isOpen","cells","InsightsLink","to","disabled","notApplicable","StatusLabel","displayMatch","hostCount","toLocaleString","lastMatchDate","Tooltip","DateFormat","date","Date","noHostHas","never","parent","fullWidth","PrimaryToolbar","pagination","itemCount","rules","totalCount","filterConfig","actionsConfig","actions","dropdownProps","ouiaId","SkeletonTable","column","Table","onCollapse","rowKey","collapseRows","SignatureDescription","onSort","isStickyHeader","canSelectAll","onSelect","updatedSelectedSigs","actionResolver","rowData","rowIndex","newMutationVars","enableSignatureForAnalysis","disableSignatureFromAnalysis","MessageState","SearchIcon","noResults","text","noResultsMatch","TableToolbar","isFooter","Pagination","widgetId","bottom","cache","locale","navigator","language","slice","defaultOnLoad","getRegistry","INVENTORY_ACTION_TYPES","mergeWithEntities","register","renderFunc","requiresDefault","isStatic","width","osVersion","dataNotAvailable","_","totalMatches","info","tooltip","totalMatchesNote","lastScan","lastScanDate","mergedColumns","defaultColumns","isStringCol","defaultColumn","find","defaultCol","Boolean","matchOptions","s","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","concat","__assign","n","arguments","apply","this","WithReactRouterHistory","Component","history","WithChromeHistory","chromeHistory","useChrome","HistoryComponent","useMemo","innerRef","BaseInvTable","store","Cmp","Suspense","fallback","ScalprumComponent","appName","module","scope","ErrorComponent","InvTable","defaultProps","Bullseye","Spinner","size","matchStateValue","setStateValue","radio","parseInt","match","buildChips","buildActiveFiltersConfig","SysTable","inventory","useRef","useContext","onRefreshData","fetchSystems","useCallback","query","onComplete","useApolloClient","requestVariables","fetchResults","fetchPolicy","then","result","entities","hostsList","meta","tags","hosts","catch","useFetchSystems","Alert","isInline","systemsListIsDifferent","InventoryTable","isFullView","autoRefresh","initialLoading","hideFilters","operatingSystem","hostGroupFilter","hasCheckbox","showTags","onLoad","getEntities","async","_ids","per_page","orderDirection","sortableColumn","attributes","attribute","filterForApi","tagFilters","otherFilters","isEmpty","osFilter","os","isString","tagsApiFilter","tagFilter","tag","namespace","tagKey","buildApiFilters","fetchedEntities","results","entity","display_name","total","tableProps","noSystemsTable","customFilters","malwareParams","params","DISABLE_SIGNATURES","ENABLE_SIGNATURES"],"sourceRoot":""}