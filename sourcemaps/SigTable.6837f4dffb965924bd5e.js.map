{"version":3,"sources":["webpack:///./src/Components/SigTable/SigTable.js","webpack:///./src/Components/SigTable/SigTable.scss","webpack:///./src/Components/SigTable/SigTable.scss?b55a"],"names":["initialState","tableVars","limit","offset","orderBy","ruleName","sortBy","index","direction","SortByDirection","rows","sortIndices","1","2","3","4","tableReducer","state","action","type","payload","SigTable","intl","useIntl","useReducer","stateSet","useQuery","GET_SIGNATURE_TABLE","variables","useReactiveVar","sigTableFilters","sigTableData","data","sigTableLoading","loading","sigTableError","error","columns","title","formatMessage","messages","cellFormatters","expandable","transforms","cellWidth","sortable","page","FILTER_CATEGORIES","sig_match","urlParam","values","label","value","filterConfigItems","toLowerCase","filterValues","key","onChange","e","placeholder","field","id","tableFilters","condition","hasMatch","JSON","parse","stringify","items","onSetPage","onPerPageSelect","perPage","useEffect","rulesList","flatMap","sig","rowId","isOpen","cells","Link","to","name","hostCount","lastMatchDate","date","Date","content","parent","sigData","fullWidth","pagination","itemCount","rules","totalCount","isCompact","filterConfig","className","aria-label","onCollapse","rowKey","collapseRows","hasGutter","span","code","rawRule","language","isReadOnly","component","TextVariants","metadata","description","onSort","icon","SearchIcon","variant","text","widgetId","PaginationVariant","propTypes","gqlProps","___CSS_LOADER_EXPORT___","push","module","update","hot","invalidate","oldLocals","accept","a","b","isNamedExport","p","isEqualLocals","dispose"],"mappings":"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","file":"js/SigTable.7871bb1f72fa8df95e6a.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport './SigTable.scss';\n\nimport { Grid, GridItem } from '@patternfly/react-core/dist/esm/layouts/Grid/index';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core/dist/esm/components/Pagination/index';\nimport React, { useEffect, useReducer } from 'react';\nimport {\n    SortByDirection,\n    Table,\n    TableBody,\n    TableHeader,\n    cellWidth,\n    expandable,\n    sortable\n} from '@patternfly/react-table/dist/esm/components/Table/index';\nimport { Text, TextVariants } from '@patternfly/react-core';\n\nimport CodeEditor from '../CodeEditor/CodeEditor';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { GET_SIGNATURE_TABLE } from '../../operations/queries';\nimport { Link } from 'react-router-dom';\nimport Loading from '../../Components/Loading/Loading';\nimport MessageState from '../MessageState/MessageState';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { SearchIcon } from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport StatusLabel from '../StatusLabel/StatusLabel';\nimport { Tooltip } from '@patternfly/react-core/dist/esm/components/Tooltip/Tooltip';\nimport { gqlProps } from '../Common';\nimport messages from '../../Messages';\nimport { sigTableFilters } from '../../store/cache';\nimport { useIntl } from 'react-intl';\nimport { useQuery } from '@apollo/client';\nimport { useReactiveVar } from '@apollo/client';\n\nconst initialState = {\n    tableVars: {\n        limit: 10,\n        offset: 0,\n        orderBy: 'LAST_MATCH_DATE_DESC',\n        ruleName: ''\n    },\n    sortBy: {\n        index: 4,\n        direction: SortByDirection.desc\n    },\n    rows: []\n};\nconst sortIndices = { 1: 'NAME', 2: 'IS_DISABLED', 3: 'HOST_COUNT', 4: 'LAST_MATCH_DATE' };\nconst orderBy = ({ index, direction }) => `${sortIndices[index]}_${direction === SortByDirection.asc ? 'ASC' : 'DESC'}`;\n\nconst tableReducer = (state, action) => {\n    switch (action.type) {\n        case 'setTableVars':\n            return { ...state, tableVars: { ...state.tableVars, ...action.payload } };\n        case 'setSortBy':\n            return { ...state, sortBy: action.payload, tableVars: { ...state.tableVars, ...action.tableVars } };\n        case 'setRows':\n            return { ...state, rows: action.payload };\n    }\n\n    return state;\n};\n\nconst SigTable = () => {\n    const intl = useIntl();\n    const [{ tableVars, sortBy, rows }, stateSet] = useReducer(tableReducer, {\n        ...initialState\n    });\n    const { data: sigTableData, loading: sigTableLoading, error: sigTableError } =\n        useQuery(GET_SIGNATURE_TABLE, { variables: { ...tableVars, ...useReactiveVar(sigTableFilters) } });\n    const columns = [\n        { title: intl.formatMessage(messages.sigName), cellFormatters: [expandable], transforms: [cellWidth(45), sortable] },\n        { title: intl.formatMessage(messages.status), transforms: [sortable] },\n        { title: intl.formatMessage(messages.hosts), transforms: [sortable] },\n        { title: intl.formatMessage(messages.matched), transforms: [sortable] }\n    ];\n\n    const page = tableVars.offset / tableVars.limit + 1;\n\n    const onCollapse = (e, rowKey, isOpen) => {\n        const collapseRows = [...rows];\n        const sig = collapseRows[rowKey + 1].sigData;\n\n        collapseRows[rowKey] = { ...collapseRows[rowKey], isOpen };\n        collapseRows[rowKey + 1].cells = [{\n            title: <Grid hasGutter>\n                <GridItem span={6}>\n                    <CodeEditor code={sig.rawRule} language='objective-c' isReadOnly />\n                </GridItem>\n                <GridItem span={6}> <Text className='ins-l-sigtable--title' component={TextVariants.h6}>\n                    {intl.formatMessage(messages.description)}\n                </Text>{sig.metadata.description}\n                </GridItem>\n            </Grid>\n        }];\n        stateSet({ type: 'setRows', payload: collapseRows });\n    };\n\n    const FILTER_CATEGORIES = {\n        sig_match: {\n            type: 'radio', title: intl.formatMessage(messages.status), urlParam: 'sig_match', values: [\n                { label: intl.formatMessage(messages.all), value: 'all' },\n                { label: intl.formatMessage(messages.matched), value: 'true' },\n                { label: intl.formatMessage(messages.notMatched), value: 'false' }\n            ]\n        }\n    };\n    const filterConfigItems = [{\n        label: intl.formatMessage(messages.signature).toLowerCase(),\n        filterValues: {\n            key: 'text-filter',\n            onChange: (e, value) => stateSet({ type: 'setTableVars', payload: { ruleName: value } }),\n            value: tableVars.ruleName,\n            placeholder: intl.formatMessage(messages.filterBy, { field: intl.formatMessage(messages.signature).toLowerCase() })\n        }\n    }, {\n        label: FILTER_CATEGORIES.sig_match.title,\n        type: FILTER_CATEGORIES.sig_match.type,\n        id: FILTER_CATEGORIES.sig_match.urlParam,\n        value: `radio-${FILTER_CATEGORIES.sig_match.urlParam}`,\n        filterValues: {\n            key: `${FILTER_CATEGORIES.sig_match.urlParam}-filter`,\n            onChange: (e, value) => {\n                const tableFilters = sigTableFilters();\n                value === 'all' && delete tableFilters?.condition;\n                value === 'all' ? sigTableFilters({ ...tableFilters }) :\n                    sigTableFilters({ ...tableFilters, condition: { hasMatch: JSON.parse(value) } });\n            },\n            value: JSON.stringify(sigTableFilters().condition?.hasMatch) || 'all',\n            items: FILTER_CATEGORIES.sig_match.values\n        }\n    }];\n\n    const onSetPage = (e, page) => stateSet({ type: 'setTableVars', payload: { offset: page * tableVars.limit - tableVars.limit } });\n\n    const onPerPageSelect = (e, perPage) => stateSet({ type: 'setTableVars', payload: { limit: perPage, offset: 0 } });\n\n    const onSort = (e, index, direction) =>\n        stateSet({ type: 'setSortBy', payload: { index, direction }, tableVars: { orderBy: orderBy({ index, direction }), offset: 0 } });\n\n    useEffect(() => {\n        const rowBuilder = data => data?.rulesList?.flatMap((data, key) => {\n            const sig = data;\n            return [{\n                rowId: key,\n                isOpen: false,\n                cells: [\n                    { title: <Link to={`/${sig.name}`}>{sig.name}</Link> },\n                    { title: <span><StatusLabel {...sig} /></span> },\n                    { title: <Link to={`/${sig.name}`}>{sig.hostCount}</Link> },\n                    {\n                        title: sig.lastMatchDate ?\n                            <DateFormat date={new Date(sig.lastMatchDate)} type=\"onlyDate\" />\n                            : <Tooltip content={intl.formatMessage(messages.noHostHas)}>\n                                <span>{intl.formatMessage(messages.never)}</span>\n                            </Tooltip>\n                    }]\n            }, {\n                parent: key * 2,\n                sigData: sig,\n                fullWidth: true,\n                cells: []\n            }];\n        });\n\n        stateSet({ type: 'setRows', payload: rowBuilder(sigTableData) });\n    }, [intl, sigTableData]);\n\n    return <React.Fragment>\n        <PrimaryToolbar\n            pagination={{\n                itemCount: sigTableData?.rules?.totalCount || 0,\n                page,\n                perPage: tableVars.limit,\n                onSetPage(e, page) { onSetPage(e, page); },\n                onPerPageSelect(e, perPage) { onPerPageSelect(e, perPage); },\n                isCompact: true\n            }}\n            filterConfig={{ items: filterConfigItems }}\n        />\n        <Table className='sigTable' aria-label=\"Signature table\"\n            onCollapse={onCollapse}\n            rows={rows} cells={columns}\n            onSort={onSort} sortBy={sortBy}>\n            <TableHeader />\n            <TableBody />\n        </Table>\n        {sigTableLoading && <Loading type='table' />}\n        {!sigTableLoading && !sigTableError && sigTableData?.rules?.totalCount === 0 &&\n            <MessageState className='pf-c-card' icon={SearchIcon} variant='large' title={intl.formatMessage(messages.noResults)}\n                text={intl.formatMessage(messages.noResultsMatch)} />}\n        {sigTableError && <MessageState className='pf-c-card' variant='large' title='Error' text='error' />}\n        <Pagination\n            itemCount={sigTableData?.rules?.totalCount || 0}\n            widgetId=\"pagination-options-menu-bottom\"\n            perPage={tableVars.limit}\n            page={page}\n            variant={PaginationVariant.bottom}\n            onSetPage={onSetPage}\n            onPerPageSelect={onPerPageSelect}\n        />\n    </React.Fragment>;\n};\n\nSigTable.propTypes = gqlProps;\n\nexport default SigTable;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".malware .ins-l-sigtable--title{font-weight:var(--pf-global--FontWeight--semi-bold)}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/Components/SigTable/SigTable.scss\"],\"names\":[],\"mappings\":\"AAAA,gCACuB,mDAAmD\",\"sourcesContent\":[\".malware{\\n.ins-l-sigtable--title{font-weight:var(--pf-global--FontWeight--semi-bold)}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./SigTable.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./SigTable.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}