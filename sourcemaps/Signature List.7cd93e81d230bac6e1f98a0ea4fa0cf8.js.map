{"version":3,"file":"js/Signature List.1688726324068.751647971a32a7bb538f.js","mappings":"wZAgBMA,GAAWC,EAAAA,EAAAA,OAAK,kBAAM,4FACtBC,GAAaD,EAAAA,EAAAA,OAAK,kBAAM,kCACxBE,GAAYF,EAAAA,EAAAA,OAAK,kBAAM,kEAmE7B,SAAeG,EAAAA,EAAAA,aAjEI,WACf,IAAMC,GAAOC,EAAAA,EAAAA,KACPC,GAAcC,EAAAA,EAAAA,GAASC,EAAAA,IACvBC,GAAeF,EAAAA,EAAAA,GAASG,EAAAA,IACxBC,GAASC,EAAAA,EAAAA,KAKf,OAJAC,EAAAA,EAAAA,YAAU,WACNF,EAAOG,oBAAP,6CACD,CAACH,IAEG,kBAAC,aAAD,KACH,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOI,WAAS,EAACC,aAAW,GACxB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAiBC,MAAQ,kBAAC,KAAD,CACrBC,YAAU,EACVC,SAAU,QACVC,cAAehB,EAAKiB,cAAcC,EAAAA,EAAAA,oBAClCC,YAAc,kBAAC,IAAD,CAAMR,WAAS,GACzB,kBAAC,IAAD,KAAWX,EAAKiB,cAAcC,EAAAA,EAAAA,sBAElCE,cAAe,uBACXC,KAAM,kLAGNC,OAAO,UAAUC,IAAI,uBACpBvB,EAAKiB,cAAcC,EAAAA,EAAAA,qBALT,IAKwC,kBAAC,KAAD,QAGvD,kBAAC,IAAD,CAAOM,aAAa,KAAKC,KAAMC,EAAAA,EAAAA,OAAmBC,UAAU,cACvD3B,EAAKiB,cAAcC,EAAAA,EAAAA,kBACpB,kBAAC,KAAD,CACIU,MAAO,yCACPD,UAAU,8CACVE,MAAO,CAAEC,cAAe,eAM3CC,EAAAA,EAAAA,OACD,kBAAC,KAAD,CACIC,UAAQ,EACRC,QAAQ,SACRC,OAAO,oBACPrB,MAAOb,EAAKiB,cAAcC,EAAAA,EAAAA,eAIlC,kBAAC,IAAD,CAAMS,UAAU,cACZ,kBAAC,IAAD,CAAMhB,WAAS,GACX,kBAAC,IAAD,CAAUwB,GAAI,EAAGC,GAAI,IACjB,kBAAC,EAAAC,SAAD,CAAUC,SAAU,kBAAC,IAAD,OAAa,kBAACzC,EAAeK,KAErD,kBAAC,IAAD,CAAUiC,GAAI,EAAGC,GAAI,IACjB,kBAAC,EAAAC,SAAD,CAAUC,SAAU,kBAAC,IAAD,OAAa,kBAACxC,EAAD,CAAWyC,SAAUrC,EAAcsC,WAAYnC,MAEpF,kBAAC,IAAD,CAAUoC,KAAM,IACZ,kBAAC,EAAAJ,SAAD,CAAUC,SAAU,kBAAC,IAAD,OAChB,kBAAC3C,EAAD,e","sources":["webpack:///./src/Routes/Signatures/Signatures.js"],"sourcesContent":["import { GET_SIGNATURE_PAGE, GET_TIME_SERIES_STATS } from '../../operations/queries';\nimport { Alert, Grid, GridItem, Split, SplitItem } from '@patternfly/react-core';\nimport React, { Suspense, lazy, useEffect } from 'react';\nimport { Title, TitleSizes } from '@patternfly/react-core/dist/esm/components/Title';\nimport { OutlinedQuestionCircleIcon, ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { Popover } from '@patternfly/react-core';\nimport Loading from '../../Components/Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport { useQuery } from '@apollo/client';\nimport { withRouter } from 'react-router-dom';\nimport { hasMalware } from '../../store/cache';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst SigTable = lazy(() => import(/* webpackChunkName: 'SigTable' */ '../../Components/SigTable/SigTable'));\nconst StatusCard = lazy(() => import(/* webpackChunkName: 'StatusCard' */ '../../Components/StatusCard/StatusCard'));\nconst ChartCard = lazy(() => import(/* webpackChunkName: 'ChartCard' */ '../../Components/ChartCard/ChartCard'));\n\nconst Signatures = () => {\n    const intl = useIntl();\n    const sigPageData = useQuery(GET_SIGNATURE_PAGE);\n    const chartCmpData = useQuery(GET_TIME_SERIES_STATS);\n    const chrome = useChrome();\n    useEffect(() =>{\n        chrome.updateDocumentTitle(`Signatures - Malware | Red Hat Insights`);\n    }, [chrome]);\n\n    return <React.Fragment>\n        <PageHeader>\n            <Split hasGutter isWrappable>\n                <SplitItem>\n                    <PageHeaderTitle title={(<Popover\n                        enableFlip\n                        position={'right'}\n                        headerContent={intl.formatMessage(messages.headerPopoverTitle)}\n                        bodyContent={(<Grid hasGutter>\n                            <GridItem>{intl.formatMessage(messages.headerPopoverBody1)}</GridItem>\n                        </Grid>)}\n                        footerContent={<a\n                            href={'https://access.redhat.com/documentation/en-us/red_hat_insights/2023/html/' +\n                            'assessing_and_reporting_malware_signatures_on_rhel_systems_with_the_insights_for' +\n                            '_rhel_malware_service/'}\n                            target=\"__blank\" rel=\"noopener noreferrer\">\n                            {intl.formatMessage(messages.headerPopoverFooter)} <ExternalLinkAltIcon />\n                        </a>}\n                    >\n                        <Title headingLevel='h1' size={TitleSizes['3xl']} className='pf-u-pb-lg'>\n                            {intl.formatMessage(messages.malwareDetection)}\n                            <OutlinedQuestionCircleIcon\n                                color={'var(--pf-global--secondary-color--100)'}\n                                className=\"pf-u-ml-sm pointer cves-header-questionmark\"\n                                style={{ verticalAlign: '-2' }}\n                            />\n                        </Title>\n                    </Popover>)} />\n                </SplitItem>\n            </Split>\n            {hasMalware() &&\n            <Alert\n                isInline\n                variant=\"danger\"\n                ouiaId=\"WeDetectedMalware\"\n                title={intl.formatMessage(messages.weDetected)}\n            />\n            }\n        </PageHeader>\n        <Main className='pf-u-pt-sm'>\n            <Grid hasGutter>\n                <GridItem lg={6} md={12}>\n                    <Suspense fallback={<Loading />}><StatusCard {...sigPageData} /></Suspense>\n                </GridItem>\n                <GridItem lg={6} md={12}>\n                    <Suspense fallback={<Loading />}><ChartCard sysStats={sigPageData}  chartStats={chartCmpData}/></Suspense>\n                </GridItem>\n                <GridItem span={12}>\n                    <Suspense fallback={<Loading />}>\n                        <SigTable /></Suspense>\n                </GridItem>\n            </Grid>\n        </Main>\n    </React.Fragment>;\n};\n\nexport default withRouter(Signatures);\n"],"names":["SigTable","lazy","StatusCard","ChartCard","withRouter","intl","useIntl","sigPageData","useQuery","GET_SIGNATURE_PAGE","chartCmpData","GET_TIME_SERIES_STATS","chrome","useChrome","useEffect","updateDocumentTitle","hasGutter","isWrappable","title","enableFlip","position","headerContent","formatMessage","messages","bodyContent","footerContent","href","target","rel","headingLevel","size","TitleSizes","className","color","style","verticalAlign","hasMalware","isInline","variant","ouiaId","lg","md","Suspense","fallback","sysStats","chartStats","span"],"sourceRoot":""}