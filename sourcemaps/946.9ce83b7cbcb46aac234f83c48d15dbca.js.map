{"version":3,"file":"js/946.f0c820f1aee10170e4e9.js","mappings":"yRAaMA,EAAe,SAAC,GAA2B,IAAzBC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UACvBC,GAAOC,EAAAA,EAAAA,KACb,OACI,kBAAC,KAAD,CAAYF,UAAWA,EAAWG,QAAQ,SACtC,kBAAC,IAAD,CAAgBC,KAAMC,EAAAA,KACtB,kBAAC,EAAAC,MAAD,CAAOC,aAAa,KAAKC,KAAK,MACzBP,EAAKQ,cAAcC,EAAAA,EAAAA,oBAExB,kBAAC,IAAD,KACKX,GAEL,kBAAC,EAAAY,OAAD,CACIR,QAAQ,UACRS,UAAU,IACVC,KAAI,wMAEJC,OAAO,UACNb,EAAKQ,cAAcC,EAAAA,EAAAA,uBAMpCZ,EAAaiB,UAAY,CACrBhB,QAASgB,IAAAA,OACTf,UAAWe,IAAAA,QAGf","sources":["webpack:///./src/Components/SharedComponents/EmptyAccount.js"],"sourcesContent":["import React from 'react';\nimport {\n    Title,\n    Button,\n    EmptyState,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport WrenchIcon from '@patternfly/react-icons/dist/esm/icons/wrench-icon';\nimport { useIntl } from 'react-intl';\nimport messages from '../../Messages';\nimport propTypes from 'prop-types';\n\nconst EmptyAccount = ({ message, className }) => {\n    const intl = useIntl();\n    return (\n        <EmptyState className={className} variant='large'>\n            <EmptyStateIcon icon={WrenchIcon} />\n            <Title headingLevel=\"h4\" size=\"lg\">\n                {intl.formatMessage(messages.emptyAccountTitle)}\n            </Title>\n            <EmptyStateBody>\n                {message}\n            </EmptyStateBody>\n            <Button\n                variant=\"primary\"\n                component=\"a\"\n                href={`https://access.redhat.com/documentation/en-us/red_hat_insights/2021/html/\n                    assessing_and_reporting_malware_signatures_on_rhel_systems_with_the_insights_for_rhel_malware_service/`}\n                target=\"_blank\" >\n                {intl.formatMessage(messages.emptyAccountButton)}\n            </Button>\n        </EmptyState>\n    );\n};\n\nEmptyAccount.propTypes = {\n    message: propTypes.string,\n    className: propTypes.string\n};\n\nexport default EmptyAccount;\n"],"names":["EmptyAccount","message","className","intl","useIntl","variant","icon","WrenchIcon","Title","headingLevel","size","formatMessage","messages","Button","component","href","target","propTypes"],"sourceRoot":""}