{"version":3,"file":"js/Signature List.1692741578161.98f98d99d49428d381aa.js","mappings":"kYAcMA,GAAWC,EAAAA,EAAAA,OAAK,kBAAM,+GACtBC,GAAaD,EAAAA,EAAAA,OAAK,kBAAM,kCACxBE,GAAYF,EAAAA,EAAAA,OAAK,kBAAM,oFA0E7B,QAxEmB,WACf,IAAMG,GAAOC,EAAAA,EAAAA,KACPC,GAAcC,EAAAA,EAAAA,GAASC,EAAAA,IACvBC,GAAeF,EAAAA,EAAAA,GAASG,EAAAA,IACxBC,GAASC,EAAAA,EAAAA,KAKf,OAJAC,EAAAA,EAAAA,YAAU,WACNF,EAAOG,oBAAP,6CACD,CAACH,IAEG,kBAAC,aAAD,KACH,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOI,WAAS,EAACC,aAAW,GACxB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAiBC,MAAQ,kBAAC,KAAD,CACrBC,YAAU,EACVC,SAAU,QACVC,cAAehB,EAAKiB,cAAcC,EAAAA,EAAAA,oBAClCC,YAAc,kBAAC,IAAD,CAAMR,WAAS,GACzB,kBAAC,IAAD,KAAWX,EAAKiB,cAAcC,EAAAA,EAAAA,sBAElCE,cACI,uBACIC,KAAM,kLAGNC,OAAO,UAAUC,IAAI,uBACpBvB,EAAKiB,cAAcC,EAAAA,EAAAA,qBALxB,IAKuD,kBAAC,KAAD,QAI3D,kBAAC,IAAD,CACIL,MACI,8BACKb,EAAKiB,cAAcC,EAAAA,EAAAA,kBACpB,kBAAC,KAAD,CACIM,MAAM,yCACNC,UAAU,oDACVC,MAAO,CAAEC,cAAe,gBAQnDC,EAAAA,EAAAA,OACG,kBAAC,KAAD,CACIC,UAAQ,EACRC,QAAQ,SACRC,OAAO,oBACPlB,MAAOb,EAAKiB,cAAcC,EAAAA,EAAAA,YAC1BO,UAAU,gBAItB,kBAAC,KAAD,CAAMA,UAAU,cACZ,kBAAC,IAAD,CAAMd,WAAS,GACX,kBAAC,IAAD,CAAUqB,GAAI,EAAGC,GAAI,IACjB,kBAAC,EAAAC,SAAD,CAAUC,SAAU,kBAAC,IAAD,OAAa,kBAACrC,EAAeI,KAErD,kBAAC,IAAD,CAAU8B,GAAI,EAAGC,GAAI,IACjB,kBAAC,EAAAC,SAAD,CAAUC,SAAU,kBAAC,IAAD,OAAa,kBAACpC,EAAD,CAAWqC,SAAUlC,EAAamC,WAAYhC,MAEnF,kBAAC,IAAD,CAAUiC,KAAM,IACZ,kBAAC,EAAAJ,SAAD,CAAUC,SAAU,kBAAC,IAAD,OAChB,kBAACvC,EAAD,a","sources":["webpack:///./src/Routes/Signatures/Signatures.js"],"sourcesContent":["import { GET_SIGNATURE_PAGE, GET_TIME_SERIES_STATS } from '../../operations/queries';\nimport { Alert, Grid, GridItem, Split, SplitItem } from '@patternfly/react-core';\nimport React, { Suspense, lazy, useEffect } from 'react';\nimport { OutlinedQuestionCircleIcon, ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { Popover } from '@patternfly/react-core';\nimport Loading from '../../Components/Loading/Loading';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport { useQuery } from '@apollo/client';\nimport { hasMalware } from '../../store/cache';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst SigTable = lazy(() => import(/* webpackChunkName: 'SigTable' */ '../../Components/SigTable/SigTable'));\nconst StatusCard = lazy(() => import(/* webpackChunkName: 'StatusCard' */ '../../Components/StatusCard/StatusCard'));\nconst ChartCard = lazy(() => import(/* webpackChunkName: 'ChartCard' */ '../../Components/ChartCard/ChartCard'));\n\nconst Signatures = () => {\n    const intl = useIntl();\n    const sigPageData = useQuery(GET_SIGNATURE_PAGE);\n    const chartCmpData = useQuery(GET_TIME_SERIES_STATS);\n    const chrome = useChrome();\n    useEffect(() => {\n        chrome.updateDocumentTitle(`Signatures - Malware | Red Hat Insights`);\n    }, [chrome]);\n\n    return <React.Fragment>\n        <PageHeader>\n            <Split hasGutter isWrappable>\n                <SplitItem>\n                    <PageHeaderTitle title={(<Popover\n                        enableFlip\n                        position={'right'}\n                        headerContent={intl.formatMessage(messages.headerPopoverTitle)}\n                        bodyContent={(<Grid hasGutter>\n                            <GridItem>{intl.formatMessage(messages.headerPopoverBody1)}</GridItem>\n                        </Grid>)}\n                        footerContent={\n                            <a\n                                href={'https://access.redhat.com/documentation/en-us/red_hat_insights/2023/html/' +\n                                    'assessing_and_reporting_malware_signatures_on_rhel_systems_with_the_insights_for' +\n                                    '_rhel_malware_service/'}\n                                target=\"__blank\" rel=\"noopener noreferrer\">\n                                {intl.formatMessage(messages.headerPopoverFooter)} <ExternalLinkAltIcon />\n                            </a>\n                        }\n                    >\n                        <PageHeaderTitle\n                            title={\n                                <span>\n                                    {intl.formatMessage(messages.malwareDetection)}\n                                    <OutlinedQuestionCircleIcon\n                                        color=\"var(--pf-global--secondary-color--100)\"\n                                        className=\"pf-u-ml-sm pointer signatures-header-questionmark\"\n                                        style={{ verticalAlign: '0' }}\n                                    />\n                                </span>\n                            }\n                        />\n                    </Popover>)} />\n                </SplitItem>\n            </Split>\n            {hasMalware() &&\n                <Alert\n                    isInline\n                    variant=\"danger\"\n                    ouiaId=\"WeDetectedMalware\"\n                    title={intl.formatMessage(messages.weDetected)}\n                    className=\"pf-u-mt-md\"\n                />\n            }\n        </PageHeader>\n        <Main className='pf-u-pt-sm'>\n            <Grid hasGutter>\n                <GridItem lg={6} md={12}>\n                    <Suspense fallback={<Loading />}><StatusCard {...sigPageData} /></Suspense>\n                </GridItem>\n                <GridItem lg={6} md={12}>\n                    <Suspense fallback={<Loading />}><ChartCard sysStats={sigPageData} chartStats={chartCmpData} /></Suspense>\n                </GridItem>\n                <GridItem span={12}>\n                    <Suspense fallback={<Loading />}>\n                        <SigTable /></Suspense>\n                </GridItem>\n            </Grid>\n        </Main>\n    </React.Fragment>;\n};\n\nexport default Signatures;\n"],"names":["SigTable","lazy","StatusCard","ChartCard","intl","useIntl","sigPageData","useQuery","GET_SIGNATURE_PAGE","chartCmpData","GET_TIME_SERIES_STATS","chrome","useChrome","useEffect","updateDocumentTitle","hasGutter","isWrappable","title","enableFlip","position","headerContent","formatMessage","messages","bodyContent","footerContent","href","target","rel","color","className","style","verticalAlign","hasMalware","isInline","variant","ouiaId","lg","md","Suspense","fallback","sysStats","chartStats","span"],"sourceRoot":""}