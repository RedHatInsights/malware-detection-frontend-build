{"version":3,"file":"js/SigTable.1647594624657.058af56fb2b150e80ccf.js","mappings":"0OAOO,MAAMA,EAAQC,IACjB,IAAI,SAAEC,EAAW,KAAI,UAAEC,EAAY,GAAE,UAAEC,EAAS,KAAEC,EAAO,KAAI,MAAEC,EAAK,MAAEC,GAAUN,EAAIO,GAAQ,IAAAC,QAAOR,EAAI,CAAC,WAAY,YAAa,YAAa,OAAQ,QAAS,UAC/J,MAAMS,EAAU,CAAC,eAAaL,GAAQ,oBAAiB,OAAOA,SAS9D,OARAM,OAAOC,QAAQ,KAAaC,SAAQ,EAAEC,EAASC,MAC3C,MAAMC,EAAMF,EACNG,EAAYT,EAAMQ,GACpBC,GACAP,EAAQQ,KAAK,oBAAiB,OAAOD,SAAiBF,aAEnDP,EAAMQ,MAET,gBAAoB,MAAOL,OAAOQ,OAAO,CAAEhB,WAAW,IAAAiB,QAAOV,EAASN,GAAa,2BAAyBD,GAAYI,MAAOA,GAASD,EAAQK,OAAOQ,OAAOR,OAAOQ,OAAO,GAAIZ,IAAQ,QAAqBD,EAAO,gBAAqCe,GAAab,GAAQN,IAE1RF,EAAKsB,YAAc,Q,+HCbZ,MAAMC,EAAYtB,IACrB,IAAI,SAAEC,EAAW,KAAI,UAAEC,EAAY,GAAE,KAAEE,EAAO,KAAI,QAAEmB,EAAU,KAAI,OAAEC,EAAS,KAAI,MAAEnB,EAAK,MAAEC,GAAUN,EAAIO,GAAQ,IAAAC,QAAOR,EAAI,CAAC,WAAY,YAAa,OAAQ,UAAW,SAAU,QAAS,UAC3L,MAAMS,EAAU,CACZ,mBACAL,GAAQ,oBAAiB,GAAGA,QAC5BmB,GAAW,oBAAiB,GAAGA,QAC/BC,GAAU,oBAAiB,UAAUA,SAsBzC,OApBAd,OAAOC,QAAQ,KAAaC,SAAQ,EAAEC,EAASY,MAC3C,MAAMV,EAAMF,EACNa,EAAa,GAAGX,WAChBY,EAAY,GAAGZ,UACfa,EAAYrB,EAAMQ,GAClBc,EAAetB,EAAMmB,GACrBI,EAAcvB,EAAMoB,GACtBC,GACAnB,EAAQQ,KAAK,oBAAiB,GAAGW,SAAiBH,MAElDI,GACApB,EAAQQ,KAAK,oBAAiB,GAAGY,SAAoBJ,MAErDK,GACArB,EAAQQ,KAAK,oBAAiB,UAAUa,SAAmBL,aAExDlB,EAAMQ,UACNR,EAAMmB,UACNnB,EAAMoB,MAET,gBAAoB,MAAOjB,OAAOQ,OAAO,CAAEhB,WAAW,IAAAiB,QAAOV,EAASP,GAAYI,MAAOA,GAASD,EAAQK,OAAOQ,OAAOR,OAAOQ,OAAO,GAAIZ,IAAQ,QAAqBD,EAAO,gBAAqCe,GAAab,GAAQN,IAEpPqB,EAASD,YAAc,Y,6BCrChB,IAAIU,EAWAC,E,yBAVX,SAAWD,GACPA,EAAc,GAAI,KAClBA,EAAc,GAAI,KAClBA,EAAc,GAAI,KAClBA,EAAc,GAAI,KAClBA,EAAc,GAAI,KAClBA,EAAU,OAAS,MACnBA,EAAU,OAAS,MACnBA,EAAU,OAAS,MARvB,CASGA,IAAcA,EAAY,KAE7B,SAAWC,GACPA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAgB,GAAI,KACpBA,EAAiB,IAAI,OALzB,CAMGA,IAAgBA,EAAc,M,6BChBjCC,EAAQ,GAAOA,EAAQ,QAAe,EACtC,MAAMC,EAAU,EAAQ,OAClBC,EAAQD,EAAQE,aAAa,EAAQ,QACrCC,EAAiB,EAAQ,OACzBC,EAAYJ,EAAQK,gBAAgB,EAAQ,QAC5CC,EAAY,EAAQ,OAC1B,IAAIC,GACJ,SAAWA,GACPA,EAAiB,GAAI,KACrBA,EAAiB,GAAI,KACrBA,EAAiB,GAAI,KACrBA,EAAiB,GAAI,KACrBA,EAAiB,GAAI,KACrBA,EAAiB,GAAI,KACrBA,EAAgB,EAAI,IACpBA,EAAgB,EAAI,IACpBA,EAAoB,MAAI,QACxBA,EAAyB,WAAI,aAC7BA,EAAkB,IAAI,MAX1B,CAYGA,EAAeR,EAAQ,KAAiBA,EAAQ,GAAe,KAOlEA,EAAQ,GANMjC,IACV,IAAI,SAAEC,EAAW,KAAI,UAAEC,EAAY,GAAE,UAAEwC,EAAYD,EAAaE,EAAC,cAAEC,GAAgB,EAAK,OAAEC,EAAM,SAAEC,GAAW,GAAS9C,EAAIO,EAAQ2B,EAAQ1B,OAAOR,EAAI,CAAC,WAAY,YAAa,YAAa,gBAAiB,SAAU,aACvN,MAAM+C,EAAYL,EACZM,EAAYR,EAAUS,aAAahB,EAAQ,GAAR,YAA0BY,EAAQC,GAC3E,OAAQX,EAAMe,cAAcH,EAAWrC,OAAOQ,OAAO,GAAI8B,EAAWzC,EAAO,CAAE,mBAAmB,EAAML,UAAWmC,EAAelB,IAAIyB,GAAiBF,IAAcD,EAAaU,GAAKb,EAAUc,QAAQC,UAAUC,QAASpD,KAAeD,IAG7OgC,EAAQ,GAAR,YAA2B,Q,8CC7BpB,MAAMsB,EAAoB,CAC/B,KAAQ,2BACR,MAAS,IACT,IAAO,kC,iJCKHC,EAAa,SAAC,GAAuF,IAArFC,EAAqF,EAArFA,KAAMC,EAA+E,EAA/EA,SAAUC,EAAqE,EAArEA,WAAYC,EAAyD,EAAzDA,kBAAmBC,EAAsC,EAAtCA,cAAsC,IAAvBC,OAAAA,OAAuB,MAAd,QAAc,EACjGC,GAAOC,EAAAA,EAAAA,KAEb,OAAO,kBAAC,IAAD,CACHJ,kBAAmBA,EACnBC,cAAeA,EACfF,WAAYA,EACZM,uBAAwBP,EACxBD,KAAMA,EACNC,SAAUA,EACVQ,WACI,kBAAC,IAAD,CAAchE,UAAU,GAAGiE,KAAMC,EAAAA,GAAUC,QAAQ,QAAQC,MAAOP,EAAKQ,cAAcC,EAAAA,EAAAA,aACjFC,KAAMV,EAAKQ,cAAcC,EAAAA,EAAAA,mBAEjCV,OAAQA,KAIhBN,EAAWkB,UAAY,CACnBjB,KAAMkB,IAAAA,IACNjB,SAAUiB,IAAAA,OACVhB,WAAYgB,IAAAA,KACZd,cAAec,IAAAA,KACff,kBAAmBe,IAAAA,KACnBb,OAAQa,IAAAA,QAGZnB,EAAWoB,aAAe,CAAEC,SAAU,QAEtC,W,gJC9BMC,EAAe,SAAC,GAAD,IAAG5E,EAAH,EAAGA,UAAWD,EAAd,EAAcA,SAAUkE,EAAxB,EAAwBA,KAAMY,EAA9B,EAA8BA,UAAWC,EAAzC,EAAyCA,UAAWP,EAApD,EAAoDA,KAAMH,EAA1D,EAA0DA,MAAOD,EAAjE,EAAiEA,QAAjE,OACjB,kBAAC,IAAD,CAAYnE,UAAWA,EAAWmE,QAASA,GAC7B,SAATF,GAAmB,kBAAC,IAAD,CAAgBjE,UAAW6E,EAAWzE,MAAO0E,EAAWb,KAAMA,IAClF,kBAAC,IAAD,CAAOc,aAAa,KAAKC,KAAK,MACzBZ,GAEL,kBAAC,IAAD,CAAgBhE,MAAO,CAAE6E,aAAc,SAClCV,GAEJxE,IAGT6E,EAAaJ,UAAY,CACrBzE,SAAU0E,IAAAA,IACVR,KAAMQ,IAAAA,IACNI,UAAWJ,IAAAA,IACXK,UAAWL,IAAAA,IACXF,KAAME,IAAAA,IACNL,MAAOK,IAAAA,OACPN,QAASM,IAAAA,IACTzE,UAAWyE,IAAAA,QAGfG,EAAaF,aAAe,CACxBT,KAAMiB,EAAAA,GACNd,MAAO,GACPD,QAASgB,EAAAA,EAAAA,MAGb,W,iaC5BMC,EAAuB,SAAC,GAAkB,IAAhBC,EAAgB,EAAhBA,UACtBxB,GAAOC,EAAAA,EAAAA,KACb,GAA8BwB,EAAAA,EAAAA,WAAS,GAAhCC,GAAP,eACA,OACI,kBAAC1F,EAAA,EAAD,CAAMI,WAAS,GACVsF,GACG,kBAACnE,EAAA,EAAD,CAAUlB,KAAM,GACZ,kBAACoD,EAAA,EAAD,CAAYC,KAAM8B,EAAUG,QAAS/B,YAAU,KAGvD,kBAACrC,EAAA,EAAD,CAAUlB,KAAMqF,EAAuB,EAAK,IAA5C,IAAiD,kBAACE,EAAA,GAAD,CAAMzF,UAAU,wBAAwBwC,UAAWD,EAAAA,GAAAA,IAC/FsB,EAAKQ,cAAcC,EAAAA,EAAAA,cAChBe,EAAUK,SAASC,eAMvCP,EAAqBZ,UAAY,CAC7Ba,UAAWZ,IAAAA,QAEf,U,qkBCGA,IAAMmB,EAAe,CACjBC,UAAW,CACPC,MAAO,GACPxE,OAAQ,EACRyE,QAAS,uBACTC,SAAU,IAEdC,OAAQ,CACJC,MAAO,EACPC,UAAWC,EAAAA,EAAAA,MAEfC,KAAM,IAEJC,EAAc,CAAE,EAAG,OAAQ,EAAG,YAAa,EAAG,aAAc,EAAG,mBAC/DP,EAAU,SAAC,GAAD,IAAGG,EAAH,EAAGA,MAAOC,EAAV,EAAUA,UAAV,gBAA6BG,EAAYJ,GAAzC,YAAmDC,IAAcC,EAAAA,EAAAA,IAAsB,MAAQ,SAEzGG,EAAe,SAACC,EAAOC,GACzB,OAAQA,EAAOC,MACX,IAAK,eACD,cAAYF,GAAZ,IAAmBX,UAAW,EAAF,KAAOW,EAAMX,WAAcY,EAAOE,WAClE,IAAK,YACD,cAAYH,GAAZ,IAAmBP,OAAQQ,EAAOE,QAASd,UAAW,EAAF,KAAOW,EAAMX,WAAcY,EAAOZ,aAC1F,IAAK,UACD,cAAYW,GAAZ,IAAmBH,KAAMI,EAAOE,UAGxC,OAAOH,GAGLI,EAAW,WAAM,YC5DQC,EACvBC,EACAC,ED+H2B,IACrBC,EACAC,EAtEJpD,GAAOC,EAAAA,EAAAA,KACb,GAAgDoD,EAAAA,EAAAA,YAAWX,EAAD,KACnDX,IADP,sBAASC,EAAT,EAASA,UAAWI,EAApB,EAAoBA,OAAQI,EAA5B,EAA4BA,KAAQc,EAApC,KAGA,GACIC,EAAAA,EAAAA,GAASC,EAAAA,GAAqB,CAAEC,UAAW,EAAF,KAAOzB,IClEzBgB,EDkEsDU,EAAAA,GCjE7ET,EAAQD,IACRE,GAAW,IAAAzB,UAASwB,GAAO,IAC/B,IAAAU,YAAU,WACN,IAAIC,EAAoBZ,IACxB,GAAIC,IAAUW,EAIV,OAAOZ,EAAGa,aAAaX,GAHvBA,EAASU,KAKd,CAACX,IACGA,MDqDOa,EAAd,EAAQC,KAA6BC,EAArC,EAA4BC,QAAiCC,EAA7D,EAAsDC,MAEhDC,EAAU,CACZ,CAAE7D,MAAOP,EAAKQ,cAAcC,EAAAA,EAAAA,SAAmB4D,eAAgB,CAACC,EAAAA,IAAaC,WAAY,EAACC,EAAAA,EAAAA,GAAU,IAAKC,EAAAA,IACzG,CAAElE,MAAOP,EAAKQ,cAAcC,EAAAA,EAAAA,YAAsB8D,WAAY,EAACC,EAAAA,EAAAA,GAAU,IAAKC,EAAAA,IAC9E,CAAElE,MAAOP,EAAKQ,cAAcC,EAAAA,EAAAA,SAAmB8D,WAAY,EAACC,EAAAA,EAAAA,GAAU,IAAKC,EAAAA,IAC3E,CAAElE,MAAOP,EAAKQ,cAAcC,EAAAA,EAAAA,aAAuB8D,WAAY,EAACC,EAAAA,EAAAA,GAAU,IAAKC,EAAAA,KAG7EC,EAAO1C,EAAUvE,OAASuE,EAAUC,MAAQ,EAa5C0C,GAAoB,CACtBC,UAAW,CACP/B,KAAM,QAAStC,MAAOP,EAAKQ,cAAcC,EAAAA,EAAAA,QAAkBoE,SAAU,YAAaC,OAAQ,CACtF,CAAEC,MAAO/E,EAAKQ,cAAcC,EAAAA,EAAAA,KAAewC,MAAO,OAClD,CAAE8B,MAAO/E,EAAKQ,cAAcC,EAAAA,EAAAA,SAAmBwC,MAAO,QACtD,CAAE8B,MAAO/E,EAAKQ,cAAcC,EAAAA,EAAAA,YAAsBwC,MAAO,YAI/D+B,GAAoB,CAAC,CACvBD,MAAO/E,EAAKQ,cAAcC,EAAAA,EAAAA,WAAoBwE,cAC9CC,aAAc,CACVlI,IAAK,cACLmI,SAAU,SAACC,EAAGnC,GAAJ,OAAcK,EAAS,CAAET,KAAM,eAAgBC,QAAS,CAAEX,SAAUc,EAAOxF,OAAQ,MAC7FwF,MAAOjB,EAAUG,SACjBkD,YAAarF,EAAKQ,cAAcC,EAAAA,EAAAA,SAAmB,CAAE6E,MAAOtF,EAAKQ,cAAcC,EAAAA,EAAAA,WAAoBwE,kBAExG,CACCF,MAAOJ,GAAkBC,UAAUrE,MAAM0E,cACzCpC,KAAM8B,GAAkBC,UAAU/B,KAClC0C,GAAIZ,GAAkBC,UAAUC,SAChC5B,MAAO,SAAF,OAAW0B,GAAkBC,UAAUC,UAC5CK,aAAc,CACVlI,IAAK,GAAF,OAAK2H,GAAkBC,UAAUC,SAAjC,WACHM,SAAU,SAACC,EAAGnC,GACV,IAAMuC,GAAe9B,EAAAA,EAAAA,MACX,QAAVT,IAA0BuC,MAAAA,UAAAA,EAAcC,WAC9B,QAAVxC,GAAkBS,EAAAA,EAAAA,IAAgB,EAAD,GAAM8B,KACnC9B,EAAAA,EAAAA,IAAgB,EAAD,KAAM8B,GAAN,IAAoBC,UAAW,CAAErC,SAAUsC,KAAKC,MAAM1C,QAE7EA,MAAOyC,KAAKE,UAAL,WAAelC,EAAAA,EAAAA,MAAkB+B,iBAAjC,aAAe,EAA6BrC,WAAa,MAChEyC,MAAOlB,GAAkBC,UAAUE,UAIrCgB,GAAY,SAACV,EAAGV,GAAJ,OAAapB,EAAS,CAAET,KAAM,eAAgBC,QAAS,CAAErF,OAAQiH,EAAO1C,EAAUC,MAAQD,EAAUC,UAEhH8D,GAAkB,SAACX,EAAGY,GAAJ,OAAgB1C,EAAS,CAAET,KAAM,eAAgBC,QAAS,CAAEb,MAAO+D,EAASvI,OAAQ,MAgBtGwI,GAAsB,CACxBC,YAAalG,EAAKQ,cAAcC,EAAAA,EAAAA,cAChC0F,SAZMhD,EAAQ,GACRC,OAAqD/F,KAA1C,WAAAqG,EAAAA,EAAAA,MAAkB+B,iBAAlB,eAA6BrC,YAA2B,WAAAM,EAAAA,EAAAA,MAAkB+B,iBAAlB,SAA6BrC,SAClGpD,EAAKQ,cAAcC,EAAAA,EAAAA,SAAoBT,EAAKQ,cAAcC,EAAAA,EAAAA,cAC9DuB,MAAAA,OAAA,EAAAA,EAAWG,WACXgB,EAAMjG,KAAK,CAAEkJ,SAAUpG,EAAKQ,cAAcC,EAAAA,EAAAA,WAAqBwC,MAAO,OAClEE,MAAO,CAAC,CAAEkD,KAAMrE,MAAAA,OAAF,EAAEA,EAAWG,SAAUc,MAAOjB,MAAAA,OAAF,EAAEA,EAAWG,aAC3DiB,GAAYD,EAAMjG,KAAK,CAAEkJ,SAAUpG,EAAKQ,cAAcC,EAAAA,EAAAA,QAAkBwC,MAAO,UAAWE,MAAO,CAAC,CAAEkD,KAAMjD,EAAUH,MAAOG,MACpHD,GAMPmD,SAAU,SAACC,EAAOC,EAAeC,GACzBA,IACA/C,EAAAA,EAAAA,IAAgB,IAChBJ,EAAS,CAAET,KAAM,eAAgBC,QAAS,CAAEX,SAAU,OAEtDqE,EAAcE,KAAI,SAACC,GACA,SAAfA,EAAK1D,OAAoBK,EAAS,CAAET,KAAM,eAAgBC,QAAS,CAAEX,SAAU,MAChE,YAAfwE,EAAK1D,QAAuBS,EAAAA,EAAAA,IAAgB,SAqC5D,OA/BAC,EAAAA,EAAAA,YAAU,WACN,IAAmBI,EAAI,EA2BvBT,EAAS,CAAET,KAAM,UAAWC,SA3BTiB,EA2B6BD,EA3BrBC,MAAAA,GAAJ,UAAIA,EAAM6C,iBAAV,aAAI,EAAiBC,SAAQ,SAAC9C,EAAM/G,GAAQ,MACzD8J,EAAM/C,EACZ,MAAO,CAAC,CACJgD,MAAO/J,EACPgK,QAAQ,EACRC,MAAO,CACH,CAAE1G,MAAO,kBAAC,EAAA2G,KAAD,CAAMC,GAAE,sBAAiBL,EAAIT,OAASS,EAAIT,OACnD,CAAE9F,MAAO,kBAAC6G,EAAA,EAAD,CAAaC,WAAYP,EAAIO,WAAYjE,SAAU0D,EAAI1D,SAAUkE,cAAY,KACtF,CAAE/G,MAAO,kBAAC,EAAA2G,KAAD,CAAMC,GAAE,sBAAiBL,EAAIT,OAA7B,UAAsCS,EAAIS,iBAA1C,aAAsC,EAAeC,mBAC9D,CACIjH,MAAOuG,EAAIW,cACP,kBAACC,EAAA,EAAD,CAASC,QAAS,kBAACC,EAAA,EAAD,CAAYC,KAAM,IAAIC,KAAKhB,EAAIW,eAAgB5E,KAAK,WAClE,8BAAM,kBAAC+E,EAAA,EAAD,CAAYC,KAAM,IAAIC,KAAKhB,EAAIW,mBAEvC,kBAACC,EAAA,EAAD,CAASC,QAAS3H,EAAKQ,cAAcC,EAAAA,EAAAA,YACnC,8BAAOT,EAAKQ,cAAcC,EAAAA,EAAAA,YAI3C,CACCsH,OAAc,EAAN/K,EACRgL,QAASlB,EACTmB,WAAW,EACXhB,MAAO,aAKhB,CAACjH,EAAM8D,IAEH,kBAAC,aAAD,KACH,kBAACoE,EAAA,EAAD,CACIC,WAAY,CACRC,WAAWtE,MAAAA,GAAA,UAAAA,EAAcuE,aAAd,eAAqBC,aAAc,EAC9C5D,KAAAA,EACAsB,QAAShE,EAAUC,MACnB6D,UAJQ,SAIEV,EAAGV,GAAQoB,GAAUV,EAAGV,IAClCqB,gBALQ,SAKQX,EAAGY,GAAWD,GAAgBX,EAAGY,IACjDuC,WAAW,GAEfC,aAAc,CAAE3C,MAAOb,IACvBiB,oBAAqBA,KAEzB,kBAACwC,EAAA,EAAD,CAAOtM,UAAU,WAAW,aAAW,kBACnCuM,WA7HW,SAACtD,EAAGuD,EAAQ3B,GAC3B,IAAM4B,GAAe,OAAIpG,GACnBsE,EAAM8B,EAAaD,EAAS,GAAGX,QAErCY,EAAaD,GAAb,OAA4BC,EAAaD,IAAzC,IAAkD3B,OAAAA,IAClD4B,EAAaD,EAAS,GAAG1B,MAAQ,CAAC,CAC9B1G,MAAO,kBAAC,EAAD,CAAsBiB,UAAWsF,MAE5CxD,EAAS,CAAET,KAAM,UAAWC,QAAS8F,KAsHjCpG,KAAMA,EAAMyE,MAAO7C,EACnByE,OA7EO,SAACzD,EAAG/C,EAAOC,GAAX,OACXgB,EAAS,CAAET,KAAM,YAAaC,QAAS,CAAET,MAAAA,EAAOC,UAAAA,GAAaN,UAAW,CAAEE,QAASA,EAAQ,CAAEG,MAAAA,EAAOC,UAAAA,IAAc7E,OAAQ,MA4EtG2E,OAAQA,EAAQ0G,gBAAc,GAC9C,kBAAC,IAAD,MACA,kBAAC,IAAD,OAEH9E,GAAmB,kBAAC+E,EAAA,EAAD,CAASlG,KAAK,WAChCmB,IAAoBE,GAAqD,KAApCJ,MAAAA,GAAA,UAAAA,EAAcuE,aAAd,eAAqBC,aACxD,kBAACvH,EAAA,EAAD,CAAc5E,UAAU,YAAYiE,KAAM4I,EAAAA,GAAY1I,QAAQ,QAAQC,MAAOP,EAAKQ,cAAcC,EAAAA,EAAAA,WAC5FC,KAAMV,EAAKQ,cAAcC,EAAAA,EAAAA,kBAChCyD,GAAiB,kBAACnD,EAAA,EAAD,CAAc5E,UAAU,YAAYmE,QAAQ,QAAQC,MAAM,QAAQG,KAAK,UACzF,kBAACuI,EAAA,EAAD,CACIb,WAAWtE,MAAAA,GAAA,UAAAA,EAAcuE,aAAd,eAAqBC,aAAc,EAC9CY,SAAS,iCACTlD,QAAShE,EAAUC,MACnByC,KAAMA,EACNpE,QAAS6I,EAAAA,EAAAA,OACTrD,UAAWA,GACXC,gBAAiBA,OAK7BhD,EAASpC,UAAYyI,EAAAA,GAErB,W,2HE7NMhC,EAAc,SAAC,GAAmD,IAAjDC,EAAiD,EAAjDA,WAAYjE,EAAqC,EAArCA,SAAqC,IAA3BkE,aAAAA,OAA2B,SAC9DtH,GAAOC,EAAAA,EAAAA,KACb,OAAOqH,EAAe,6BACjBlE,GAAY,kBAAC,IAAD,CAAOiG,MAAM,OAAOrJ,EAAKQ,cAAcC,EAAAA,EAAAA,WAClD2C,GAAY,kBAAC,IAAD,CAAOiG,MAAM,QAAQrJ,EAAKQ,cAAcC,EAAAA,EAAAA,cACjD,6BACJ4G,GAAc,kBAAC,IAAD,KAAQrH,EAAKQ,cAAcC,EAAAA,EAAAA,YACxC4G,GAAc,kBAAC,IAAD,CAAOgC,MAAM,QAAQrJ,EAAKQ,cAAcC,EAAAA,EAAAA,YAIhE2G,EAAYzG,UAAY,CACpB0G,WAAYzG,IAAAA,KACZwC,SAAUxC,IAAAA,KACV0G,aAAc1G,IAAAA,MAElB,W,mvBCpBO,IAAM0I,EAAkB,WAAkB,IAAjBnD,EAAiB,uDAAP,GAC9BoD,EAAgCpD,EAAhCoD,WAAeC,GAAvB,OAAwCrD,EAAxC,GACMsD,EAAgBF,EAChB,CACEG,KAAMH,EAAW1C,SAAQ,SAAC8C,GAAD,OACrBA,EAAU7E,OAAO4B,KACb,SAACkD,GAAD,gBACOC,mBAAmBF,EAAU3M,KADpC,YAC4C6M,mBACpCD,EAAIE,QAFZ,YAGSD,mBAAmBD,EAAI3G,eAI1C,GAEN,cACOuG,GACAC,I,4rBCLX,IAAMM,GAAQC,EAAAA,EAAAA,MACRC,EAASC,UAAUvK,SAASwK,MAAM,EAAG,GAE9BnK,GAAOoK,EAAAA,EAAAA,GAAW,CAC3BH,OAAAA,GACDF,GAIUM,EACX,SAACjG,EAASkG,GAAV,OACI,gBAAGC,EAAH,EAAGA,uBAAwBC,EAA3B,EAA2BA,kBAA3B,OACIF,IAAcG,SAAd,KACOD,GAAkBE,EAAAA,EAAAA,IAAgBH,EAAwBnG,GACzD,CACIM,KAAM,EACNsB,QAAS,GACT5D,OAAQ,CACJpF,IAAK,eACLsF,UAAW,cAKxB8B,EAAU,CACnB,CACI7D,MAAOP,EAAKQ,cAAcC,EAAAA,EAAAA,MAC1B8D,WAAY,EAACC,EAAAA,EAAAA,GAAU,IAAKC,EAAAA,GAC5BzH,IAAK,cACLoF,OAAQ,CAAC,gBACTuI,WAAY,SAACrN,GAAD,OAAiB,kBAAC,EAAA4J,KAAD,CAAMC,GAAE,mBAAc7J,IAAgBA,KAOvE,CACIiD,MAAOP,EAAKQ,cAAcC,EAAAA,EAAAA,YAC1B8D,WAAY,CAACE,EAAAA,GAAUD,EAAAA,EAAAA,GAAU,KACjCxH,IAAK,WACLoF,OAAQ,CAAC,aACTuI,WAAY,SAACvH,EAAUwH,EAAX,OAAgBvD,EAAhB,EAAgBA,WAAhB,OAAiC,kBAACD,EAAA,EAAD,CAAaC,WAAYA,EAAYjE,SAAUA,EAAUkE,cAAY,MAEtH,CACI/G,MAAOP,EAAKQ,cAAcC,EAAAA,EAAAA,aAC1B8D,WAAY,CAACE,EAAAA,GAAUD,EAAAA,EAAAA,GAAU,KACjCxH,IAAK,gBACLoF,OAAQ,CAAC,mBACTuI,WAAY,SAAClD,GAAD,OACRA,EACI,kBAACC,EAAA,EAAD,CAASC,QAAS,kBAACC,EAAA,EAAD,CAAYC,KAAM,IAAIC,KAAKL,GAAgB5E,KAAK,WAC9D,8BAAM,kBAAC+E,EAAA,EAAD,CAAYC,KAAM,IAAIC,KAAKL,OAEnC,kBAACC,EAAA,EAAD,CAASC,QAAS3H,EAAKQ,cAAcC,EAAAA,EAAAA,YACnC,8BAAOT,EAAKQ,cAAcC,EAAAA,EAAAA,WAG1C,CACIF,MAAOP,EAAKQ,cAAcC,EAAAA,EAAAA,cAC1B8D,WAAY,CACRE,EAAAA,GACAD,EAAAA,EAAAA,GAAU,KACVqG,EAAAA,EAAAA,GAAK,CACDC,QAAS9K,EAAKQ,cAAcC,EAAAA,EAAAA,qBAGpCzD,IAAK,eACLoF,OAAQ,CAAC,iBACTuI,WAAY,SAACI,EAAcH,EAAf,OAAoBtN,EAApB,EAAoBA,YAApB,OAAsC,kBAAC,EAAA4J,KAAD,CAAMC,GAAE,mBAAc7J,IAAgByN,MAAAA,OAAtC,EAAsCA,EAAcvD,oBAE1G,CACIjH,MAAOP,EAAKQ,cAAcC,EAAAA,EAAAA,UAC1B8D,WAAY,CAACE,EAAAA,GAAUD,EAAAA,EAAAA,GAAU,KACjCxH,IAAK,eACLoF,OAAQ,CAAC,kBACTuI,WAAY,SAACK,GAAD,OACR,kBAACtD,EAAA,EAAD,CAASC,QAAS,kBAACC,EAAA,EAAD,CAAYC,KAAM,IAAIC,KAAKkD,GAAenI,KAAK,WAC7D,8BAAM,kBAAC+E,EAAA,EAAD,CAAYC,KAAM,IAAIC,KAAKkD,UAMpCC,EAAgB,SAACC,GAAD,OACzB9G,EAAQsC,KAAI,SAACyE,GACT,IAAMC,EAAgC,iBAAXD,EACrBnO,EAAMoO,EAAcD,EAASA,EAAOnO,IACpCqO,EAAgBH,EAAeI,MACjC,SAACC,GAAD,OAAgBA,EAAWvO,MAAQA,KAEvC,gBACOqO,GACCD,EAAc,CAAEpO,IAAKmO,GAAWA,GAFxC,IAGI3O,MAAO,OACA6O,MAAAA,OADF,EACEA,EAAe7O,OACf2O,MAAAA,OAFF,EAEEA,EAAQ3O,aAKdgP,EAAkB,SAACC,EAAYnJ,GAAb,OAC3BmJ,MAAAA,OAD2B,EAC3BA,EAAY/E,KAAI,SAACgF,GAAD,gBAAkBA,EAAlB,YAA+BpJ,OAEtCqJ,EAAkB,SAAC3O,GAAD,OAC1BoH,GAAW,IAAIkH,MAAK,SAACH,GAAD,OAAYA,EAAOnO,MAAQA,M,qDC/FpD,QAZyB,SAAUf,GAC/B,IAAI0C,EAAY1C,EAAG0C,UAAWnC,EAbI,SAAUoP,EAAGxG,GAC/C,IAAIyG,EAAI,GACR,IAAK,IAAIjN,KAAKgN,EAAOjP,OAAOmP,UAAUC,eAAeC,KAAKJ,EAAGhN,IAAMwG,EAAE6G,QAAQrN,GAAK,IAC9EiN,EAAEjN,GAAKgN,EAAEhN,IACb,GAAS,MAALgN,GAAqD,mBAAjCjP,OAAOuP,sBACtB,KAAIC,EAAI,EAAb,IAAgBvN,EAAIjC,OAAOuP,sBAAsBN,GAAIO,EAAIvN,EAAEwN,OAAQD,IAC3D/G,EAAE6G,QAAQrN,EAAEuN,IAAM,GAAKxP,OAAOmP,UAAUO,qBAAqBL,KAAKJ,EAAGhN,EAAEuN,MACvEN,EAAEjN,EAAEuN,IAAMP,EAAEhN,EAAEuN,KAE1B,OAAON,EAI+BpP,CAAOR,EAAI,CAAC,cAIlD,OAHA,IAAA0H,YAAU,WACN2I,QAAQnI,MAAM,sDAAsDoI,OAAO5N,EAAW,KAAMnC,KAC7F,IACK,kBAAoB,MAAO,KAC/B,kBAAoB,KAAM,KAAM,sCAChC,kBAAoB,KAAM,KACtB,kBACAmC,GACJ,kBAAoB,OAAQ,KAAM,uD,wBCtBtC6N,EAAsC,WAStC,OARAA,EAAW7P,OAAOQ,QAAU,SAAS0O,GACjC,IAAK,IAAID,EAAGO,EAAI,EAAGM,EAAIC,UAAUN,OAAQD,EAAIM,EAAGN,IAE5C,IAAK,IAAIvN,KADTgN,EAAIc,UAAUP,GACOxP,OAAOmP,UAAUC,eAAeC,KAAKJ,EAAGhN,KACzDiN,EAAEjN,GAAKgN,EAAEhN,IAEjB,OAAOiN,IAEKc,MAAMC,KAAMF,YAU5BG,EAAe,SAAUrQ,GACzB,IAAIsQ,GAAU,IAAAC,cACVC,GAAQ,IAAAC,YACRC,EAAM1Q,EAAMmC,UAChB,OAAQ,kBAAoBuO,EAAK,CAAE/Q,UAAW,IAAWK,EAAML,UAAW,cACtE,kBAAoB,EAAAgR,SAAU,CAAEC,SAAU5Q,EAAM4Q,UAC5C,kBAAoB,EAAAC,kBAAmBb,EAAS,CAAEM,QAASA,EAASE,MAAOA,EAAOM,QAAS,YAAaC,OAAQ,mBAAoBC,MAAO,YAAaC,eAAgB,kBAAoB,EAAoBjB,EAAS,CAAE7N,UAAW,sBAAuBmO,QAASA,EAASE,MAAOA,GAASxQ,IAASkR,IAAKlR,EAAMmR,UAAYnR,OAE3UqQ,EAAalM,UAAY,CACrByM,SAAU,SACVO,SAAU,WACVhP,UAAW,WACXxC,UAAW,YAEf,IAAIyR,EAAW,gBAAiB,SAAUpR,EAAOkR,GAAO,OAAO,kBAAoBb,EAAcL,EAAS,CAAEmB,SAAUD,GAAOlR,OAC7HoR,EAASjN,UAAY,CACjByM,SAAU,SACVzO,UAAW,WACXxC,UAAW,YAEfyR,EAAS/M,aAAe,CACpBuM,SAAW,kBAAoB,EAAAS,SAAU,CAAE1R,UAAW,aAClD,kBAAoB,EAAA2R,QAAS,CAAE3M,KAAM,QACzCxC,UAAW,WAEf,U,gpBCtBA,IAAMoP,GAAW,WACb,IAAMC,GAAYC,EAAAA,EAAAA,QAAO,MACnBjO,GAAOC,EAAAA,GAAAA,KACLqK,GAAgB4D,EAAAA,EAAAA,YAAWC,EAAAA,IAA3B7D,YACF8D,GAAWC,EAAAA,EAAAA,gBAEjB1K,EAAAA,EAAAA,YAAU,WAAM,MACZyK,EAAS,CAAEvL,KAAM,mBACjBuL,EAAS,CAAEvL,KAAM,eACjBmL,MAAAA,GAAA,UAAAA,EAAWM,eAAX,SAAoBC,kBACrB,CAACH,IAEJ,IJX4B,EAC5BI,EACAC,EACAC,EAEMC,EIMAC,GAAeC,EAAAA,EAAAA,cJXO,EIWqB,CAC7CL,MAAOM,EAAAA,IJXXN,EAGE,EAHFA,MACAC,EAEE,EAFFA,WACAC,EACE,EADFA,QAEMC,EKzBH,WACH,IAAIA,EAAS,cAAiB,UAAoBA,OAGlD,OAFAI,SAAU,QAAUJ,EAAQ,wHACkC,QAAUA,EAAQ,IACzEA,ELqBQK,GAER,SAAC/M,EAAOxE,GAAR,IAAgBwR,EAAhB,uDAAmC,GAAnC,OACHN,EACCH,MAAM,CACHA,MAAAA,EACAU,cAAc,EACdC,YAAa,WACb1L,UAAW,EAAF,CACLxB,MAAAA,EACAxE,OAAAA,GACGwR,KAGVG,MAAK,YAAc,MAAXrL,EAAW,EAAXA,KAECsL,EAAS,CACXC,UAFavL,MAAAA,OAAA,EAAAA,EAAMwL,YAAa,GAGhCC,KAAM,EAAF,KACIP,EAAiBvF,MAAQ,CAAEA,KAAMuF,EAAiBvF,OADtD,IAEApB,YAAYvE,MAAAA,GAAA,UAAAA,EAAM0L,aAAN,eAAanH,aAAc,KAK/C,OADAmG,MAAAA,GAAAA,EAAaY,GACNA,KAtBX,OAwBO,SAAClL,GACJ,GAAIuK,EAEA,OADAA,EAAQvK,GACD,CAAEmL,SAAU,GAAIE,KAAM,CAAElH,WAAY,IAE3C,MAAMnE,OIxBd,IAEJ,OAAO,kBAAC,aAAD,KACH,kBAACuL,EAAD,CACIC,YAAU,EACVC,aAAW,EACXC,gBAAc,EACdC,YAAa,CAAEC,KAAK,EAAM1J,MAAM,EAAOqD,MAAM,GAC7CtF,QAAS6G,EAGTyC,IAAKM,EACLZ,SAAU,kBAACU,EAAAA,QAAD,MACVkC,OAAQ3F,EAAcjG,EAASkG,GAC/B2F,YAAW,mCAAE,WACTC,EADS,iHAEPxL,KAAAA,OAFO,MAEA,EAFA,EAEasB,EAFb,EAEGmK,SAAmBjO,EAFtB,EAEsBA,QAASkO,EAF/B,EAE+BA,eAAgBjK,EAF/C,EAE+CA,QAElDkK,EAAiB1E,EAAgBzJ,GACjCE,EAASoJ,EAAgB6E,MAAAA,OAAD,EAACA,EAAgBjO,OAAQgO,GACjDE,EAAehH,EAAgBnD,GAC/BlE,EAAQ+D,EACRvI,EAASiH,EAAOsB,EAAUA,EARvB,SAUqB4I,EAAa3M,EAAOxE,EAAR,GAAC,MACpC6S,GADmC,IAEtCpO,QAASE,KAZJ,cAUHmO,EAVG,OAeLjB,GAfK,EAiBLiB,GAAmB,IAFnBjB,SACQhH,EAhBH,EAgBLkH,KAAQlH,WAhBH,kBAmBF,CACHkI,QAASlB,EACTpN,QAAAA,EACAkO,eAAAA,EACAK,MAAOnI,IAvBF,4CAAF,wDA0BXoI,WAAY,CACRC,cAAc,EACdxU,UAAW,WACX2M,gBAAgB,GAEpB8H,eAAgB,kBAAC7P,EAAA,EAAD,CAAc5E,UAAU,YAAYiE,KAAM4I,EAAAA,GAAY1I,QAAQ,QAAQC,MAAOP,EAAKQ,cAAcC,EAAAA,EAAAA,WAC5GC,KAAMV,EAAKQ,cAAcC,EAAAA,EAAAA,sBAKzCsN,GAASpN,UAAYyI,EAAAA,GAErB,a","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/layouts/Grid/Grid.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/layouts/Grid/GridItem.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/styles/sizes.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Text/Text.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/l_grid_item_Order.js","webpack:///./src/Components/CodeEditor/CodeEditor.js","webpack:///./src/Components/MessageState/MessageState.js","webpack:///./src/Components/SigTable/SignatureDescription.js","webpack:///./src/Components/SigTable/SigTable.js","webpack:///./node_modules/@apollo/client/react/hooks/useReactiveVar.js","webpack:///./src/Components/StatusLabel/StatusLabel.js","webpack:///./src/Components/SysTable/hooks.js","webpack:///./src/Components/SysTable/constants.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryLoadError.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryTable.js","webpack:///./src/Components/SysTable/SysTable.js","webpack:///./node_modules/@apollo/client/react/hooks/useApolloClient.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/layouts/Grid/grid';\nimport { css } from '@patternfly/react-styles';\nimport { DeviceSizes } from '../../styles/sizes';\nimport * as gridToken from '@patternfly/react-tokens/dist/esm/l_grid_item_Order';\nimport { setBreakpointCssVars } from '../../helpers/util';\nexport const Grid = (_a) => {\n    var { children = null, className = '', hasGutter, span = null, order, style } = _a, props = __rest(_a, [\"children\", \"className\", \"hasGutter\", \"span\", \"order\", \"style\"]);\n    const classes = [styles.grid, span && styles.modifiers[`all_${span}Col`]];\n    Object.entries(DeviceSizes).forEach(([propKey, gridSpanModifier]) => {\n        const key = propKey;\n        const propValue = props[key];\n        if (propValue) {\n            classes.push(styles.modifiers[`all_${propValue}ColOn${gridSpanModifier}`]);\n        }\n        delete props[key];\n    });\n    return (React.createElement(\"div\", Object.assign({ className: css(...classes, hasGutter && styles.modifiers.gutter, className), style: style || order ? Object.assign(Object.assign({}, style), setBreakpointCssVars(order, gridToken.l_grid_item_Order.name)) : undefined }, props), children));\n};\nGrid.displayName = 'Grid';\n//# sourceMappingURL=Grid.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/layouts/Grid/grid';\nimport { css } from '@patternfly/react-styles';\nimport { DeviceSizes } from '../../styles/sizes';\nimport * as gridToken from '@patternfly/react-tokens/dist/esm/l_grid_item_Order';\nimport { setBreakpointCssVars } from '../../helpers/util';\nexport const GridItem = (_a) => {\n    var { children = null, className = '', span = null, rowSpan = null, offset = null, order, style } = _a, props = __rest(_a, [\"children\", \"className\", \"span\", \"rowSpan\", \"offset\", \"order\", \"style\"]);\n    const classes = [\n        styles.gridItem,\n        span && styles.modifiers[`${span}Col`],\n        rowSpan && styles.modifiers[`${rowSpan}Row`],\n        offset && styles.modifiers[`offset_${offset}Col`]\n    ];\n    Object.entries(DeviceSizes).forEach(([propKey, classModifier]) => {\n        const key = propKey;\n        const rowSpanKey = `${key}RowSpan`;\n        const offsetKey = `${key}Offset`;\n        const spanValue = props[key];\n        const rowSpanValue = props[rowSpanKey];\n        const offsetValue = props[offsetKey];\n        if (spanValue) {\n            classes.push(styles.modifiers[`${spanValue}ColOn${classModifier}`]);\n        }\n        if (rowSpanValue) {\n            classes.push(styles.modifiers[`${rowSpanValue}RowOn${classModifier}`]);\n        }\n        if (offsetValue) {\n            classes.push(styles.modifiers[`offset_${offsetValue}ColOn${classModifier}`]);\n        }\n        delete props[key];\n        delete props[rowSpanKey];\n        delete props[offsetKey];\n    });\n    return (React.createElement(\"div\", Object.assign({ className: css(...classes, className), style: style || order ? Object.assign(Object.assign({}, style), setBreakpointCssVars(order, gridToken.l_grid_item_Order.name)) : undefined }, props), children));\n};\nGridItem.displayName = 'GridItem';\n//# sourceMappingURL=GridItem.js.map","export var BaseSizes;\n(function (BaseSizes) {\n    BaseSizes[\"xs\"] = \"xs\";\n    BaseSizes[\"sm\"] = \"sm\";\n    BaseSizes[\"md\"] = \"md\";\n    BaseSizes[\"lg\"] = \"lg\";\n    BaseSizes[\"xl\"] = \"xl\";\n    BaseSizes[\"2xl\"] = \"2xl\";\n    BaseSizes[\"3xl\"] = \"3xl\";\n    BaseSizes[\"4xl\"] = \"4xl\";\n})(BaseSizes || (BaseSizes = {}));\nexport var DeviceSizes;\n(function (DeviceSizes) {\n    DeviceSizes[\"sm\"] = \"Sm\";\n    DeviceSizes[\"md\"] = \"Md\";\n    DeviceSizes[\"lg\"] = \"Lg\";\n    DeviceSizes[\"xl\"] = \"Xl\";\n    DeviceSizes[\"xl2\"] = \"_2xl\";\n})(DeviceSizes || (DeviceSizes = {}));\n//# sourceMappingURL=sizes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Text = exports.TextVariants = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst content_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Content/content\"));\nconst helpers_1 = require(\"../../helpers\");\nvar TextVariants;\n(function (TextVariants) {\n    TextVariants[\"h1\"] = \"h1\";\n    TextVariants[\"h2\"] = \"h2\";\n    TextVariants[\"h3\"] = \"h3\";\n    TextVariants[\"h4\"] = \"h4\";\n    TextVariants[\"h5\"] = \"h5\";\n    TextVariants[\"h6\"] = \"h6\";\n    TextVariants[\"p\"] = \"p\";\n    TextVariants[\"a\"] = \"a\";\n    TextVariants[\"small\"] = \"small\";\n    TextVariants[\"blockquote\"] = \"blockquote\";\n    TextVariants[\"pre\"] = \"pre\";\n})(TextVariants = exports.TextVariants || (exports.TextVariants = {}));\nconst Text = (_a) => {\n    var { children = null, className = '', component = TextVariants.p, isVisitedLink = false, ouiaId, ouiaSafe = true } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", \"component\", \"isVisitedLink\", \"ouiaId\", \"ouiaSafe\"]);\n    const Component = component;\n    const ouiaProps = helpers_1.useOUIAProps(exports.Text.displayName, ouiaId, ouiaSafe);\n    return (React.createElement(Component, Object.assign({}, ouiaProps, props, { \"data-pf-content\": true, className: react_styles_1.css(isVisitedLink && component === TextVariants.a && content_1.default.modifiers.visited, className) }), children));\n};\nexports.Text = Text;\nexports.Text.displayName = 'Text';\n//# sourceMappingURL=Text.js.map","export const l_grid_item_Order = {\n  \"name\": \"--pf-l-grid--item--Order\",\n  \"value\": \"0\",\n  \"var\": \"var(--pf-l-grid--item--Order)\"\n};\nexport default l_grid_item_Order;","import { LockIcon } from '@patternfly/react-icons/dist/esm/icons/lock-icon';\nimport MessageState from '../MessageState/MessageState';\nimport { CodeEditor as PfCodeEditor } from '@patternfly/react-code-editor';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nconst CodeEditor = ({ code, language, isReadOnly, isDownloadEnabled, isCopyEnabled, height = '400px' }) => {\n    const intl = useIntl();\n\n    return <PfCodeEditor\n        isDownloadEnabled={isDownloadEnabled}\n        isCopyEnabled={isCopyEnabled}\n        isReadOnly={isReadOnly}\n        isLanguageLabelVisible={language}\n        code={code}\n        language={language}\n        emptyState={\n            <MessageState className='' icon={LockIcon} variant='small' title={intl.formatMessage(messages.sigCompiled)}\n                text={intl.formatMessage(messages.sigCompiledBody)} />\n        }\n        height={height}\n    />;\n};\n\nCodeEditor.propTypes = {\n    code: PropTypes.any,\n    language: PropTypes.string,\n    isReadOnly: PropTypes.bool,\n    isCopyEnabled: PropTypes.bool,\n    isDownloadEnabled: PropTypes.bool,\n    height: PropTypes.string\n};\n\nCodeEditor.defaultProps = { codeType: 'Code' };\n\nexport default CodeEditor;\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant } from '@patternfly/react-core/dist/esm/components/EmptyState/index';\n\nimport CubesIcon from '@patternfly/react-icons/dist/esm/icons/cubes-icon';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Title } from '@patternfly/react-core/dist/esm/components/Title/Title';\n\nconst MessageState = ({ className, children, icon, iconClass, iconStyle, text, title, variant }) =>\n    <EmptyState className={className} variant={variant}>\n        {icon !== 'none' && <EmptyStateIcon className={iconClass} style={iconStyle} icon={icon} />}\n        <Title headingLevel='h5' size='lg'>\n            {title}\n        </Title>\n        <EmptyStateBody style={{ marginBottom: '16px' }}>\n            {text}\n        </EmptyStateBody>\n        {children}\n    </EmptyState>;\n\nMessageState.propTypes = {\n    children: PropTypes.any,\n    icon: PropTypes.any,\n    iconClass: PropTypes.any,\n    iconStyle: PropTypes.any,\n    text: PropTypes.any,\n    title: PropTypes.string,\n    variant: PropTypes.any,\n    className: PropTypes.string\n};\n\nMessageState.defaultProps = {\n    icon: CubesIcon,\n    title: '',\n    variant: EmptyStateVariant.full\n};\n\nexport default MessageState;\n","import React, { useState } from 'react';\nimport CodeEditor from '../CodeEditor/CodeEditor';\nimport { Grid, GridItem } from '@patternfly/react-core/dist/esm/layouts/Grid/index';\nimport PropTypes from 'prop-types';\nimport { Text, TextVariants } from '@patternfly/react-core';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nconst SignatureDesctiprion = ({ signature }) => {\n    const intl = useIntl();\n    const [isCodeEditorEnabled] = useState(false);\n    return (\n        <Grid hasGutter>\n            {isCodeEditorEnabled && (\n                <GridItem span={6}>\n                    <CodeEditor code={signature.rawRule} isReadOnly />\n                </GridItem>\n            )}\n            <GridItem span={isCodeEditorEnabled && 6 || 12}> <Text className='ins-l-sigtable--title' component={TextVariants.h6}>\n                {intl.formatMessage(messages.description)}\n            </Text>{signature.metadata.description}\n            </GridItem>\n        </Grid>\n    );\n};\n\nSignatureDesctiprion.propTypes = {\n    signature: PropTypes.object\n};\nexport default SignatureDesctiprion;\n","/* eslint-disable no-unused-vars */\nimport './SigTable.scss';\n\nimport { Grid, GridItem } from '@patternfly/react-core/dist/esm/layouts/Grid/index';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core/dist/esm/components/Pagination/index';\nimport React, { useEffect, useReducer } from 'react';\nimport {\n    SortByDirection,\n    Table,\n    TableBody,\n    TableHeader,\n    cellWidth,\n    expandable,\n    sortable\n} from '@patternfly/react-table/dist/esm/components/Table/index';\nimport { gqlProps } from '../Common';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { GET_SIGNATURE_TABLE } from '../../operations/queries';\nimport { Link } from 'react-router-dom';\nimport Loading from '../../Components/Loading/Loading';\nimport MessageState from '../MessageState/MessageState';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { SearchIcon } from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport StatusLabel from '../StatusLabel/StatusLabel';\nimport { Tooltip } from '@patternfly/react-core/dist/esm/components/Tooltip/Tooltip';\nimport messages from '../../Messages';\nimport { sigTableFilters } from '../../store/cache';\nimport { useIntl } from 'react-intl';\nimport { useQuery } from '@apollo/client';\nimport { useReactiveVar } from '@apollo/client';\nimport SignatureDesctiprion from './SignatureDescription';\n\nconst initialState = {\n    tableVars: {\n        limit: 10,\n        offset: 0,\n        orderBy: 'LAST_MATCH_DATE_DESC',\n        ruleName: ''\n    },\n    sortBy: {\n        index: 4,\n        direction: SortByDirection.desc\n    },\n    rows: []\n};\nconst sortIndices = { 1: 'NAME', 2: 'HAS_MATCH', 3: 'HOST_COUNT', 4: 'LAST_MATCH_DATE' };\nconst orderBy = ({ index, direction }) => `${sortIndices[index]}_${direction === SortByDirection.asc ? 'ASC' : 'DESC'}`;\n\nconst tableReducer = (state, action) => {\n    switch (action.type) {\n        case 'setTableVars':\n            return { ...state, tableVars: { ...state.tableVars, ...action.payload } };\n        case 'setSortBy':\n            return { ...state, sortBy: action.payload, tableVars: { ...state.tableVars, ...action.tableVars } };\n        case 'setRows':\n            return { ...state, rows: action.payload };\n    }\n\n    return state;\n};\n\nconst SigTable = () => {\n    const intl = useIntl();\n    const [{ tableVars, sortBy, rows }, stateSet] = useReducer(tableReducer, {\n        ...initialState\n    });\n    const { data: sigTableData, loading: sigTableLoading, error: sigTableError } =\n        useQuery(GET_SIGNATURE_TABLE, { variables: { ...tableVars, ...useReactiveVar(sigTableFilters) } });\n    const columns = [\n        { title: intl.formatMessage(messages.sigName), cellFormatters: [expandable], transforms: [cellWidth(45), sortable] },\n        { title: intl.formatMessage(messages.lastStatus), transforms: [cellWidth(10), sortable] },\n        { title: intl.formatMessage(messages.systems), transforms: [cellWidth(10), sortable] },\n        { title: intl.formatMessage(messages.lastMatched), transforms: [cellWidth(10), sortable] }\n    ];\n\n    const page = tableVars.offset / tableVars.limit + 1;\n\n    const onCollapse = (e, rowKey, isOpen) => {\n        const collapseRows = [...rows];\n        const sig = collapseRows[rowKey + 1].sigData;\n\n        collapseRows[rowKey] = { ...collapseRows[rowKey], isOpen };\n        collapseRows[rowKey + 1].cells = [{\n            title: <SignatureDesctiprion signature={sig}/>\n        }];\n        stateSet({ type: 'setRows', payload: collapseRows });\n    };\n\n    const FILTER_CATEGORIES = {\n        sig_match: {\n            type: 'radio', title: intl.formatMessage(messages.status), urlParam: 'sig_match', values: [\n                { label: intl.formatMessage(messages.all), value: 'all' },\n                { label: intl.formatMessage(messages.matched), value: 'true' },\n                { label: intl.formatMessage(messages.notMatched), value: 'false' }\n            ]\n        }\n    };\n    const filterConfigItems = [{\n        label: intl.formatMessage(messages.signature).toLowerCase(),\n        filterValues: {\n            key: 'text-filter',\n            onChange: (e, value) => stateSet({ type: 'setTableVars', payload: { ruleName: value, offset: 0 } }),\n            value: tableVars.ruleName,\n            placeholder: intl.formatMessage(messages.filterBy, { field: intl.formatMessage(messages.signature).toLowerCase() })\n        }\n    }, {\n        label: FILTER_CATEGORIES.sig_match.title.toLowerCase(),\n        type: FILTER_CATEGORIES.sig_match.type,\n        id: FILTER_CATEGORIES.sig_match.urlParam,\n        value: `radio-${FILTER_CATEGORIES.sig_match.urlParam}`,\n        filterValues: {\n            key: `${FILTER_CATEGORIES.sig_match.urlParam}-filter`,\n            onChange: (e, value) => {\n                const tableFilters = sigTableFilters();\n                value === 'all' && delete tableFilters?.condition;\n                value === 'all' ? sigTableFilters({ ...tableFilters }) :\n                    sigTableFilters({ ...tableFilters, condition: { hasMatch: JSON.parse(value) } });\n            },\n            value: JSON.stringify(sigTableFilters().condition?.hasMatch) || 'all',\n            items: FILTER_CATEGORIES.sig_match.values\n        }\n    }];\n\n    const onSetPage = (e, page) => stateSet({ type: 'setTableVars', payload: { offset: page * tableVars.limit - tableVars.limit } });\n\n    const onPerPageSelect = (e, perPage) => stateSet({ type: 'setTableVars', payload: { limit: perPage, offset: 0 } });\n\n    const onSort = (e, index, direction) =>\n        stateSet({ type: 'setSortBy', payload: { index, direction }, tableVars: { orderBy: orderBy({ index, direction }), offset: 0 } });\n\n    const buildFilterChips = () => {\n        const chips = [];\n        const hasMatch = sigTableFilters().condition?.hasMatch !== undefined && (sigTableFilters().condition?.hasMatch ?\n            intl.formatMessage(messages.matched) : intl.formatMessage(messages.notMatched));\n        tableVars?.ruleName &&\n        chips.push({ category: intl.formatMessage(messages.signature), value: 'name',\n            chips: [{ name: tableVars?.ruleName, value: tableVars?.ruleName }] });\n        hasMatch && chips.push({ category: intl.formatMessage(messages.status), value: 'matched', chips: [{ name: hasMatch, value: hasMatch }] });\n        return chips;\n    };\n\n    const activeFiltersConfig = {\n        deleteTitle: intl.formatMessage(messages.resetFilters),\n        filters: buildFilterChips(),\n        onDelete: (event, itemsToRemove, isAll) => {\n            if (isAll) {\n                sigTableFilters({});\n                stateSet({ type: 'setTableVars', payload: { ruleName: '' } });\n            } else {\n                itemsToRemove.map((item) => {\n                    item.value === 'name' && stateSet({ type: 'setTableVars', payload: { ruleName: '' } });\n                    item.value === 'matched' && sigTableFilters({});\n                });\n            }\n        }\n    };\n\n    useEffect(() => {\n        const rowBuilder = data => data?.rulesList?.flatMap((data, key) => {\n            const sig = data;\n            return [{\n                rowId: key,\n                isOpen: false,\n                cells: [\n                    { title: <Link to={`/signatures/${sig.name}`}>{sig.name}</Link> },\n                    { title: <StatusLabel isDisabled={sig.isDisabled} hasMatch={sig.hasMatch} displayMatch /> },\n                    { title: <Link to={`/signatures/${sig.name}`}>{sig.hostCount?.toLocaleString()}</Link> },\n                    {\n                        title: sig.lastMatchDate ?\n                            <Tooltip content={<DateFormat date={new Date(sig.lastMatchDate)} type='exact' />}>\n                                <span><DateFormat date={new Date(sig.lastMatchDate)} /></span>\n                            </Tooltip>\n                            : <Tooltip content={intl.formatMessage(messages.noHostHas)}>\n                                <span>{intl.formatMessage(messages.never)}</span>\n                            </Tooltip>\n                    }\n                ]\n            }, {\n                parent: key * 2,\n                sigData: sig,\n                fullWidth: true,\n                cells: []\n            }];\n        });\n\n        stateSet({ type: 'setRows', payload: rowBuilder(sigTableData) });\n    }, [intl, sigTableData]);\n\n    return <React.Fragment>\n        <PrimaryToolbar\n            pagination={{\n                itemCount: sigTableData?.rules?.totalCount || 0,\n                page,\n                perPage: tableVars.limit,\n                onSetPage(e, page) { onSetPage(e, page); },\n                onPerPageSelect(e, perPage) { onPerPageSelect(e, perPage); },\n                isCompact: true\n            }}\n            filterConfig={{ items: filterConfigItems }}\n            activeFiltersConfig={activeFiltersConfig}\n        />\n        <Table className='sigTable' aria-label='Signature table'\n            onCollapse={onCollapse}\n            rows={rows} cells={columns}\n            onSort={onSort} sortBy={sortBy} isStickyHeader>\n            <TableHeader />\n            <TableBody />\n        </Table>\n        {sigTableLoading && <Loading type='table' />}\n        {!sigTableLoading && !sigTableError && sigTableData?.rules?.totalCount === 0 &&\n            <MessageState className='pf-c-card' icon={SearchIcon} variant='large' title={intl.formatMessage(messages.noResults)}\n                text={intl.formatMessage(messages.noResultsMatch)} />}\n        {sigTableError && <MessageState className='pf-c-card' variant='large' title='Error' text='error' />}\n        <Pagination\n            itemCount={sigTableData?.rules?.totalCount || 0}\n            widgetId='pagination-options-menu-bottom'\n            perPage={tableVars.limit}\n            page={page}\n            variant={PaginationVariant.bottom}\n            onSetPage={onSetPage}\n            onPerPageSelect={onPerPageSelect}\n        />\n    </React.Fragment>;\n};\n\nSigTable.propTypes = gqlProps;\n\nexport default SigTable;\n","import { useEffect, useState } from 'react';\nexport function useReactiveVar(rv) {\n    var value = rv();\n    var setValue = useState(value)[1];\n    useEffect(function () {\n        var probablySameValue = rv();\n        if (value !== probablySameValue) {\n            setValue(probablySameValue);\n        }\n        else {\n            return rv.onNextChange(setValue);\n        }\n    }, [value]);\n    return value;\n}\n//# sourceMappingURL=useReactiveVar.js.map","import { Label } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\n\nconst StatusLabel = ({ isDisabled, hasMatch, displayMatch = false }) => {\n    const intl = useIntl();\n    return displayMatch ? <div>\n        {hasMatch && <Label color='red'>{intl.formatMessage(messages.matched)}</Label>}\n        {!hasMatch && <Label color='blue'>{intl.formatMessage(messages.notMatched)}</Label>}\n    </div> : <div>\n        {isDisabled && <Label>{intl.formatMessage(messages.disabled)}</Label>}\n        {!isDisabled && <Label color='blue'>{intl.formatMessage(messages.enabled)}</Label>}\n    </div>;\n};\n\nStatusLabel.propTypes = {\n    isDisabled: PropTypes.bool,\n    hasMatch: PropTypes.bool,\n    displayMatch: PropTypes.bool\n};\nexport default StatusLabel;\n","import { useApolloClient } from '@apollo/client';\n\nexport const buildApiFilters = (filters = {}) => {\n    const { tagFilters, ...otherFilters } = filters;\n    const tagsApiFilter = tagFilters\n        ? {\n            tags: tagFilters.flatMap((tagFilter) =>\n                tagFilter.values.map(\n                    (tag) =>\n                        `${encodeURIComponent(tagFilter.key)}/${encodeURIComponent(\n                            tag.tagKey\n                        )}=${encodeURIComponent(tag.value)}`\n                )\n            )\n        }\n        : {};\n\n    return {\n        ...otherFilters,\n        ...tagsApiFilter\n    };\n};\n\nexport const useFetchSystems = ({\n    query,\n    onComplete,\n    onError\n}) => {\n    const client = useApolloClient();\n\n    return (limit, offset, requestVariables = {}) =>\n        client\n        .query({\n            query,\n            fetchResults: true,\n            fetchPolicy: 'no-cache',\n            variables: {\n                limit,\n                offset,\n                ...requestVariables\n            }\n        })\n        .then(({ data }) => {\n            const entities = data?.hostsList || [];\n            const result = {\n                entities,\n                meta: {\n                    ...(requestVariables.tags && { tags: requestVariables.tags }),\n                    totalCount: data?.hosts?.totalCount || 0\n                }\n            };\n\n            onComplete?.(result);\n            return result;\n        })\n        .catch((error) => {\n            if (onError) {\n                onError(error);\n                return { entities: [], meta: { totalCount: 0 } };\n            } else {\n                throw error;\n            }\n        });\n};\n","import React from 'react';\nimport { createIntl, createIntlCache } from 'react-intl';\nimport { entitiesReducer } from '../../store/index';\nimport {\n    cellWidth,\n    info,\n    sortable\n} from '@patternfly/react-table/dist/esm/components/Table/index';\nimport messages from '../../Messages';\nimport StatusLabel from '../StatusLabel/StatusLabel';\nimport { Tooltip } from '@patternfly/react-core/dist/esm/components/Tooltip/Tooltip';\nimport { Link } from 'react-router-dom';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\n\nconst cache = createIntlCache();\nconst locale = navigator.language.slice(0, 2);\n\nexport const intl = createIntl({\n    locale\n}, cache);\n\nexport const intlSettings = { locale };\n\nexport const defaultOnLoad =\n  (columns, getRegistry) =>\n      ({ INVENTORY_ACTION_TYPES, mergeWithEntities }) =>\n          getRegistry().register({\n              ...mergeWithEntities(entitiesReducer(INVENTORY_ACTION_TYPES, columns),\n                  {\n                      page: 1,\n                      perPage: 10,\n                      sortBy: {\n                          key: 'lastScanDate',\n                          direction: 'desc'\n                      }\n                  })\n          });\n\nexport const columns = [\n    {\n        title: intl.formatMessage(messages.name),\n        transforms: [cellWidth(45), sortable],\n        key: 'displayName',\n        sortBy: ['DISPLAY_NAME'],\n        renderFunc: (displayName) => <Link to={`/systems/${displayName}`}>{displayName}</Link>\n    },\n    // {\n    //     title: 'Tags',\n    //     key: 'tags',\n    //     props: { width: 10, isStatic: true }\n    // },\n    {\n        title: intl.formatMessage(messages.lastStatus),\n        transforms: [sortable, cellWidth(10)],\n        key: 'hasMatch',\n        sortBy: ['HAS_MATCH'],\n        renderFunc: (hasMatch, _, { isDisabled }) => <StatusLabel isDisabled={isDisabled} hasMatch={hasMatch} displayMatch />\n    },\n    {\n        title: intl.formatMessage(messages.lastMatched),\n        transforms: [sortable, cellWidth(10)],\n        key: 'lastMatchDate',\n        sortBy: ['LAST_MATCH_DATE'],\n        renderFunc: (lastMatchDate) =>\n            lastMatchDate ?\n                <Tooltip content={<DateFormat date={new Date(lastMatchDate)} type='exact' />}>\n                    <span><DateFormat date={new Date(lastMatchDate)} /></span>\n                </Tooltip>\n                : <Tooltip content={intl.formatMessage(messages.noHostHas)}>\n                    <span>{intl.formatMessage(messages.never)}</span>\n                </Tooltip>\n    },\n    {\n        title: intl.formatMessage(messages.totalMatches),\n        transforms: [\n            sortable,\n            cellWidth(15),\n            info({\n                tooltip: intl.formatMessage(messages.totalMatchesNote)\n            })\n        ],\n        key: 'totalMatches',\n        sortBy: ['TOTAL_MATCHES'],\n        renderFunc: (totalMatches, _, { displayName }) => <Link to={`/systems/${displayName}`}>{totalMatches?.toLocaleString()}</Link>\n    },\n    {\n        title: intl.formatMessage(messages.lastScan),\n        transforms: [sortable, cellWidth(10)],\n        key: 'lastScanDate',\n        sortBy: ['LAST_SCAN_DATE'],\n        renderFunc: (lastScanDate) =>\n            <Tooltip content={<DateFormat date={new Date(lastScanDate)} type='exact' />}>\n                <span><DateFormat date={new Date(lastScanDate)} /></span>\n            </Tooltip>\n\n    }\n];\n\nexport const mergedColumns = (defaultColumns) =>\n    columns.map((column) => {\n        const isStringCol = typeof column === 'string';\n        const key = isStringCol ? column : column.key;\n        const defaultColumn = defaultColumns.find(\n            (defaultCol) => defaultCol.key === key\n        );\n        return {\n            ...defaultColumn,\n            ...(isStringCol ? { key: column } : column),\n            props: {\n                ...defaultColumn?.props,\n                ...column?.props\n            }\n        };\n    });\n\nexport const appendDirection = (attributes, direction) =>\n    attributes?.map((attribute) => `${attribute}_${direction}`);\n\nexport const findColumnByKey = (key) =>\n    (columns || []).find((column) => column.key === key);\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useEffect } from 'react';\nvar InventoryLoadError = function (_a) {\n    var component = _a.component, props = __rest(_a, [\"component\"]);\n    useEffect(function () {\n        console.error(\"Unable to load inventory component. Failed to load \".concat(component, \".\"), props);\n    }, []);\n    return (React.createElement(\"div\", null,\n        React.createElement(\"h1\", null, \"Unable to load inventory component\"),\n        React.createElement(\"h2\", null,\n            \"Failed to load \",\n            component),\n        React.createElement(\"code\", null, \"More info can be found in browser console output.\")));\n};\nexport default InventoryLoadError;\n//# sourceMappingURL=InventoryLoadError.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScalprumComponent } from '@scalprum/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { useStore } from 'react-redux';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport InventoryLoadError from './InventoryLoadError';\nimport classNames from 'classnames';\nvar BaseInvTable = function (props) {\n    var history = useHistory();\n    var store = useStore();\n    var Cmp = props.component;\n    return (React.createElement(Cmp, { className: classNames(props.className, 'inventory') },\n        React.createElement(Suspense, { fallback: props.fallback },\n            React.createElement(ScalprumComponent, __assign({ history: history, store: store, appName: \"inventory\", module: \"./InventoryTable\", scope: \"inventory\", ErrorComponent: React.createElement(InventoryLoadError, __assign({ component: \"InventoryDetailHead\", history: history, store: store }, props)), ref: props.innerRef }, props)))));\n};\nBaseInvTable.propTypes = {\n    fallback: PropTypes.node,\n    innerRef: PropTypes.object,\n    component: PropTypes.string,\n    className: PropTypes.string,\n};\nvar InvTable = React.forwardRef(function (props, ref) { return React.createElement(BaseInvTable, __assign({ innerRef: ref }, props)); });\nInvTable.propTypes = {\n    fallback: PropTypes.node,\n    component: PropTypes.string,\n    className: PropTypes.string,\n};\nInvTable.defaultProps = {\n    fallback: (React.createElement(Bullseye, { className: \"pf-u-p-lg\" },\n        React.createElement(Spinner, { size: \"xl\" }))),\n    component: 'section',\n};\nexport default InvTable;\n//# sourceMappingURL=InventoryTable.js.map","/* eslint-disable no-unused-vars */\nimport './SysTable.scss';\n\nimport React, { useContext, useEffect, useCallback, useRef } from 'react';\n\nimport {\n    useFetchSystems,\n    buildApiFilters\n} from './hooks';\nimport { defaultOnLoad, columns, mergedColumns, appendDirection, findColumnByKey } from './constants';\n\nimport { InventoryTable } from '@redhat-cloud-services/frontend-components/Inventory';\nimport { GET_SYSTEM_TABLE } from '../../operations/queries';\nimport MessageState from '../MessageState/MessageState';\nimport { SearchIcon } from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport { Spinner } from '@patternfly/react-core';\nimport { gqlProps } from '../Common';\nimport messages from '../../Messages';\nimport { useIntl } from 'react-intl';\nimport { RegistryContext } from '../../store';\nimport { useDispatch } from 'react-redux';\n\nconst SysTable = () => {\n    const inventory = useRef(null);\n    const intl = useIntl();\n    const { getRegistry } = useContext(RegistryContext);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch({ type: 'INVENTORY_INIT' });\n        dispatch({ type: 'RESET_PAGE' });\n        inventory?.current?.onRefreshData();\n    }, [dispatch]);\n\n    const fetchSystems = useCallback(useFetchSystems({\n        query: GET_SYSTEM_TABLE\n    }), []);\n\n    return <React.Fragment>\n        <InventoryTable\n            isFullView\n            autoRefresh\n            initialLoading\n            hideFilters={{ all: true, name: false, tags: true }}\n            columns={mergedColumns}\n            // TODO: enable when tag filtering is ready on BE\n            // showTags\n            ref={inventory}\n            fallback={<Spinner />}\n            onLoad={defaultOnLoad(columns, getRegistry)}\n            getEntities={async (\n                _ids,\n                { page = 1, per_page: perPage, orderBy, orderDirection, filters }\n            ) => {\n                const sortableColumn = findColumnByKey(orderBy);\n                const sortBy = appendDirection(sortableColumn?.sortBy, orderDirection);\n                const filterForApi = buildApiFilters(filters);\n                const limit = perPage;\n                const offset = page * perPage - perPage;\n\n                const fetchedEntities = await fetchSystems(limit, offset, {\n                    ...filterForApi,\n                    orderBy: sortBy\n                });\n                const {\n                    entities,\n                    meta: { totalCount }\n                } = fetchedEntities || {};\n\n                return {\n                    results: entities,\n                    orderBy,\n                    orderDirection,\n                    total: totalCount\n                };\n            }}\n            tableProps={{\n                canSelectAll: false,\n                className: 'sysTable',\n                isStickyHeader: true\n            }}\n            noSystemsTable={<MessageState className='pf-c-card' icon={SearchIcon} variant='large' title={intl.formatMessage(messages.noResults)}\n                text={intl.formatMessage(messages.noResultsMatch)} />}\n        />\n    </React.Fragment>;\n};\n\nSysTable.propTypes = gqlProps;\n\nexport default SysTable;\n","import { invariant } from \"../../utilities/globals/index.js\";\nimport * as React from 'react';\nimport { getApolloContext } from \"../context/index.js\";\nexport function useApolloClient() {\n    var client = React.useContext(getApolloContext()).client;\n    __DEV__ ? invariant(client, 'No Apollo Client instance can be found. Please ensure that you ' +\n        'have called `ApolloProvider` higher up in your tree.') : invariant(client, 33);\n    return client;\n}\n//# sourceMappingURL=useApolloClient.js.map"],"names":["Grid","_a","children","className","hasGutter","span","order","style","props","__rest","classes","Object","entries","forEach","propKey","gridSpanModifier","key","propValue","push","assign","css","undefined","displayName","GridItem","rowSpan","offset","classModifier","rowSpanKey","offsetKey","spanValue","rowSpanValue","offsetValue","BaseSizes","DeviceSizes","exports","tslib_1","React","__importStar","react_styles_1","content_1","__importDefault","helpers_1","TextVariants","component","p","isVisitedLink","ouiaId","ouiaSafe","Component","ouiaProps","useOUIAProps","createElement","a","default","modifiers","visited","l_grid_item_Order","CodeEditor","code","language","isReadOnly","isDownloadEnabled","isCopyEnabled","height","intl","useIntl","isLanguageLabelVisible","emptyState","icon","LockIcon","variant","title","formatMessage","messages","text","propTypes","PropTypes","defaultProps","codeType","MessageState","iconClass","iconStyle","headingLevel","size","marginBottom","CubesIcon","EmptyStateVariant","SignatureDesctiprion","signature","useState","isCodeEditorEnabled","rawRule","Text","metadata","description","initialState","tableVars","limit","orderBy","ruleName","sortBy","index","direction","SortByDirection","rows","sortIndices","tableReducer","state","action","type","payload","SigTable","rv","value","setValue","chips","hasMatch","useReducer","stateSet","useQuery","GET_SIGNATURE_TABLE","variables","sigTableFilters","useEffect","probablySameValue","onNextChange","sigTableData","data","sigTableLoading","loading","sigTableError","error","columns","cellFormatters","expandable","transforms","cellWidth","sortable","page","FILTER_CATEGORIES","sig_match","urlParam","values","label","filterConfigItems","toLowerCase","filterValues","onChange","e","placeholder","field","id","tableFilters","condition","JSON","parse","stringify","items","onSetPage","onPerPageSelect","perPage","activeFiltersConfig","deleteTitle","filters","category","name","onDelete","event","itemsToRemove","isAll","map","item","rulesList","flatMap","sig","rowId","isOpen","cells","Link","to","StatusLabel","isDisabled","displayMatch","hostCount","toLocaleString","lastMatchDate","Tooltip","content","DateFormat","date","Date","parent","sigData","fullWidth","PrimaryToolbar","pagination","itemCount","rules","totalCount","isCompact","filterConfig","Table","onCollapse","rowKey","collapseRows","onSort","isStickyHeader","Loading","SearchIcon","Pagination","widgetId","PaginationVariant","gqlProps","color","buildApiFilters","tagFilters","otherFilters","tagsApiFilter","tags","tagFilter","tag","encodeURIComponent","tagKey","cache","createIntlCache","locale","navigator","slice","createIntl","defaultOnLoad","getRegistry","INVENTORY_ACTION_TYPES","mergeWithEntities","register","entitiesReducer","renderFunc","_","info","tooltip","totalMatches","lastScanDate","mergedColumns","defaultColumns","column","isStringCol","defaultColumn","find","defaultCol","appendDirection","attributes","attribute","findColumnByKey","s","t","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","console","concat","__assign","n","arguments","apply","this","BaseInvTable","history","useHistory","store","useStore","Cmp","Suspense","fallback","ScalprumComponent","appName","module","scope","ErrorComponent","ref","innerRef","InvTable","Bullseye","Spinner","SysTable","inventory","useRef","useContext","RegistryContext","dispatch","useDispatch","current","onRefreshData","query","onComplete","onError","client","fetchSystems","useCallback","GET_SYSTEM_TABLE","__DEV__","useApolloClient","requestVariables","fetchResults","fetchPolicy","then","result","entities","hostsList","meta","hosts","InventoryTable","isFullView","autoRefresh","initialLoading","hideFilters","all","onLoad","getEntities","_ids","per_page","orderDirection","sortableColumn","filterForApi","fetchedEntities","results","total","tableProps","canSelectAll","noSystemsTable"],"sourceRoot":""}